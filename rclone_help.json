{
  "version": "1.0",
  "subcommands": {
    "about": {
      "description": "Prints quota information about a remote to standard",
      "help_text": "Prints quota information about a remote to standard\noutput. The output is typically used, free, quota and trash contents.\n\nE.g. Typical output from `rclone about remote:` is:\n\n```text\nTotal:   17 GiB\nUsed:    7.444 GiB\nFree:    1.315 GiB\nTrashed: 100.000 MiB\nOther:   8.241 GiB\n```\n\nWhere the fields are:\n\n- Total: Total size available.\n- Used: Total size used.\n- Free: Total space available to this user.\n- Trashed: Total space used by trash.\n- Other: Total amount in other storage (e.g. Gmail, Google Photos).\n- Objects: Total number of objects in the storage.\n\nAll sizes are in number of bytes.\n\nApplying a `--full` flag to the command prints the bytes in full, e.g.\n\n```text\nTotal:   18253611008\nUsed:    7993453766\nFree:    1411001220\nTrashed: 104857602\nOther:   8849156022\n```\n\nA `--json` flag generates conveniently machine-readable output, e.g.\n\n```json\n{\n  \"total\": 18253611008,\n  \"used\": 7993453766,\n  \"trashed\": 104857602,\n  \"other\": 8849156022,\n  \"free\": 1411001220\n}\n```\n\nNot all backends print all fields. Information is not included if it is not\nprovided by a backend. Where the value is unlimited it is omitted.\n\nSome backends does not support the `rclone about` command at all,\nsee complete list in [documentation](https://rclone.org/overview/#optional-features).\n\nUsage:\n  rclone about remote: [flags]\n\nFlags:\n      --full   Full numbers instead of human-readable\n  -h, --help   help for about\n      --json   Format output as JSON\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--full",
          "description": "Full numbers instead of human-readable"
        },
        {
          "flag": "-h,",
          "description": "--help   help for about"
        },
        {
          "flag": "--json",
          "description": "Format output as JSON"
        }
      ]
    },
    "authorize": {
      "description": "Remote authorization. Used to authorize a remote or headless",
      "help_text": "Remote authorization. Used to authorize a remote or headless\nrclone from a machine with a browser - use as instructed by\nrclone config.\n\nThe command requires 1-3 arguments:\n\n- fs name (e.g., \"drive\", \"s3\", etc.)\n- Either a base64 encoded JSON blob obtained from a previous rclone config session\n- Or a client_id and client_secret pair obtained from the remote service\n\nUse --auth-no-open-browser to prevent rclone to open auth\nlink in default browser automatically.\n\nUse --template to generate HTML output via a custom Go template. If a blank\nstring is provided as an argument to this flag, the default template is used.\n\nUsage:\n  rclone authorize <fs name> [base64_json_blob | client_id client_secret] [flags]\n\nFlags:\n      --auth-no-open-browser   Do not automatically open auth link in default browser\n  -h, --help                   help for authorize\n      --template string        The path to a custom Go template for generating HTML responses\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--auth-no-open-browser",
          "description": "Do not automatically open auth link in default browser"
        },
        {
          "flag": "-h,",
          "description": "--help                   help for authorize"
        },
        {
          "flag": "--template",
          "description": "string        The path to a custom Go template for generating HTML responses"
        }
      ]
    },
    "backend": {
      "description": "This runs a backend-specific command. The commands themselves (except",
      "help_text": "This runs a backend-specific command. The commands themselves (except\nfor \"help\" and \"features\") are defined by the backends and you should\nsee the backend docs for definitions.\n\nYou can discover what commands a backend implements by using\n\n```sh\nrclone backend help remote:\nrclone backend help <backendname>\n```\n\nYou can also discover information about the backend using (see\n[operations/fsinfo](/rc/#operations-fsinfo) in the remote control docs\nfor more info).\n\n```sh\nrclone backend features remote:\n```\n\nPass options to the backend command with -o. This should be key=value or key, e.g.:\n\n```sh\nrclone backend stats remote:path stats -o format=json -o long\n```\n\nPass arguments to the backend by placing them on the end of the line\n\n```sh\nrclone backend cleanup remote:path file1 file2 file3\n```\n\nNote to run these commands on a running backend then see\n[backend/command](/rc/#backend-command) in the rc docs.\n\nUsage:\n  rclone backend <command> remote:path [opts] <args> [flags]\n\nFlags:\n  -h, --help                 help for backend\n      --json                 Always output in JSON format\n  -o, --option stringArray   Option in the form name=value or name\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help                 help for backend"
        },
        {
          "flag": "--json",
          "description": "Always output in JSON format"
        },
        {
          "flag": "-o,",
          "description": "--option stringArray   Option in the form name=value or name"
        }
      ]
    },
    "bisync": {
      "description": "Perform bidirectional synchronization between two paths.",
      "help_text": "Perform bidirectional synchronization between two paths.\n\n[Bisync](https://rclone.org/bisync/) provides a\nbidirectional cloud sync solution in rclone.\nIt retains the Path1 and Path2 filesystem listings from the prior run.\nOn each successive run it will:\n\n- list files on Path1 and Path2, and check for changes on each side.\n  Changes include `New`, `Newer`, `Older`, and `Deleted` files.\n- Propagate changes on Path1 to Path2, and vice-versa.\n\nBisync is considered an **advanced command**, so use with care.\nMake sure you have read and understood the entire [manual](https://rclone.org/bisync)\n(especially the [Limitations](https://rclone.org/bisync/#limitations) section)\nbefore using, or data loss can result. Questions can be asked in the\n[Rclone Forum](https://forum.rclone.org/).\n\nSee [full bisync description](https://rclone.org/bisync/) for details.\n\nUsage:\n  rclone bisync remote1:path1 remote2:path2 [flags]\n\nFlags:\n      --backup-dir1 string                   --backup-dir for Path1. Must be a non-overlapping path on the same remote.\n      --backup-dir2 string                   --backup-dir for Path2. Must be a non-overlapping path on the same remote.\n      --check-access                         Ensure expected RCLONE_TEST files are found on both Path1 and Path2 filesystems, else abort.\n      --check-filename string                Filename for --check-access (default: RCLONE_TEST)\n      --check-sync string                    Controls comparison of final listings: true|false|only (default: true) (default \"true\")\n      --compare string                       Comma-separated list of bisync-specific compare options ex. 'size,modtime,checksum' (default: 'size,modtime')\n      --conflict-loser ConflictLoserAction   Action to take on the loser of a sync conflict (when there is a winner) or on both files (when there is no winner): , num, pathname, delete (default: num)\n      --conflict-resolve string              Automatically resolve conflicts by preferring the version that is: none, path1, path2, newer, older, larger, smaller (default: none) (default \"none\")\n      --conflict-suffix string               Suffix to use when renaming a --conflict-loser. Can be either one string or two comma-separated strings to assign different suffixes to Path1/Path2. (default: 'conflict')\n      --create-empty-src-dirs                Sync creation and deletion of empty directories. (Not compatible with --remove-empty-dirs)\n      --download-hash                        Compute hash by downloading when otherwise unavailable. (warning: may be slow and use lots of data!)\n      --filters-file string                  Read filtering patterns from a file\n      --force                                Bypass --max-delete safety check and run the sync. Consider using with --verbose\n  -h, --help                                 help for bisync\n      --ignore-listing-checksum              Do not use checksums for listings (add --ignore-checksum to additionally skip post-copy checksum checks)\n      --max-lock Duration                    Consider lock files older than this to be expired (default: 0 (never expire)) (minimum: 2m) (default 0s)\n      --no-cleanup                           Retain working files (useful for troubleshooting and testing).\n      --no-slow-hash                         Ignore listing checksums only on backends where they are slow\n      --recover                              Automatically recover from interruptions without requiring --resync.\n      --remove-empty-dirs                    Remove ALL empty directories at the final cleanup step.\n      --resilient                            Allow future runs to retry after certain less-serious errors, instead of requiring --resync.\n  -1, --resync                               Performs the resync run. Equivalent to --resync-mode path1. Consider using --verbose or --dry-run first.\n      --resync-mode string                   During resync, prefer the version that is: path1, path2, newer, older, larger, smaller (default: path1 if --resync, otherwise none for no resync.) (default \"none\")\n      --slow-hash-sync-only                  Ignore slow checksums for listings and deltas, but still consider them during sync calls.\n      --workdir string                       Use custom working dir - useful for testing. (default: {WORKDIR})\n\nFlags for anything which can copy a file (flag group Copy):\n      --check-first                                 Do all the checks before starting transfers\n  -c, --checksum                                    Check for changes with size & checksum (if available, or fallback to size only)\n      --compare-dest stringArray                    Include additional server-side paths during comparison\n      --copy-dest stringArray                       Implies --compare-dest but also copies files from paths into destination\n      --cutoff-mode HARD|SOFT|CAUTIOUS              Mode to stop transfers when reaching the max transfer limit HARD|SOFT|CAUTIOUS (default HARD)\n      --ignore-case-sync                            Ignore case when synchronizing\n      --ignore-checksum                             Skip post copy check of checksums\n      --ignore-existing                             Skip all files that exist on destination\n      --ignore-size                                 Ignore size when skipping use modtime or checksum\n  -I, --ignore-times                                Don't skip items that match size and time - transfer all unconditionally\n      --immutable                                   Do not modify files, fail if existing files have been modified\n      --inplace                                     Download directly to destination file instead of atomic download to temp/rename\n  -l, --links                                       Translate symlinks to/from regular files with a '.rclonelink' extension\n      --max-backlog int                             Maximum number of objects in sync or check backlog (default 10000)\n      --max-duration Duration                       Maximum duration rclone will transfer data for (default 0s)\n      --max-transfer SizeSuffix                     Maximum size of data to transfer (default off)\n  -M, --metadata                                    If set, preserve metadata when copying objects\n      --modify-window Duration                      Max time diff to be considered the same (default 1ns)\n      --multi-thread-chunk-size SizeSuffix          Chunk size for multi-thread downloads / uploads, if not set by filesystem (default 64Mi)\n      --multi-thread-cutoff SizeSuffix              Use multi-thread downloads for files above this size (default 256Mi)\n      --multi-thread-streams int                    Number of streams to use for multi-thread downloads (default 4)\n      --multi-thread-write-buffer-size SizeSuffix   In memory buffer size for writing when in multi-thread mode (default 128Ki)\n      --name-transform stringArray                  Transform paths during the copy process\n      --no-check-dest                               Don't check the destination, copy regardless\n      --no-traverse                                 Don't traverse destination file system on copy\n      --no-update-dir-modtime                       Don't update directory modification times\n      --no-update-modtime                           Don't update destination modtime if files identical\n      --order-by string                             Instructions on how to order the transfers, e.g. 'size,descending'\n      --partial-suffix string                       Add partial-suffix to temporary file name when --inplace is not used (default \".partial\")\n      --refresh-times                               Refresh the modtime of remote files\n      --server-side-across-configs                  Allow server-side operations (e.g. copy) to work across different configs\n      --size-only                                   Skip based on size only, not modtime or checksum\n      --streaming-upload-cutoff SizeSuffix          Cutoff for switching to chunked upload if file size is unknown, upload starts after reaching cutoff or when file ends (default 100Ki)\n  -u, --update                                      Skip files that are newer on the destination\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--backup-dir1",
          "description": "string                   --backup-dir for Path1. Must be a non-overlapping path on the same remote."
        },
        {
          "flag": "--backup-dir2",
          "description": "string                   --backup-dir for Path2. Must be a non-overlapping path on the same remote."
        },
        {
          "flag": "--check-access",
          "description": "Ensure expected RCLONE_TEST files are found on both Path1 and Path2 filesystems, else abort."
        },
        {
          "flag": "--check-filename",
          "description": "string                Filename for --check-access (default: RCLONE_TEST)"
        },
        {
          "flag": "--check-sync",
          "description": "string                    Controls comparison of final listings: true|false|only (default: true) (default \"true\")"
        },
        {
          "flag": "--compare",
          "description": "string                       Comma-separated list of bisync-specific compare options ex. 'size,modtime,checksum' (default: 'size,modtime')"
        },
        {
          "flag": "--conflict-loser",
          "description": "ConflictLoserAction   Action to take on the loser of a sync conflict (when there is a winner) or on both files (when there is no winner): , num, pathname, delete (default: num)"
        },
        {
          "flag": "--conflict-resolve",
          "description": "string              Automatically resolve conflicts by preferring the version that is: none, path1, path2, newer, older, larger, smaller (default: none) (default \"none\")"
        },
        {
          "flag": "--conflict-suffix",
          "description": "string               Suffix to use when renaming a --conflict-loser. Can be either one string or two comma-separated strings to assign different suffixes to Path1/Path2. (default: 'conflict')"
        },
        {
          "flag": "--create-empty-src-dirs",
          "description": "Sync creation and deletion of empty directories. (Not compatible with --remove-empty-dirs)"
        },
        {
          "flag": "--download-hash",
          "description": "Compute hash by downloading when otherwise unavailable. (warning: may be slow and use lots of data!)"
        },
        {
          "flag": "--filters-file",
          "description": "string                  Read filtering patterns from a file"
        },
        {
          "flag": "--force",
          "description": "Bypass --max-delete safety check and run the sync. Consider using with --verbose"
        },
        {
          "flag": "-h,",
          "description": "--help                                 help for bisync"
        },
        {
          "flag": "--ignore-listing-checksum",
          "description": "Do not use checksums for listings (add --ignore-checksum to additionally skip post-copy checksum checks)"
        },
        {
          "flag": "--max-lock",
          "description": "Duration                    Consider lock files older than this to be expired (default: 0 (never expire)) (minimum: 2m) (default 0s)"
        },
        {
          "flag": "--no-cleanup",
          "description": "Retain working files (useful for troubleshooting and testing)."
        },
        {
          "flag": "--no-slow-hash",
          "description": "Ignore listing checksums only on backends where they are slow"
        },
        {
          "flag": "--recover",
          "description": "Automatically recover from interruptions without requiring --resync."
        },
        {
          "flag": "--remove-empty-dirs",
          "description": "Remove ALL empty directories at the final cleanup step."
        },
        {
          "flag": "--resilient",
          "description": "Allow future runs to retry after certain less-serious errors, instead of requiring --resync."
        },
        {
          "flag": "-1,",
          "description": "--resync                               Performs the resync run. Equivalent to --resync-mode path1. Consider using --verbose or --dry-run first."
        },
        {
          "flag": "--resync-mode",
          "description": "string                   During resync, prefer the version that is: path1, path2, newer, older, larger, smaller (default: path1 if --resync, otherwise none for no resync.) (default \"none\")"
        },
        {
          "flag": "--slow-hash-sync-only",
          "description": "Ignore slow checksums for listings and deltas, but still consider them during sync calls."
        },
        {
          "flag": "--workdir",
          "description": "string                       Use custom working dir - useful for testing. (default: {WORKDIR})"
        }
      ]
    },
    "cat": {
      "description": "Sends any files to standard output.",
      "help_text": "Sends any files to standard output.\n\nYou can use it like this to output a single file\n\n```sh\nrclone cat remote:path/to/file\n```\n\nOr like this to output any file in dir or its subdirectories.\n\n```sh\nrclone cat remote:path/to/dir\n```\n\nOr like this to output any .txt files in dir or its subdirectories.\n\n```sh\nrclone --include \"*.txt\" cat remote:path/to/dir\n```\n\nUse the `--head` flag to print characters only at the start, `--tail` for\nthe end and `--offset` and `--count` to print a section in the middle.\nNote that if offset is negative it will count from the end, so\n`--offset -1 --count 1` is equivalent to `--tail 1`.\n\nUse the `--separator` flag to print a separator value between files. Be sure to\nshell-escape special characters. For example, to print a newline between\nfiles, use:\n\n- bash:\n\n  ```sh\n  rclone --include \"*.txt\" --separator $'\\n' cat remote:path/to/dir\n  ```\n\n- powershell:\n\n  ```powershell\n  rclone --include \"*.txt\" --separator \"`n\" cat remote:path/to/dir\n  ```\n\nUsage:\n  rclone cat remote:path [flags]\n\nFlags:\n      --count int          Only print N characters (default -1)\n      --discard            Discard the output instead of printing\n      --head int           Only print the first N characters\n  -h, --help               help for cat\n      --offset int         Start printing at offset N (or from end if -ve)\n      --separator string   Separator to use between objects when printing multiple files\n      --tail int           Only print the last N characters\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--count",
          "description": "int          Only print N characters (default -1)"
        },
        {
          "flag": "--discard",
          "description": "Discard the output instead of printing"
        },
        {
          "flag": "--head",
          "description": "int           Only print the first N characters"
        },
        {
          "flag": "-h,",
          "description": "--help               help for cat"
        },
        {
          "flag": "--offset",
          "description": "int         Start printing at offset N (or from end if -ve)"
        },
        {
          "flag": "--separator",
          "description": "string   Separator to use between objects when printing multiple files"
        },
        {
          "flag": "--tail",
          "description": "int           Only print the last N characters"
        }
      ]
    },
    "check": {
      "description": "Checks the files in the source and destination match.  It compares",
      "help_text": "Checks the files in the source and destination match.  It compares\nsizes and hashes (MD5 or SHA1) and logs a report of files that don't\nmatch.  It doesn't alter the source or destination.\n\nFor the [crypt](/crypt/) remote there is a dedicated command,\n[cryptcheck](/commands/rclone_cryptcheck/), that are able to check\nthe checksums of the encrypted files.\n\nIf you supply the `--size-only` flag, it will only compare the sizes not\nthe hashes as well.  Use this for a quick check.\n\nIf you supply the `--download` flag, it will download the data from\nboth remotes and check them against each other on the fly.  This can\nbe useful for remotes that don't support hashes or if you really want\nto check all the data.\n\nIf you supply the `--checkfile HASH` flag with a valid hash name,\nthe `source:path` must point to a text file in the SUM format.\n\nIf you supply the `--one-way` flag, it will only check that files in\nthe source match the files in the destination, not the other way\naround. This means that extra files in the destination that are not in\nthe source will not be detected.\n\nThe `--differ`, `--missing-on-dst`, `--missing-on-src`, `--match`\nand `--error` flags write paths, one per line, to the file name (or\nstdout if it is `-`) supplied. What they write is described in the\nhelp below. For example `--differ` will write all paths which are\npresent on both the source and destination but different.\n\nThe `--combined` flag will write a file (or stdout) which contains all\nfile paths with a symbol and then a space and then the path to tell\nyou what happened to it. These are reminiscent of diff files.\n\n- `= path` means path was found in source and destination and was identical\n- `- path` means path was missing on the source, so only in the destination\n- `+ path` means path was missing on the destination, so only in the source\n- `* path` means path was present in source and destination but different.\n- `! path` means there was an error reading or hashing the source or dest.\n\nThe default number of parallel checks is 8. See the [--checkers](/docs/#checkers-int)\noption for more information.\n\nUsage:\n  rclone check source:path dest:path [flags]\n\nFlags:\n  -C, --checkfile string        Treat source:path as a SUM file with hashes of given type\n      --combined string         Make a combined report of changes to this file\n      --differ string           Report all non-matching files to this file\n      --download                Check by downloading rather than with hash\n      --error string            Report all files with errors (hashing or reading) to this file\n  -h, --help                    help for check\n      --match string            Report all matching files to this file\n      --missing-on-dst string   Report all files missing from the destination to this file\n      --missing-on-src string   Report all files missing from the source to this file\n      --one-way                 Check one way only, source files must exist on remote\n\nFlags used for check commands (flag group Check):\n      --max-backlog int   Maximum number of objects in sync or check backlog (default 10000)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-C,",
          "description": "--checkfile string        Treat source:path as a SUM file with hashes of given type"
        },
        {
          "flag": "--combined",
          "description": "string         Make a combined report of changes to this file"
        },
        {
          "flag": "--differ",
          "description": "string           Report all non-matching files to this file"
        },
        {
          "flag": "--download",
          "description": "Check by downloading rather than with hash"
        },
        {
          "flag": "--error",
          "description": "string            Report all files with errors (hashing or reading) to this file"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for check"
        },
        {
          "flag": "--match",
          "description": "string            Report all matching files to this file"
        },
        {
          "flag": "--missing-on-dst",
          "description": "string   Report all files missing from the destination to this file"
        },
        {
          "flag": "--missing-on-src",
          "description": "string   Report all files missing from the source to this file"
        },
        {
          "flag": "--one-way",
          "description": "Check one way only, source files must exist on remote"
        }
      ]
    },
    "checksum": {
      "description": "Checks that hashsums of destination files match the SUM file.",
      "help_text": "Checks that hashsums of destination files match the SUM file.\nIt compares hashes (MD5, SHA1, etc) and logs a report of files which\ndon't match.  It doesn't alter the file system.\n\nThe sumfile is treated as the source and the dst:path is treated as\nthe destination for the purposes of the output.\n\nIf you supply the `--download` flag, it will download the data from the remote\nand calculate the content hash on the fly.  This can be useful for remotes\nthat don't support hashes or if you really want to check all the data.\n\nNote that hash values in the SUM file are treated as case insensitive.\n\nIf you supply the `--one-way` flag, it will only check that files in\nthe source match the files in the destination, not the other way\naround. This means that extra files in the destination that are not in\nthe source will not be detected.\n\nThe `--differ`, `--missing-on-dst`, `--missing-on-src`, `--match`\nand `--error` flags write paths, one per line, to the file name (or\nstdout if it is `-`) supplied. What they write is described in the\nhelp below. For example `--differ` will write all paths which are\npresent on both the source and destination but different.\n\nThe `--combined` flag will write a file (or stdout) which contains all\nfile paths with a symbol and then a space and then the path to tell\nyou what happened to it. These are reminiscent of diff files.\n\n- `= path` means path was found in source and destination and was identical\n- `- path` means path was missing on the source, so only in the destination\n- `+ path` means path was missing on the destination, so only in the source\n- `* path` means path was present in source and destination but different.\n- `! path` means there was an error reading or hashing the source or dest.\n\nThe default number of parallel checks is 8. See the [--checkers](/docs/#checkers-int)\noption for more information.\n\nUsage:\n  rclone checksum <hash> sumfile dst:path [flags]\n\nFlags:\n      --combined string         Make a combined report of changes to this file\n      --differ string           Report all non-matching files to this file\n      --download                Check by hashing the contents\n      --error string            Report all files with errors (hashing or reading) to this file\n  -h, --help                    help for checksum\n      --match string            Report all matching files to this file\n      --missing-on-dst string   Report all files missing from the destination to this file\n      --missing-on-src string   Report all files missing from the source to this file\n      --one-way                 Check one way only, source files must exist on remote\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--combined",
          "description": "string         Make a combined report of changes to this file"
        },
        {
          "flag": "--differ",
          "description": "string           Report all non-matching files to this file"
        },
        {
          "flag": "--download",
          "description": "Check by hashing the contents"
        },
        {
          "flag": "--error",
          "description": "string            Report all files with errors (hashing or reading) to this file"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for checksum"
        },
        {
          "flag": "--match",
          "description": "string            Report all matching files to this file"
        },
        {
          "flag": "--missing-on-dst",
          "description": "string   Report all files missing from the destination to this file"
        },
        {
          "flag": "--missing-on-src",
          "description": "string   Report all files missing from the source to this file"
        },
        {
          "flag": "--one-way",
          "description": "Check one way only, source files must exist on remote"
        }
      ]
    },
    "cleanup": {
      "description": "Clean up the remote if possible.  Empty the trash or delete old file",
      "help_text": "Clean up the remote if possible.  Empty the trash or delete old file\nversions. Not supported by all remotes.\n\nUsage:\n  rclone cleanup remote:path [flags]\n\nFlags:\n  -h, --help   help for cleanup\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for cleanup"
        }
      ]
    },
    "completion": {
      "description": "Generates a shell completion script for rclone.",
      "help_text": "Generates a shell completion script for rclone.\nRun with `--help` to list the supported shells.\n\nUsage:\n  rclone completion [command]\n\nAliases:\n  completion, genautocomplete\n\nAvailable commands:\n  bash        Output bash completion script for rclone.\n  fish        Output fish completion script for rclone.\n  powershell  Output powershell completion script for rclone.\n  zsh         Output zsh completion script for rclone.\n\nFlags:\n  -h, --help   help for completion\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for completion"
        }
      ]
    },
    "config": {
      "description": "Enter an interactive configuration session where you can setup new",
      "help_text": "Enter an interactive configuration session where you can setup new\nremotes and manage existing ones. You may also set or remove a\npassword to protect your configuration.\n\nUsage:\n  rclone config [flags]\n  rclone config [command]\n\nAvailable commands:\n  create      Create a new remote with name, type and options.\n  delete      Delete an existing remote.\n  disconnect  Disconnects user from remote\n  dump        Dump the config file as JSON.\n  edit        Enter an interactive configuration session.\n  encryption  set, remove and check the encryption for the config file\n  file        Show path of configuration file in use.\n  password    Update password in an existing remote.\n  paths       Show paths used for configuration, cache, temp etc.\n  providers   List in JSON format all the providers and options.\n  reconnect   Re-authenticates user with remote.\n  redacted    Print redacted (decrypted) config file, or the redacted config for a single remote.\n  show        Print (decrypted) config file, or the config for a single remote.\n  touch       Ensure configuration file exists.\n  update      Update options in an existing remote.\n  userinfo    Prints info about logged in user of remote.\n\nFlags:\n  -h, --help   help for config\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for config"
        }
      ]
    },
    "convmv": {
      "description": "convmv supports advanced path name transformations for converting and renaming",
      "help_text": "convmv supports advanced path name transformations for converting and renaming\nfiles and directories by applying prefixes, suffixes, and other alterations.\n\n| Command | Description |\n|------|------|\n| `--name-transform prefix=XXXX` | Prepends XXXX to the file name. |\n| `--name-transform suffix=XXXX` | Appends XXXX to the file name after the extension. |\n| `--name-transform suffix_keep_extension=XXXX` | Appends XXXX to the file name while preserving the original file extension. |\n| `--name-transform trimprefix=XXXX` | Removes XXXX if it appears at the start of the file name. |\n| `--name-transform trimsuffix=XXXX` | Removes XXXX if it appears at the end of the file name. |\n| `--name-transform regex=pattern/replacement` | Applies a regex-based transformation. |\n| `--name-transform replace=old:new` | Replaces occurrences of old with new in the file name. |\n| `--name-transform date={YYYYMMDD}` | Appends or prefixes the specified date format. |\n| `--name-transform truncate=N` | Truncates the file name to a maximum of N characters. |\n| `--name-transform truncate_keep_extension=N` | Truncates the file name to a maximum of N characters while preserving the original file extension. |\n| `--name-transform truncate_bytes=N` | Truncates the file name to a maximum of N bytes (not characters). |\n| `--name-transform truncate_bytes_keep_extension=N` | Truncates the file name to a maximum of N bytes (not characters) while preserving the original file extension. |\n| `--name-transform base64encode` | Encodes the file name in Base64. |\n| `--name-transform base64decode` | Decodes a Base64-encoded file name. |\n| `--name-transform encoder=ENCODING` | Converts the file name to the specified encoding (e.g., ISO-8859-1, Windows-1252, Macintosh). |\n| `--name-transform decoder=ENCODING` | Decodes the file name from the specified encoding. |\n| `--name-transform charmap=MAP` | Applies a character mapping transformation. |\n| `--name-transform lowercase` | Converts the file name to lowercase. |\n| `--name-transform uppercase` | Converts the file name to UPPERCASE. |\n| `--name-transform titlecase` | Converts the file name to Title Case. |\n| `--name-transform ascii` | Strips non-ASCII characters. |\n| `--name-transform url` | URL-encodes the file name. |\n| `--name-transform nfc` | Converts the file name to NFC Unicode normalization form. |\n| `--name-transform nfd` | Converts the file name to NFD Unicode normalization form. |\n| `--name-transform nfkc` | Converts the file name to NFKC Unicode normalization form. |\n| `--name-transform nfkd` | Converts the file name to NFKD Unicode normalization form. |\n| `--name-transform command=/path/to/my/programfile names.` | Executes an external program to transform. |\n\nConversion modes:\n\n```text\nnone\nnfc\nnfd\nnfkc\nnfkd\nreplace\nprefix\nsuffix\nsuffix_keep_extension\ntrimprefix\ntrimsuffix\nindex\ndate\ntruncate\ntruncate_keep_extension\ntruncate_bytes\ntruncate_bytes_keep_extension\nbase64encode\nbase64decode\nencoder\ndecoder\nISO-8859-1\nWindows-1252\nMacintosh\ncharmap\nlowercase\nuppercase\ntitlecase\nascii\nurl\nregex\ncommand\n```\n\nChar maps:\n\n```text\nIBM-Code-Page-037\nIBM-Code-Page-437\nIBM-Code-Page-850\nIBM-Code-Page-852\nIBM-Code-Page-855\nWindows-Code-Page-858\nIBM-Code-Page-860\nIBM-Code-Page-862\nIBM-Code-Page-863\nIBM-Code-Page-865\nIBM-Code-Page-866\nIBM-Code-Page-1047\nIBM-Code-Page-1140\nISO-8859-1\nISO-8859-2\nISO-8859-3\nISO-8859-4\nISO-8859-5\nISO-8859-6\nISO-8859-7\nISO-8859-8\nISO-8859-9\nISO-8859-10\nISO-8859-13\nISO-8859-14\nISO-8859-15\nISO-8859-16\nKOI8-R\nKOI8-U\nMacintosh\nMacintosh-Cyrillic\nWindows-874\nWindows-1250\nWindows-1251\nWindows-1252\nWindows-1253\nWindows-1254\nWindows-1255\nWindows-1256\nWindows-1257\nWindows-1258\nX-User-Defined\n```\n\nEncoding masks:\n\n```text\nAsterisk\nBackQuote\nBackSlash\nColon\nCrLf\nCtl\nDel\nDollar\nDot\nDoubleQuote\nExclamation\nHash\nInvalidUtf8\nLeftCrLfHtVt\nLeftPeriod\nLeftSpace\nLeftTilde\nLtGt\nNone\nPercent\nPipe\nQuestion\nRaw\nRightCrLfHtVt\nRightPeriod\nRightSpace\nSemicolon\nSingleQuote\nSlash\nSquareBracket\n```\n\nExamples:\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!.txt\" --name-transform \"all,uppercase\"\n// Output: STORIES/THE QUICK BROWN FOX!.TXT\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!.txt\" --name-transform \"all,replace=Fox:Turtle\" --name-transform \"all,replace=Quick:Slow\"\n// Output: stories/The Slow Brown Turtle!.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!.txt\" --name-transform \"all,base64encode\"\n// Output: c3Rvcmllcw==/VGhlIFF1aWNrIEJyb3duIEZveCEudHh0\n```\n\n```sh\nrclone convmv \"c3Rvcmllcw==/VGhlIFF1aWNrIEJyb3duIEZveCEudHh0\" --name-transform \"all,base64decode\"\n// Output: stories/The Quick Brown Fox!.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown \ud83e\udd8a Fox Went to the Caf\u00e9!.txt\" --name-transform \"all,nfc\"\n// Output: stories/The Quick Brown \ud83e\udd8a Fox Went to the Caf\u00e9!.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown \ud83e\udd8a Fox Went to the Caf\u00e9!.txt\" --name-transform \"all,nfd\"\n// Output: stories/The Quick Brown \ud83e\udd8a Fox Went to the Cafe\u0301!.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown \ud83e\udd8a Fox!.txt\" --name-transform \"all,ascii\"\n// Output: stories/The Quick Brown  Fox!.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!.txt\" --name-transform \"all,trimsuffix=.txt\"\n// Output: stories/The Quick Brown Fox!\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!.txt\" --name-transform \"all,prefix=OLD_\"\n// Output: OLD_stories/OLD_The Quick Brown Fox!.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown \ud83e\udd8a Fox Went to the Caf\u00e9!.txt\" --name-transform \"all,charmap=ISO-8859-7\"\n// Output: stories/The Quick Brown _ Fox Went to the Caf_!.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox: A Memoir [draft].txt\" --name-transform \"all,encoder=Colon,SquareBracket\"\n// Output: stories/The Quick Brown Fox\uff1a A Memoir \uff3bdraft\uff3d.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown \ud83e\udd8a Fox Went to the Caf\u00e9!.txt\" --name-transform \"all,truncate=21\"\n// Output: stories/The Quick Brown \ud83e\udd8a Fox\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!.txt\" --name-transform \"all,command=echo\"\n// Output: stories/The Quick Brown Fox!.txt\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!\" --name-transform \"date=-{YYYYMMDD}\"\n// Output: stories/The Quick Brown Fox!-20250924\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!\" --name-transform \"date=-{macfriendlytime}\"\n// Output: stories/The Quick Brown Fox!-2025-09-24 0423PM\n```\n\n```sh\nrclone convmv \"stories/The Quick Brown Fox!.txt\" --name-transform \"all,regex=[\\\\.\\\\w]/ab\"\n// Output: ababababababab/ababab ababababab ababababab ababab!abababab\n```\n\nThe regex command generally accepts Perl-style regular expressions, the exact\nsyntax is defined in the [Go regular expression reference](https://golang.org/pkg/regexp/syntax/).\nThe replacement string may contain capturing group variables, referencing\ncapturing groups using the syntax `$name` or `${name}`, where the name can\nrefer to a named capturing group or it can simply be the index as a number.\nTo insert a literal $, use $$.\n\nMultiple transformations can be used in sequence, applied\nin the order they are specified on the command line.\n\nThe `--name-transform` flag is also available in `sync`, `copy`, and `move`.\n\n### Files vs Directories\n\nBy default `--name-transform` will only apply to file names. The means only the\nleaf file name will be transformed. However some of the transforms would be\nbetter applied to the whole path or just directories. To choose which which\npart of the file path is affected some tags can be added to the `--name-transform`.\n\n| Tag | Effect |\n|------|------|\n| `file` | Only transform the leaf name of files (DEFAULT) |\n| `dir` | Only transform name of directories - these may appear anywhere in the path |\n| `all` | Transform the entire path for files and directories |\n\nThis is used by adding the tag into the transform name like this:\n`--name-transform file,prefix=ABC` or `--name-transform dir,prefix=DEF`.\n\nFor some conversions using all is more likely to be useful, for example\n`--name-transform all,nfc`.\n\nNote that `--name-transform` may not add path separators `/` to the name.\nThis will cause an error.\n\n### Ordering and Conflicts\n\n- Transformations will be applied in the order specified by the user.\n  - If the `file` tag is in use (the default) then only the leaf name of files\n    will be transformed.\n  - If the `dir` tag is in use then directories anywhere in the path will be\n    transformed\n  - If the `all` tag is in use then directories and files anywhere in the path\n    will be transformed\n  - Each transformation will be run one path segment at a time.\n  - If a transformation adds a `/` or ends up with an empty path segment then\n    that will be an error.\n- It is up to the user to put the transformations in a sensible order.\n  - Conflicting transformations, such as `prefix` followed by `trimprefix` or\n    `nfc` followed by `nfd`, are possible.\n  - Instead of enforcing mutual exclusivity, transformations are applied in\n    sequence as specified by the user, allowing for intentional use cases\n    (e.g., trimming one prefix before adding another).\n  - Users should be aware that certain combinations may lead to unexpected\n    results and should verify transformations using `--dry-run` before execution.\n\n### Race Conditions and Non-Deterministic Behavior\n\nSome transformations, such as `replace=old:new`, may introduce conflicts where\nmultiple source files map to the same destination name. This can lead to race\nconditions when performing concurrent transfers. It is up to the user to\nanticipate these.\n\n- If two files from the source are transformed into the same name at the\n  destination, the final state may be non-deterministic.\n- Running rclone check after a sync using such transformations may erroneously\n  report missing or differing files due to overwritten results.\n\nTo minimize risks, users should:\n\n- Carefully review transformations that may introduce conflicts.\n- Use `--dry-run` to inspect changes before executing a sync (but keep in mind\n  that it won't show the effect of non-deterministic transformations).\n- Avoid transformations that cause multiple distinct source files to map to the\n  same destination name.\n- Consider disabling concurrency with `--transfers=1` if necessary.\n- Certain transformations (e.g. `prefix`) will have a multiplying effect every\n  time they are used. Avoid these when using `bisync`.\n\nUsage:\n  rclone convmv dest:path --name-transform XXX [flags]\n\nFlags:\n      --create-empty-src-dirs   Create empty source dirs on destination after move\n      --delete-empty-src-dirs   Delete empty source dirs after move\n  -h, --help                    help for convmv\n\nFlags for anything which can copy a file (flag group Copy):\n      --check-first                                 Do all the checks before starting transfers\n  -c, --checksum                                    Check for changes with size & checksum (if available, or fallback to size only)\n      --compare-dest stringArray                    Include additional server-side paths during comparison\n      --copy-dest stringArray                       Implies --compare-dest but also copies files from paths into destination\n      --cutoff-mode HARD|SOFT|CAUTIOUS              Mode to stop transfers when reaching the max transfer limit HARD|SOFT|CAUTIOUS (default HARD)\n      --ignore-case-sync                            Ignore case when synchronizing\n      --ignore-checksum                             Skip post copy check of checksums\n      --ignore-existing                             Skip all files that exist on destination\n      --ignore-size                                 Ignore size when skipping use modtime or checksum\n  -I, --ignore-times                                Don't skip items that match size and time - transfer all unconditionally\n      --immutable                                   Do not modify files, fail if existing files have been modified\n      --inplace                                     Download directly to destination file instead of atomic download to temp/rename\n  -l, --links                                       Translate symlinks to/from regular files with a '.rclonelink' extension\n      --max-backlog int                             Maximum number of objects in sync or check backlog (default 10000)\n      --max-duration Duration                       Maximum duration rclone will transfer data for (default 0s)\n      --max-transfer SizeSuffix                     Maximum size of data to transfer (default off)\n  -M, --metadata                                    If set, preserve metadata when copying objects\n      --modify-window Duration                      Max time diff to be considered the same (default 1ns)\n      --multi-thread-chunk-size SizeSuffix          Chunk size for multi-thread downloads / uploads, if not set by filesystem (default 64Mi)\n      --multi-thread-cutoff SizeSuffix              Use multi-thread downloads for files above this size (default 256Mi)\n      --multi-thread-streams int                    Number of streams to use for multi-thread downloads (default 4)\n      --multi-thread-write-buffer-size SizeSuffix   In memory buffer size for writing when in multi-thread mode (default 128Ki)\n      --name-transform stringArray                  Transform paths during the copy process\n      --no-check-dest                               Don't check the destination, copy regardless\n      --no-traverse                                 Don't traverse destination file system on copy\n      --no-update-dir-modtime                       Don't update directory modification times\n      --no-update-modtime                           Don't update destination modtime if files identical\n      --order-by string                             Instructions on how to order the transfers, e.g. 'size,descending'\n      --partial-suffix string                       Add partial-suffix to temporary file name when --inplace is not used (default \".partial\")\n      --refresh-times                               Refresh the modtime of remote files\n      --server-side-across-configs                  Allow server-side operations (e.g. copy) to work across different configs\n      --size-only                                   Skip based on size only, not modtime or checksum\n      --streaming-upload-cutoff SizeSuffix          Cutoff for switching to chunked upload if file size is unknown, upload starts after reaching cutoff or when file ends (default 100Ki)\n  -u, --update                                      Skip files that are newer on the destination\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--create-empty-src-dirs",
          "description": "Create empty source dirs on destination after move"
        },
        {
          "flag": "--delete-empty-src-dirs",
          "description": "Delete empty source dirs after move"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for convmv"
        }
      ]
    },
    "copy": {
      "description": "Copy the source to the destination.  Does not transfer files that are",
      "help_text": "Copy the source to the destination.  Does not transfer files that are\nidentical on source and destination, testing by size and modification\ntime or MD5SUM.  Doesn't delete files from the destination. If you\nwant to also delete files from destination, to make it match source,\nuse the [sync](/commands/rclone_sync/) command instead.\n\nNote that it is always the contents of the directory that is synced,\nnot the directory itself. So when source:path is a directory, it's the\ncontents of source:path that are copied, not the directory name and\ncontents.\n\nTo copy single files, use the [copyto](/commands/rclone_copyto/)\ncommand instead.\n\nIf dest:path doesn't exist, it is created and the source:path contents\ngo there.\n\nFor example\n\n```sh\nrclone copy source:sourcepath dest:destpath\n```\n\nLet's say there are two files in sourcepath\n\n```text\nsourcepath/one.txt\nsourcepath/two.txt\n```\n\nThis copies them to\n\n```text\ndestpath/one.txt\ndestpath/two.txt\n```\n\nNot to\n\n```text\ndestpath/sourcepath/one.txt\ndestpath/sourcepath/two.txt\n```\n\nIf you are familiar with `rsync`, rclone always works as if you had\nwritten a trailing `/` - meaning \"copy the contents of this directory\".\nThis applies to all commands and whether you are talking about the\nsource or destination.\n\nSee the [--no-traverse](/docs/#no-traverse) option for controlling\nwhether rclone lists the destination directory or not.  Supplying this\noption when copying a small number of files into a large destination\ncan speed transfers up greatly.\n\nFor example, if you have many files in /path/to/src but only a few of\nthem change every day, you can copy all the files which have changed\nrecently very efficiently like this:\n\n```sh\nrclone copy --max-age 24h --no-traverse /path/to/src remote:\n```\n\nRclone will sync the modification times of files and directories if\nthe backend supports it. If metadata syncing is required then use the\n`--metadata` flag.\n\nNote that the modification time and metadata for the root directory\nwill **not** be synced. See [issue #7652](https://github.com/rclone/rclone/issues/7652)\nfor more info.\n\n**Note**: Use the `-P`/`--progress` flag to view real-time transfer statistics.\n\n**Note**: Use the `--dry-run` or the `--interactive`/`-i` flag to test without\ncopying anything.\n\n### Logger Flags\n\nThe `--differ`, `--missing-on-dst`, `--missing-on-src`, `--match` and `--error`\nflags write paths, one per line, to the file name (or stdout if it is `-`)\nsupplied. What they write is described in the help below. For example\n`--differ` will write all paths which are present on both the source and\ndestination but different.\n\nThe `--combined` flag will write a file (or stdout) which contains all\nfile paths with a symbol and then a space and then the path to tell\nyou what happened to it. These are reminiscent of diff files.\n\n- `= path` means path was found in source and destination and was identical\n- `- path` means path was missing on the source, so only in the destination\n- `+ path` means path was missing on the destination, so only in the source\n- `* path` means path was present in source and destination but different.\n- `! path` means there was an error reading or hashing the source or dest.\n\nThe `--dest-after` flag writes a list file using the same format flags\nas [`lsf`](/commands/rclone_lsf/#synopsis) (including [customizable options\nfor hash, modtime, etc.](/commands/rclone_lsf/#synopsis))\nConceptually it is similar to rsync's `--itemize-changes`, but not identical\n-- it should output an accurate list of what will be on the destination\nafter the command is finished.\n\nWhen the `--no-traverse` flag is set, all logs involving files that exist only\non the destination will be incomplete or completely missing.\n\nNote that these logger flags have a few limitations, and certain scenarios\nare not currently supported:\n\n- `--max-duration` / `CutoffModeHard`\n- `--compare-dest` / `--copy-dest`\n- server-side moves of an entire dir at once\n- High-level retries, because there would be duplicates (use `--retries 1` to disable)\n- Possibly some unusual error scenarios\n\nNote also that each file is logged during execution, as opposed to after, so it\nis most useful as a predictor of what SHOULD happen to each file\n(which may or may not match what actually DID).\n\nUsage:\n  rclone copy source:path dest:path [flags]\n\nFlags:\n      --absolute                Put a leading / in front of path names\n      --combined string         Make a combined report of changes to this file\n      --create-empty-src-dirs   Create empty source dirs on destination after copy\n      --csv                     Output in CSV format\n      --dest-after string       Report all files that exist on the dest post-sync\n      --differ string           Report all non-matching files to this file\n  -d, --dir-slash               Append a slash to directory names (default true)\n      --dirs-only               Only list directories\n      --error string            Report all files with errors (hashing or reading) to this file\n      --files-only              Only list files (default true)\n  -F, --format string           Output format - see lsf help for details (default \"p\")\n      --hash h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")\n  -h, --help                    help for copy\n      --match string            Report all matching files to this file\n      --missing-on-dst string   Report all files missing from the destination to this file\n      --missing-on-src string   Report all files missing from the source to this file\n  -s, --separator string        Separator for the items in the format (default \";\")\n  -t, --timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)\n\nFlags for anything which can copy a file (flag group Copy):\n      --check-first                                 Do all the checks before starting transfers\n  -c, --checksum                                    Check for changes with size & checksum (if available, or fallback to size only)\n      --compare-dest stringArray                    Include additional server-side paths during comparison\n      --copy-dest stringArray                       Implies --compare-dest but also copies files from paths into destination\n      --cutoff-mode HARD|SOFT|CAUTIOUS              Mode to stop transfers when reaching the max transfer limit HARD|SOFT|CAUTIOUS (default HARD)\n      --ignore-case-sync                            Ignore case when synchronizing\n      --ignore-checksum                             Skip post copy check of checksums\n      --ignore-existing                             Skip all files that exist on destination\n      --ignore-size                                 Ignore size when skipping use modtime or checksum\n  -I, --ignore-times                                Don't skip items that match size and time - transfer all unconditionally\n      --immutable                                   Do not modify files, fail if existing files have been modified\n      --inplace                                     Download directly to destination file instead of atomic download to temp/rename\n  -l, --links                                       Translate symlinks to/from regular files with a '.rclonelink' extension\n      --max-backlog int                             Maximum number of objects in sync or check backlog (default 10000)\n      --max-duration Duration                       Maximum duration rclone will transfer data for (default 0s)\n      --max-transfer SizeSuffix                     Maximum size of data to transfer (default off)\n  -M, --metadata                                    If set, preserve metadata when copying objects\n      --modify-window Duration                      Max time diff to be considered the same (default 1ns)\n      --multi-thread-chunk-size SizeSuffix          Chunk size for multi-thread downloads / uploads, if not set by filesystem (default 64Mi)\n      --multi-thread-cutoff SizeSuffix              Use multi-thread downloads for files above this size (default 256Mi)\n      --multi-thread-streams int                    Number of streams to use for multi-thread downloads (default 4)\n      --multi-thread-write-buffer-size SizeSuffix   In memory buffer size for writing when in multi-thread mode (default 128Ki)\n      --name-transform stringArray                  Transform paths during the copy process\n      --no-check-dest                               Don't check the destination, copy regardless\n      --no-traverse                                 Don't traverse destination file system on copy\n      --no-update-dir-modtime                       Don't update directory modification times\n      --no-update-modtime                           Don't update destination modtime if files identical\n      --order-by string                             Instructions on how to order the transfers, e.g. 'size,descending'\n      --partial-suffix string                       Add partial-suffix to temporary file name when --inplace is not used (default \".partial\")\n      --refresh-times                               Refresh the modtime of remote files\n      --server-side-across-configs                  Allow server-side operations (e.g. copy) to work across different configs\n      --size-only                                   Skip based on size only, not modtime or checksum\n      --streaming-upload-cutoff SizeSuffix          Cutoff for switching to chunked upload if file size is unknown, upload starts after reaching cutoff or when file ends (default 100Ki)\n  -u, --update                                      Skip files that are newer on the destination\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--absolute",
          "description": "Put a leading / in front of path names"
        },
        {
          "flag": "--combined",
          "description": "string         Make a combined report of changes to this file"
        },
        {
          "flag": "--create-empty-src-dirs",
          "description": "Create empty source dirs on destination after copy"
        },
        {
          "flag": "--csv",
          "description": "Output in CSV format"
        },
        {
          "flag": "--dest-after",
          "description": "string       Report all files that exist on the dest post-sync"
        },
        {
          "flag": "--differ",
          "description": "string           Report all non-matching files to this file"
        },
        {
          "flag": "-d,",
          "description": "--dir-slash               Append a slash to directory names (default true)"
        },
        {
          "flag": "--dirs-only",
          "description": "Only list directories"
        },
        {
          "flag": "--error",
          "description": "string            Report all files with errors (hashing or reading) to this file"
        },
        {
          "flag": "--files-only",
          "description": "Only list files (default true)"
        },
        {
          "flag": "-F,",
          "description": "--format string           Output format - see lsf help for details (default \"p\")"
        },
        {
          "flag": "--hash",
          "description": "h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for copy"
        },
        {
          "flag": "--match",
          "description": "string            Report all matching files to this file"
        },
        {
          "flag": "--missing-on-dst",
          "description": "string   Report all files missing from the destination to this file"
        },
        {
          "flag": "--missing-on-src",
          "description": "string   Report all files missing from the source to this file"
        },
        {
          "flag": "-s,",
          "description": "--separator string        Separator for the items in the format (default \";\")"
        },
        {
          "flag": "-t,",
          "description": "--timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)"
        }
      ]
    },
    "copyto": {
      "description": "If source:path is a file or directory then it copies it to a file or",
      "help_text": "If source:path is a file or directory then it copies it to a file or\ndirectory named dest:path.\n\nThis can be used to upload single files to other than their current\nname.  If the source is a directory then it acts exactly like the\n[copy](/commands/rclone_copy/) command.\n\nSo\n\n```sh\nrclone copyto src dst\n```\n\nwhere src and dst are rclone paths, either `remote:path` or\n`/path/to/local` or `C:\\windows\\path\\if\\on\\windows`.\n\nThis will:\n\n```text\nif src is file\n    copy it to dst, overwriting an existing file if it exists\nif src is directory\n    copy it to dst, overwriting existing files if they exist\n    see copy command for full details\n```\n\nThis doesn't transfer files that are identical on src and dst, testing\nby size and modification time or MD5SUM.  It doesn't delete files from\nthe destination.\n\n*If you are looking to copy just a byte range of a file, please see\n`rclone cat --offset X --count Y`.*\n\n**Note**: Use the `-P`/`--progress` flag to view\nreal-time transfer statistics.\n\n### Logger Flags\n\nThe `--differ`, `--missing-on-dst`, `--missing-on-src`, `--match` and `--error`\nflags write paths, one per line, to the file name (or stdout if it is `-`)\nsupplied. What they write is described in the help below. For example\n`--differ` will write all paths which are present on both the source and\ndestination but different.\n\nThe `--combined` flag will write a file (or stdout) which contains all\nfile paths with a symbol and then a space and then the path to tell\nyou what happened to it. These are reminiscent of diff files.\n\n- `= path` means path was found in source and destination and was identical\n- `- path` means path was missing on the source, so only in the destination\n- `+ path` means path was missing on the destination, so only in the source\n- `* path` means path was present in source and destination but different.\n- `! path` means there was an error reading or hashing the source or dest.\n\nThe `--dest-after` flag writes a list file using the same format flags\nas [`lsf`](/commands/rclone_lsf/#synopsis) (including [customizable options\nfor hash, modtime, etc.](/commands/rclone_lsf/#synopsis))\nConceptually it is similar to rsync's `--itemize-changes`, but not identical\n-- it should output an accurate list of what will be on the destination\nafter the command is finished.\n\nWhen the `--no-traverse` flag is set, all logs involving files that exist only\non the destination will be incomplete or completely missing.\n\nNote that these logger flags have a few limitations, and certain scenarios\nare not currently supported:\n\n- `--max-duration` / `CutoffModeHard`\n- `--compare-dest` / `--copy-dest`\n- server-side moves of an entire dir at once\n- High-level retries, because there would be duplicates (use `--retries 1` to disable)\n- Possibly some unusual error scenarios\n\nNote also that each file is logged during execution, as opposed to after, so it\nis most useful as a predictor of what SHOULD happen to each file\n(which may or may not match what actually DID).\n\nUsage:\n  rclone copyto source:path dest:path [flags]\n\nFlags:\n      --absolute                Put a leading / in front of path names\n      --combined string         Make a combined report of changes to this file\n      --csv                     Output in CSV format\n      --dest-after string       Report all files that exist on the dest post-sync\n      --differ string           Report all non-matching files to this file\n  -d, --dir-slash               Append a slash to directory names (default true)\n      --dirs-only               Only list directories\n      --error string            Report all files with errors (hashing or reading) to this file\n      --files-only              Only list files (default true)\n  -F, --format string           Output format - see lsf help for details (default \"p\")\n      --hash h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")\n  -h, --help                    help for copyto\n      --match string            Report all matching files to this file\n      --missing-on-dst string   Report all files missing from the destination to this file\n      --missing-on-src string   Report all files missing from the source to this file\n  -s, --separator string        Separator for the items in the format (default \";\")\n  -t, --timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)\n\nFlags for anything which can copy a file (flag group Copy):\n      --check-first                                 Do all the checks before starting transfers\n  -c, --checksum                                    Check for changes with size & checksum (if available, or fallback to size only)\n      --compare-dest stringArray                    Include additional server-side paths during comparison\n      --copy-dest stringArray                       Implies --compare-dest but also copies files from paths into destination\n      --cutoff-mode HARD|SOFT|CAUTIOUS              Mode to stop transfers when reaching the max transfer limit HARD|SOFT|CAUTIOUS (default HARD)\n      --ignore-case-sync                            Ignore case when synchronizing\n      --ignore-checksum                             Skip post copy check of checksums\n      --ignore-existing                             Skip all files that exist on destination\n      --ignore-size                                 Ignore size when skipping use modtime or checksum\n  -I, --ignore-times                                Don't skip items that match size and time - transfer all unconditionally\n      --immutable                                   Do not modify files, fail if existing files have been modified\n      --inplace                                     Download directly to destination file instead of atomic download to temp/rename\n  -l, --links                                       Translate symlinks to/from regular files with a '.rclonelink' extension\n      --max-backlog int                             Maximum number of objects in sync or check backlog (default 10000)\n      --max-duration Duration                       Maximum duration rclone will transfer data for (default 0s)\n      --max-transfer SizeSuffix                     Maximum size of data to transfer (default off)\n  -M, --metadata                                    If set, preserve metadata when copying objects\n      --modify-window Duration                      Max time diff to be considered the same (default 1ns)\n      --multi-thread-chunk-size SizeSuffix          Chunk size for multi-thread downloads / uploads, if not set by filesystem (default 64Mi)\n      --multi-thread-cutoff SizeSuffix              Use multi-thread downloads for files above this size (default 256Mi)\n      --multi-thread-streams int                    Number of streams to use for multi-thread downloads (default 4)\n      --multi-thread-write-buffer-size SizeSuffix   In memory buffer size for writing when in multi-thread mode (default 128Ki)\n      --name-transform stringArray                  Transform paths during the copy process\n      --no-check-dest                               Don't check the destination, copy regardless\n      --no-traverse                                 Don't traverse destination file system on copy\n      --no-update-dir-modtime                       Don't update directory modification times\n      --no-update-modtime                           Don't update destination modtime if files identical\n      --order-by string                             Instructions on how to order the transfers, e.g. 'size,descending'\n      --partial-suffix string                       Add partial-suffix to temporary file name when --inplace is not used (default \".partial\")\n      --refresh-times                               Refresh the modtime of remote files\n      --server-side-across-configs                  Allow server-side operations (e.g. copy) to work across different configs\n      --size-only                                   Skip based on size only, not modtime or checksum\n      --streaming-upload-cutoff SizeSuffix          Cutoff for switching to chunked upload if file size is unknown, upload starts after reaching cutoff or when file ends (default 100Ki)\n  -u, --update                                      Skip files that are newer on the destination\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--absolute",
          "description": "Put a leading / in front of path names"
        },
        {
          "flag": "--combined",
          "description": "string         Make a combined report of changes to this file"
        },
        {
          "flag": "--csv",
          "description": "Output in CSV format"
        },
        {
          "flag": "--dest-after",
          "description": "string       Report all files that exist on the dest post-sync"
        },
        {
          "flag": "--differ",
          "description": "string           Report all non-matching files to this file"
        },
        {
          "flag": "-d,",
          "description": "--dir-slash               Append a slash to directory names (default true)"
        },
        {
          "flag": "--dirs-only",
          "description": "Only list directories"
        },
        {
          "flag": "--error",
          "description": "string            Report all files with errors (hashing or reading) to this file"
        },
        {
          "flag": "--files-only",
          "description": "Only list files (default true)"
        },
        {
          "flag": "-F,",
          "description": "--format string           Output format - see lsf help for details (default \"p\")"
        },
        {
          "flag": "--hash",
          "description": "h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for copyto"
        },
        {
          "flag": "--match",
          "description": "string            Report all matching files to this file"
        },
        {
          "flag": "--missing-on-dst",
          "description": "string   Report all files missing from the destination to this file"
        },
        {
          "flag": "--missing-on-src",
          "description": "string   Report all files missing from the source to this file"
        },
        {
          "flag": "-s,",
          "description": "--separator string        Separator for the items in the format (default \";\")"
        },
        {
          "flag": "-t,",
          "description": "--timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)"
        }
      ]
    },
    "copyurl": {
      "description": "Download a URL's content and copy it to the destination without saving",
      "help_text": "Download a URL's content and copy it to the destination without saving\nit in temporary storage.\n\nSetting `--auto-filename` will attempt to automatically determine the\nfilename from the URL (after any redirections) and used in the\ndestination path.\n\nWith `--header-filename` in addition, if a specific filename is\nset in HTTP headers, it will be used instead of the name from the URL.\nWith `--print-filename` in addition, the resulting file name will be\nprinted.\n\nSetting `--no-clobber` will prevent overwriting file on the\ndestination if there is one with the same name.\n\nSetting `--stdout` or making the output file name `-`\nwill cause the output to be written to standard output.\n\n### Troubleshooting\n\nIf you can't get `rclone copyurl` to work then here are some things you can try:\n\n- `--disable-http2` rclone will use HTTP2 if available - try disabling it\n- `--bind 0.0.0.0` rclone will use IPv6 if available - try disabling it\n- `--bind ::0` to disable IPv4\n- `--user agent curl` - some sites have whitelists for curl's user-agent - try that\n- Make sure the site works with `curl` directly\n\nUsage:\n  rclone copyurl https://example.com dest:path [flags]\n\nFlags:\n  -a, --auto-filename     Get the file name from the URL and use it for destination file path\n      --header-filename   Get the file name from the Content-Disposition header\n  -h, --help              help for copyurl\n      --no-clobber        Prevent overwriting file with same name\n  -p, --print-filename    Print the resulting name from --auto-filename\n      --stdout            Write the output to stdout rather than a file\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-a,",
          "description": "--auto-filename     Get the file name from the URL and use it for destination file path"
        },
        {
          "flag": "--header-filename",
          "description": "Get the file name from the Content-Disposition header"
        },
        {
          "flag": "-h,",
          "description": "--help              help for copyurl"
        },
        {
          "flag": "--no-clobber",
          "description": "Prevent overwriting file with same name"
        },
        {
          "flag": "-p,",
          "description": "--print-filename    Print the resulting name from --auto-filename"
        },
        {
          "flag": "--stdout",
          "description": "Write the output to stdout rather than a file"
        }
      ]
    },
    "cryptcheck": {
      "description": "Checks a remote against a [crypted](/crypt/) remote. This is the equivalent",
      "help_text": "Checks a remote against a [crypted](/crypt/) remote. This is the equivalent\nof running rclone [check](/commands/rclone_check/), but able to check the\nchecksums of the encrypted remote.\n\nFor it to work the underlying remote of the cryptedremote must support\nsome kind of checksum.\n\nIt works by reading the nonce from each file on the cryptedremote: and\nusing that to encrypt each file on the remote:.  It then checks the\nchecksum of the underlying file on the cryptedremote: against the\nchecksum of the file it has just encrypted.\n\nUse it like this\n\n```sh\nrclone cryptcheck /path/to/files encryptedremote:path\n```\n\nYou can use it like this also, but that will involve downloading all\nthe files in `remote:path`.\n\n```sh\nrclone cryptcheck remote:path encryptedremote:path\n```\n\nAfter it has run it will log the status of the `encryptedremote:`.\n\nIf you supply the `--one-way` flag, it will only check that files in\nthe source match the files in the destination, not the other way\naround. This means that extra files in the destination that are not in\nthe source will not be detected.\n\nThe `--differ`, `--missing-on-dst`, `--missing-on-src`, `--match`\nand `--error` flags write paths, one per line, to the file name (or\nstdout if it is `-`) supplied. What they write is described in the\nhelp below. For example `--differ` will write all paths which are\npresent on both the source and destination but different.\n\nThe `--combined` flag will write a file (or stdout) which contains all\nfile paths with a symbol and then a space and then the path to tell\nyou what happened to it. These are reminiscent of diff files.\n\n- `= path` means path was found in source and destination and was identical\n- `- path` means path was missing on the source, so only in the destination\n- `+ path` means path was missing on the destination, so only in the source\n- `* path` means path was present in source and destination but different.\n- `! path` means there was an error reading or hashing the source or dest.\n\nThe default number of parallel checks is 8. See the [--checkers](/docs/#checkers-int)\noption for more information.\n\nUsage:\n  rclone cryptcheck remote:path cryptedremote:path [flags]\n\nFlags:\n      --combined string         Make a combined report of changes to this file\n      --differ string           Report all non-matching files to this file\n      --error string            Report all files with errors (hashing or reading) to this file\n  -h, --help                    help for cryptcheck\n      --match string            Report all matching files to this file\n      --missing-on-dst string   Report all files missing from the destination to this file\n      --missing-on-src string   Report all files missing from the source to this file\n      --one-way                 Check one way only, source files must exist on remote\n\nFlags used for check commands (flag group Check):\n      --max-backlog int   Maximum number of objects in sync or check backlog (default 10000)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--combined",
          "description": "string         Make a combined report of changes to this file"
        },
        {
          "flag": "--differ",
          "description": "string           Report all non-matching files to this file"
        },
        {
          "flag": "--error",
          "description": "string            Report all files with errors (hashing or reading) to this file"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for cryptcheck"
        },
        {
          "flag": "--match",
          "description": "string            Report all matching files to this file"
        },
        {
          "flag": "--missing-on-dst",
          "description": "string   Report all files missing from the destination to this file"
        },
        {
          "flag": "--missing-on-src",
          "description": "string   Report all files missing from the source to this file"
        },
        {
          "flag": "--one-way",
          "description": "Check one way only, source files must exist on remote"
        }
      ]
    },
    "cryptdecode": {
      "description": "Returns unencrypted file names when provided with a list of encrypted file",
      "help_text": "Returns unencrypted file names when provided with a list of encrypted file\nnames. List limit is 10 items.\n\nIf you supply the `--reverse` flag, it will return encrypted file names.\n\nuse it like this\n\n```sh\nrclone cryptdecode encryptedremote: encryptedfilename1 encryptedfilename2\nrclone cryptdecode --reverse encryptedremote: filename1 filename2\n```\n\nAnother way to accomplish this is by using the `rclone backend encode` (or `decode`)\ncommand. See the documentation on the [crypt](/crypt/) overlay for more info.\n\nUsage:\n  rclone cryptdecode encryptedremote: encryptedfilename [flags]\n\nFlags:\n  -h, --help      help for cryptdecode\n      --reverse   Reverse cryptdecode, encrypts filenames\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help      help for cryptdecode"
        },
        {
          "flag": "--reverse",
          "description": "Reverse cryptdecode, encrypts filenames"
        }
      ]
    },
    "dedupe": {
      "description": "By default `dedupe` interactively finds files with duplicate",
      "help_text": "By default `dedupe` interactively finds files with duplicate\nnames and offers to delete all but one or rename them to be\ndifferent. This is known as deduping by name.\n\nDeduping by name is only useful with a small group of backends (e.g. Google Drive,\nOpendrive) that can have duplicate file names. It can be run on wrapping backends\n(e.g. crypt) if they wrap a backend which supports duplicate file\nnames.\n\nHowever if `--by-hash` is passed in then dedupe will find files with\nduplicate hashes instead which will work on any backend which supports\nat least one hash. This can be used to find files with duplicate\ncontent. This is known as deduping by hash.\n\nIf deduping by name, first rclone will merge directories with the same\nname.  It will do this iteratively until all the identically named\ndirectories have been merged.\n\nNext, if deduping by name, for every group of duplicate file names /\nhashes, it will delete all but one identical file it finds without\nconfirmation.  This means that for most duplicated files the\n`dedupe` command will not be interactive.\n\n`dedupe` considers files to be identical if they have the\nsame file path and the same hash. If the backend does not support\nhashes (e.g. crypt wrapping Google Drive) then they will never be found\nto be identical. If you use the `--size-only` flag then files\nwill be considered identical if they have the same size (any hash will be\nignored). This can be useful on crypt backends which do not support hashes.\n\nNext rclone will resolve the remaining duplicates. Exactly which\naction is taken depends on the dedupe mode. By default, rclone will\ninteractively query the user for each one.\n\n**Important**: Since this can cause data loss, test first with the\n`--dry-run` or the `--interactive`/`-i` flag.\n\nHere is an example run.\n\nBefore - with duplicates\n\n```sh\n$ rclone lsl drive:dupes\n  6048320 2016-03-05 16:23:16.798000000 one.txt\n  6048320 2016-03-05 16:23:11.775000000 one.txt\n   564374 2016-03-05 16:23:06.731000000 one.txt\n  6048320 2016-03-05 16:18:26.092000000 one.txt\n  6048320 2016-03-05 16:22:46.185000000 two.txt\n  1744073 2016-03-05 16:22:38.104000000 two.txt\n   564374 2016-03-05 16:22:52.118000000 two.txt\n```\n\nNow the `dedupe` session\n\n```sh\n$ rclone dedupe drive:dupes\n2016/03/05 16:24:37 Google drive root 'dupes': Looking for duplicates using interactive mode.\none.txt: Found 4 files with duplicate names\none.txt: Deleting 2/3 identical duplicates (MD5 \"1eedaa9fe86fd4b8632e2ac549403b36\")\none.txt: 2 duplicates remain\n  1:      6048320 bytes, 2016-03-05 16:23:16.798000000, MD5 1eedaa9fe86fd4b8632e2ac549403b36\n  2:       564374 bytes, 2016-03-05 16:23:06.731000000, MD5 7594e7dc9fc28f727c42ee3e0749de81\ns) Skip and do nothing\nk) Keep just one (choose which in next step)\nr) Rename all to be different (by changing file.jpg to file-1.jpg)\ns/k/r> k\nEnter the number of the file to keep> 1\none.txt: Deleted 1 extra copies\ntwo.txt: Found 3 files with duplicate names\ntwo.txt: 3 duplicates remain\n  1:       564374 bytes, 2016-03-05 16:22:52.118000000, MD5 7594e7dc9fc28f727c42ee3e0749de81\n  2:      6048320 bytes, 2016-03-05 16:22:46.185000000, MD5 1eedaa9fe86fd4b8632e2ac549403b36\n  3:      1744073 bytes, 2016-03-05 16:22:38.104000000, MD5 851957f7fb6f0bc4ce76be966d336802\ns) Skip and do nothing\nk) Keep just one (choose which in next step)\nr) Rename all to be different (by changing file.jpg to file-1.jpg)\ns/k/r> r\ntwo-1.txt: renamed from: two.txt\ntwo-2.txt: renamed from: two.txt\ntwo-3.txt: renamed from: two.txt\n```\n\nThe result being\n\n```sh\n$ rclone lsl drive:dupes\n  6048320 2016-03-05 16:23:16.798000000 one.txt\n   564374 2016-03-05 16:22:52.118000000 two-1.txt\n  6048320 2016-03-05 16:22:46.185000000 two-2.txt\n  1744073 2016-03-05 16:22:38.104000000 two-3.txt\n```\n\nDedupe can be run non interactively using the `--dedupe-mode` flag\nor by using an extra parameter with the same value\n\n- `--dedupe-mode interactive` - interactive as above.\n- `--dedupe-mode skip` - removes identical files then skips anything left.\n- `--dedupe-mode first` - removes identical files then keeps the first one.\n- `--dedupe-mode newest` - removes identical files then keeps the newest one.\n- `--dedupe-mode oldest` - removes identical files then keeps the oldest one.\n- `--dedupe-mode largest` - removes identical files then keeps the largest one.\n- `--dedupe-mode smallest` - removes identical files then keeps the smallest one.\n- `--dedupe-mode rename` - removes identical files then renames the rest to be different.\n- `--dedupe-mode list` - lists duplicate dirs and files only and changes nothing.\n\nFor example, to rename all the identically named photos in your Google Photos\ndirectory, do\n\n```sh\nrclone dedupe --dedupe-mode rename \"drive:Google Photos\"\n```\n\nOr\n\n```sh\nrclone dedupe rename \"drive:Google Photos\"\n```\n\nUsage:\n  rclone dedupe [mode] remote:path [flags]\n\nFlags:\n      --by-hash              Find identical hashes rather than names\n      --dedupe-mode string   Dedupe mode interactive|skip|first|newest|oldest|largest|smallest|rename (default \"interactive\")\n  -h, --help                 help for dedupe\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--by-hash",
          "description": "Find identical hashes rather than names"
        },
        {
          "flag": "--dedupe-mode",
          "description": "string   Dedupe mode interactive|skip|first|newest|oldest|largest|smallest|rename (default \"interactive\")"
        },
        {
          "flag": "-h,",
          "description": "--help                 help for dedupe"
        }
      ]
    },
    "delete": {
      "description": "Remove the files in path.  Unlike [purge](/commands/rclone_purge/) it",
      "help_text": "Remove the files in path.  Unlike [purge](/commands/rclone_purge/) it\nobeys include/exclude filters so can be used to selectively delete files.\n\n`rclone delete` only deletes files but leaves the directory structure\nalone. If you want to delete a directory and all of its contents use\nthe [purge](/commands/rclone_purge/) command.\n\nIf you supply the `--rmdirs` flag, it will remove all empty directories along\nwith it. You can also use the separate command [rmdir](/commands/rclone_rmdir/)\nor [rmdirs](/commands/rclone_rmdirs/) to delete empty directories only.\n\nFor example, to delete all files bigger than 100 MiB, you may first want to\ncheck what would be deleted (use either):\n\n```sh\nrclone --min-size 100M lsl remote:path\nrclone --dry-run --min-size 100M delete remote:path\n```\n\nThen proceed with the actual delete:\n\n```sh\nrclone --min-size 100M delete remote:path\n```\n\nThat reads \"delete everything with a minimum size of 100 MiB\", hence\ndelete all files bigger than 100 MiB.\n\n**Important**: Since this can cause data loss, test first with the\n`--dry-run` or the `--interactive`/`-i` flag.\n\nUsage:\n  rclone delete remote:path [flags]\n\nFlags:\n  -h, --help     help for delete\n      --rmdirs   rmdirs removes empty directories but leaves root intact\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help     help for delete"
        },
        {
          "flag": "--rmdirs",
          "description": "rmdirs removes empty directories but leaves root intact"
        }
      ]
    },
    "deletefile": {
      "description": "Remove a single file from remote.  Unlike `delete` it cannot be used to",
      "help_text": "Remove a single file from remote.  Unlike `delete` it cannot be used to\nremove a directory and it doesn't obey include/exclude filters - if the\nspecified file exists, it will always be removed.\n\nUsage:\n  rclone deletefile remote:path [flags]\n\nFlags:\n  -h, --help   help for deletefile\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for deletefile"
        }
      ]
    },
    "gendocs": {
      "description": "This produces markdown docs for the rclone commands to the directory",
      "help_text": "This produces markdown docs for the rclone commands to the directory\nsupplied.  These are in a format suitable for hugo to render into the\nrclone.org website.\n\nUsage:\n  rclone gendocs output_directory [flags]\n\nFlags:\n  -h, --help   help for gendocs\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for gendocs"
        }
      ]
    },
    "gitannex": {
      "description": "Rclone's `gitannex` subcommand enables [git-annex] to store and retrieve content",
      "help_text": "Rclone's `gitannex` subcommand enables [git-annex] to store and retrieve content\nfrom an rclone remote. It is meant to be run by git-annex, not directly by\nusers.\n\n[git-annex]: https://git-annex.branchable.com/\n\n### Installation on Linux\n\n1. Skip this step if your version of git-annex is [10.20240430] or newer.\n   Otherwise, you must create a symlink somewhere on your PATH with a particular\n   name. This symlink helps git-annex tell rclone it wants to run the \"gitannex\"\n   subcommand.\n\n   ```sh\n   # Create the helper symlink in \"$HOME/bin\".\n   ln -s \"$(realpath rclone)\" \"$HOME/bin/git-annex-remote-rclone-builtin\"\n\n   # Verify the new symlink is on your PATH.\n   which git-annex-remote-rclone-builtin\n   ```\n\n   [10.20240430]: https://git-annex.branchable.com/news/version_10.20240430/\n\n2. Add a new remote to your git-annex repo. This new remote will connect\n   git-annex with the `rclone gitannex` subcommand.\n\n   Start by asking git-annex to describe the remote's available configuration\n   parameters.\n\n   ```sh\n   # If you skipped step 1:\n   git annex initremote MyRemote type=rclone --whatelse\n\n   # If you created a symlink in step 1:\n   git annex initremote MyRemote type=external externaltype=rclone-builtin --whatelse\n    ```\n\n   > **NOTE**: If you're porting an existing [git-annex-remote-rclone] remote to\n   > use `rclone gitannex`, you can probably reuse the configuration parameters\n   > verbatim without renaming them. Check parameter synonyms with `--whatelse`\n   > as shown above.\n   >\n   > [git-annex-remote-rclone]: https://github.com/git-annex-remote-rclone/git-annex-remote-rclone\n\n   The following example creates a new git-annex remote named \"MyRemote\" that\n   will use the rclone remote named \"SomeRcloneRemote\". That rclone remote must\n   be one configured in your rclone.conf file, which can be located with `rclone\n   config file`.\n\n   ```sh\n   git annex initremote MyRemote         \\\n       type=external                     \\\n       externaltype=rclone-builtin       \\\n       encryption=none                   \\\n       rcloneremotename=SomeRcloneRemote \\\n       rcloneprefix=git-annex-content    \\\n       rclonelayout=nodir\n   ```\n\n3. Before you trust this command with your precious data, be sure to **test the\n   remote**. This command is very new and has not been tested on many rclone\n   backends. Caveat emptor!\n\n   ```sh\n   git annex testremote MyRemote\n   ```\n\nHappy annexing!\n\nUsage:\n  rclone gitannex [flags]\n\nAliases:\n  gitannex, git-annex-remote-rclone-builtin\n\nFlags:\n  -h, --help   help for gitannex\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for gitannex"
        }
      ]
    },
    "hashsum": {
      "description": "Produces a hash file for all the objects in the path using the hash",
      "help_text": "Produces a hash file for all the objects in the path using the hash\nnamed.  The output is in the same format as the standard\nmd5sum/sha1sum tool.\n\nBy default, the hash is requested from the remote.  If the hash is\nnot supported by the remote, no hash will be returned.  With the\ndownload flag, the file will be downloaded from the remote and\nhashed locally enabling any hash for any remote.\n\nFor the MD5 and SHA1 algorithms there are also dedicated commands,\n[md5sum](/commands/rclone_md5sum/) and [sha1sum](/commands/rclone_sha1sum/).\n\nThis command can also hash data received on standard input (stdin),\nby not passing a remote:path, or by passing a hyphen as remote:path\nwhen there is data to read (if not, the hyphen will be treated literally,\nas a relative path).\n\nRun without a hash to see the list of all supported hashes, e.g.\n\n```sh\n$ rclone hashsum\nSupported hashes are:\n  * md5\n  * sha1\n  * whirlpool\n  * crc32\n  * sha256\n  * sha512\n  * blake3\n  * xxh3\n  * xxh128\n```\n\nThen\n\n```sh\nrclone hashsum MD5 remote:path\n```\n\nNote that hash names are case insensitive and values are output in lower case.\n\nUsage:\n  rclone hashsum [<hash> remote:path] [flags]\n\nFlags:\n      --base64               Output base64 encoded hashsum\n  -C, --checkfile string     Validate hashes against a given SUM file instead of printing them\n      --download             Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote\n  -h, --help                 help for hashsum\n      --output-file string   Output hashsums to a file rather than the terminal\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--base64",
          "description": "Output base64 encoded hashsum"
        },
        {
          "flag": "-C,",
          "description": "--checkfile string     Validate hashes against a given SUM file instead of printing them"
        },
        {
          "flag": "--download",
          "description": "Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote"
        },
        {
          "flag": "-h,",
          "description": "--help                 help for hashsum"
        },
        {
          "flag": "--output-file",
          "description": "string   Output hashsums to a file rather than the terminal"
        }
      ]
    },
    "help": {
      "description": "Rclone syncs files to and from cloud storage providers as well as",
      "help_text": "Rclone syncs files to and from cloud storage providers as well as\nmounting them, listing them in lots of different ways.\n\nSee the home page (https://rclone.org/) for installation, usage,\ndocumentation, changelog and configuration walkthroughs.\n\nUsage:\n  rclone help [flags]\n  rclone help [command]\n\nAvailable commands:\n  backend     List full info about a backend\n  backends    List the backends available\n  flags       Show the global flags for rclone\n\nFlags:\n  -h, --help   help for help\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for help"
        }
      ]
    },
    "link": {
      "description": "Create, retrieve or remove a public link to the given file or folder.",
      "help_text": "Create, retrieve or remove a public link to the given file or folder.\n\n```sh\nrclone link remote:path/to/file\nrclone link remote:path/to/folder/\nrclone link --unlink remote:path/to/folder/\nrclone link --expire 1d remote:path/to/file\n```\n\nIf you supply the --expire flag, it will set the expiration time\notherwise it will use the default (100 years). **Note** not all\nbackends support the --expire flag - if the backend doesn't support it\nthen the link returned won't expire.\n\nUse the --unlink flag to remove existing public links to the file or\nfolder. **Note** not all backends support \"--unlink\" flag - those that\ndon't will just ignore it.\n\nIf successful, the last line of the output will contain the\nlink. Exact capabilities depend on the remote, but the link will\nalways by default be created with the least constraints - e.g. no\nexpiry, no password protection, accessible without account.\n\nUsage:\n  rclone link remote:path [flags]\n\nFlags:\n      --expire Duration   The amount of time that the link will be valid (default off)\n  -h, --help              help for link\n      --unlink            Remove existing public link to file/folder\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--expire",
          "description": "Duration   The amount of time that the link will be valid (default off)"
        },
        {
          "flag": "-h,",
          "description": "--help              help for link"
        },
        {
          "flag": "--unlink",
          "description": "Remove existing public link to file/folder"
        }
      ]
    },
    "listremotes": {
      "description": "Lists all the available remotes from the config file, or the remotes matching",
      "help_text": "Lists all the available remotes from the config file, or the remotes matching\nan optional filter.\n\nPrints the result in human-readable format by default, and as a simple list of\nremote names, or if used with flag `--long` a tabular format including\nthe remote names, types and descriptions. Using flag `--json` produces\nmachine-readable output instead, which always includes all attributes - including\nthe source (file or environment).\n\nResult can be filtered by a filter argument which applies to all attributes,\nand/or filter flags specific for each attribute. The values must be specified\naccording to regular rclone filtering pattern syntax.\n\nUsage:\n  rclone listremotes [<filter>] [flags]\n\nFlags:\n      --description string   Filter remotes by description\n  -h, --help                 help for listremotes\n      --json                 Format output as JSON\n      --long                 Show type and description in addition to name\n      --name string          Filter remotes by name\n      --order-by string      Instructions on how to order the result, e.g. 'type,name=descending'\n      --source string        Filter remotes by source, e.g. 'file' or 'environment'\n      --type string          Filter remotes by type\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--description",
          "description": "string   Filter remotes by description"
        },
        {
          "flag": "-h,",
          "description": "--help                 help for listremotes"
        },
        {
          "flag": "--json",
          "description": "Format output as JSON"
        },
        {
          "flag": "--long",
          "description": "Show type and description in addition to name"
        },
        {
          "flag": "--name",
          "description": "string          Filter remotes by name"
        },
        {
          "flag": "--order-by",
          "description": "string      Instructions on how to order the result, e.g. 'type,name=descending'"
        },
        {
          "flag": "--source",
          "description": "string        Filter remotes by source, e.g. 'file' or 'environment'"
        },
        {
          "flag": "--type",
          "description": "string          Filter remotes by type"
        }
      ]
    },
    "ls": {
      "description": "Lists the objects in the source path to standard output in a human",
      "help_text": "Lists the objects in the source path to standard output in a human\nreadable format with size and path. Recurses by default.\n\nE.g.\n\n```sh\n$ rclone ls swift:bucket\n    60295 bevajer5jef\n    90613 canole\n    94467 diwogej7\n    37600 fubuwic\n```\n\nAny of the filtering options can be applied to this command.\n\nThere are several related list commands\n\n- `ls` to list size and path of objects only\n- `lsl` to list modification time, size and path of objects only\n- `lsd` to list directories only\n- `lsf` to list objects and directories in easy to parse format\n- `lsjson` to list objects and directories in JSON format\n\n`ls`,`lsl`,`lsd` are designed to be human-readable.\n`lsf` is designed to be human and machine-readable.\n`lsjson` is designed to be machine-readable.\n\nNote that `ls` and `lsl` recurse by default - use `--max-depth 1` to stop the recursion.\n\nThe other list commands `lsd`,`lsf`,`lsjson` do not recurse by default -\nuse `-R` to make them recurse.\n\nListing a nonexistent directory will produce an error except for\nremotes which can't have empty directories (e.g. s3, swift, or gcs -\nthe bucket-based remotes).\n\nUsage:\n  rclone ls remote:path [flags]\n\nFlags:\n  -h, --help   help for ls\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for ls"
        }
      ]
    },
    "lsd": {
      "description": "Lists the directories in the source path to standard output. Does not",
      "help_text": "Lists the directories in the source path to standard output. Does not\nrecurse by default.  Use the `-R` flag to recurse.\n\nThis command lists the total size of the directory (if known, -1 if\nnot), the modification time (if known, the current time if not), the\nnumber of objects in the directory (if known, -1 if not) and the name\nof the directory, E.g.\n\n```sh\n$ rclone lsd swift:\n      494000 2018-04-26 08:43:20     10000 10000files\n          65 2018-04-26 08:43:20         1 1File\n```\n\nOr\n\n```sh\n$ rclone lsd drive:test\n          -1 2016-10-17 17:41:53        -1 1000files\n          -1 2017-01-03 14:40:54        -1 2500files\n          -1 2017-07-08 14:39:28        -1 4000files\n```\n\nIf you just want the directory names use `rclone lsf --dirs-only`.\n\nAny of the filtering options can be applied to this command.\n\nThere are several related list commands\n\n- `ls` to list size and path of objects only\n- `lsl` to list modification time, size and path of objects only\n- `lsd` to list directories only\n- `lsf` to list objects and directories in easy to parse format\n- `lsjson` to list objects and directories in JSON format\n\n`ls`,`lsl`,`lsd` are designed to be human-readable.\n`lsf` is designed to be human and machine-readable.\n`lsjson` is designed to be machine-readable.\n\nNote that `ls` and `lsl` recurse by default - use `--max-depth 1` to stop the recursion.\n\nThe other list commands `lsd`,`lsf`,`lsjson` do not recurse by default -\nuse `-R` to make them recurse.\n\nListing a nonexistent directory will produce an error except for\nremotes which can't have empty directories (e.g. s3, swift, or gcs -\nthe bucket-based remotes).\n\nUsage:\n  rclone lsd remote:path [flags]\n\nFlags:\n  -h, --help        help for lsd\n  -R, --recursive   Recurse into the listing\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help        help for lsd"
        },
        {
          "flag": "-R,",
          "description": "--recursive   Recurse into the listing"
        }
      ]
    },
    "lsf": {
      "description": "List the contents of the source path (directories and objects) to",
      "help_text": "List the contents of the source path (directories and objects) to\nstandard output in a form which is easy to parse by scripts.  By\ndefault this will just be the names of the objects and directories,\none per line.  The directories will have a / suffix.\n\nE.g.\n\n```sh\n$ rclone lsf swift:bucket\nbevajer5jef\ncanole\ndiwogej7\nferejej3gux/\nfubuwic\n```\n\nUse the `--format` option to control what gets listed.  By default this\nis just the path, but you can use these parameters to control the\noutput:\n\n```text\np - path\ns - size\nt - modification time\nh - hash\ni - ID of object\no - Original ID of underlying object\nm - MimeType of object if known\ne - encrypted name\nT - tier of storage if known, e.g. \"Hot\" or \"Cool\"\nM - Metadata of object in JSON blob format, eg {\"key\":\"value\"}\n```\n\nSo if you wanted the path, size and modification time, you would use\n`--format \"pst\"`, or maybe `--format \"tsp\"` to put the path last.\n\nE.g.\n\n```sh\n$ rclone lsf  --format \"tsp\" swift:bucket\n2016-06-25 18:55:41;60295;bevajer5jef\n2016-06-25 18:55:43;90613;canole\n2016-06-25 18:55:43;94467;diwogej7\n2018-04-26 08:50:45;0;ferejej3gux/\n2016-06-25 18:55:40;37600;fubuwic\n```\n\nIf you specify \"h\" in the format you will get the MD5 hash by default,\nuse the `--hash` flag to change which hash you want.  Note that this\ncan be returned as an empty string if it isn't available on the object\n(and for directories), \"ERROR\" if there was an error reading it from\nthe object and \"UNSUPPORTED\" if that object does not support that hash\ntype.\n\nFor example, to emulate the md5sum command you can use\n\n```sh\nrclone lsf -R --hash MD5 --format hp --separator \"  \" --files-only .\n```\n\nE.g.\n\n```sh\n$ rclone lsf -R --hash MD5 --format hp --separator \"  \" --files-only swift:bucket\n7908e352297f0f530b84a756f188baa3  bevajer5jef\ncd65ac234e6fea5925974a51cdd865cc  canole\n03b5341b4f234b9d984d03ad076bae91  diwogej7\n8fd37c3810dd660778137ac3a66cc06d  fubuwic\n99713e14a4c4ff553acaf1930fad985b  gixacuh7ku\n```\n\n(Though \"rclone md5sum .\" is an easier way of typing this.)\n\nBy default the separator is \";\" this can be changed with the\n`--separator` flag.  Note that separators aren't escaped in the path so\nputting it last is a good strategy.\n\nE.g.\n\n```sh\n$ rclone lsf  --separator \",\" --format \"tshp\" swift:bucket\n2016-06-25 18:55:41,60295,7908e352297f0f530b84a756f188baa3,bevajer5jef\n2016-06-25 18:55:43,90613,cd65ac234e6fea5925974a51cdd865cc,canole\n2016-06-25 18:55:43,94467,03b5341b4f234b9d984d03ad076bae91,diwogej7\n2018-04-26 08:52:53,0,,ferejej3gux/\n2016-06-25 18:55:40,37600,8fd37c3810dd660778137ac3a66cc06d,fubuwic\n```\n\nYou can output in CSV standard format.  This will escape things in \"\nif they contain,\n\nE.g.\n\n```sh\n$ rclone lsf --csv --files-only --format ps remote:path\ntest.log,22355\ntest.sh,449\n\"this file contains a comma, in the file name.txt\",6\n```\n\nNote that the `--absolute` parameter is useful for making lists of files\nto pass to an rclone copy with the `--files-from-raw` flag.\n\nFor example, to find all the files modified within one day and copy\nthose only (without traversing the whole directory structure):\n\n```sh\nrclone lsf --absolute --files-only --max-age 1d /path/to/local > new_files\nrclone copy --files-from-raw new_files /path/to/local remote:path\n```\n\nThe default time format is `'2006-01-02 15:04:05'`.\n[Other formats](https://pkg.go.dev/time#pkg-constants) can be specified with\nthe `--time-format` flag. Examples:\n\n```sh\nrclone lsf remote:path --format pt --time-format 'Jan 2, 2006 at 3:04pm (MST)'\nrclone lsf remote:path --format pt --time-format '2006-01-02 15:04:05.000000000'\nrclone lsf remote:path --format pt --time-format '2006-01-02T15:04:05.999999999Z07:00'\nrclone lsf remote:path --format pt --time-format RFC3339\nrclone lsf remote:path --format pt --time-format DateOnly\nrclone lsf remote:path --format pt --time-format max\n```\n\n`--time-format max` will automatically truncate `2006-01-02 15:04:05.000000000`\nto the maximum precision supported by the remote.\n\nAny of the filtering options can be applied to this command.\n\nThere are several related list commands\n\n- `ls` to list size and path of objects only\n- `lsl` to list modification time, size and path of objects only\n- `lsd` to list directories only\n- `lsf` to list objects and directories in easy to parse format\n- `lsjson` to list objects and directories in JSON format\n\n`ls`,`lsl`,`lsd` are designed to be human-readable.\n`lsf` is designed to be human and machine-readable.\n`lsjson` is designed to be machine-readable.\n\nNote that `ls` and `lsl` recurse by default - use `--max-depth 1` to stop the recursion.\n\nThe other list commands `lsd`,`lsf`,`lsjson` do not recurse by default -\nuse `-R` to make them recurse.\n\nListing a nonexistent directory will produce an error except for\nremotes which can't have empty directories (e.g. s3, swift, or gcs -\nthe bucket-based remotes).\n\nUsage:\n  rclone lsf remote:path [flags]\n\nFlags:\n      --absolute             Put a leading / in front of path names\n      --csv                  Output in CSV format\n  -d, --dir-slash            Append a slash to directory names (default true)\n      --dirs-only            Only list directories\n      --files-only           Only list files\n  -F, --format string        Output format - see  help for details (default \"p\")\n      --hash h               Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")\n  -h, --help                 help for lsf\n  -R, --recursive            Recurse into the listing\n  -s, --separator string     Separator for the items in the format (default \";\")\n  -t, --time-format string   Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--absolute",
          "description": "Put a leading / in front of path names"
        },
        {
          "flag": "--csv",
          "description": "Output in CSV format"
        },
        {
          "flag": "-d,",
          "description": "--dir-slash            Append a slash to directory names (default true)"
        },
        {
          "flag": "--dirs-only",
          "description": "Only list directories"
        },
        {
          "flag": "--files-only",
          "description": "Only list files"
        },
        {
          "flag": "-F,",
          "description": "--format string        Output format - see  help for details (default \"p\")"
        },
        {
          "flag": "--hash",
          "description": "h               Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")"
        },
        {
          "flag": "-h,",
          "description": "--help                 help for lsf"
        },
        {
          "flag": "-R,",
          "description": "--recursive            Recurse into the listing"
        },
        {
          "flag": "-s,",
          "description": "--separator string     Separator for the items in the format (default \";\")"
        },
        {
          "flag": "-t,",
          "description": "--time-format string   Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)"
        }
      ]
    },
    "lsjson": {
      "description": "List directories and objects in the path in JSON format.",
      "help_text": "List directories and objects in the path in JSON format.\n\nThe output is an array of Items, where each Item looks like this:\n\n```json\n{\n  \"Hashes\" : {\n    \"SHA-1\" : \"f572d396fae9206628714fb2ce00f72e94f2258f\",\n    \"MD5\" : \"b1946ac92492d2347c6235b4d2611184\",\n    \"DropboxHash\" : \"ecb65bb98f9d905b70458986c39fcbad7715e5f2fcc3b1f07767d7c83e2438cc\"\n  },\n  \"ID\": \"y2djkhiujf83u33\",\n  \"OrigID\": \"UYOJVTUW00Q1RzTDA\",\n  \"IsBucket\" : false,\n  \"IsDir\" : false,\n  \"MimeType\" : \"application/octet-stream\",\n  \"ModTime\" : \"2017-05-31T16:15:57.034468261+01:00\",\n  \"Name\" : \"file.txt\",\n  \"Encrypted\" : \"v0qpsdq8anpci8n929v3uu9338\",\n  \"EncryptedPath\" : \"kja9098349023498/v0qpsdq8anpci8n929v3uu9338\",\n  \"Path\" : \"full/path/goes/here/file.txt\",\n  \"Size\" : 6,\n  \"Tier\" : \"hot\",\n}\n```\n\nThe exact set of properties included depends on the backend:\n\n- The property IsBucket will only be included for bucket-based remotes, and only\n  for directories that are buckets. It will always be omitted when value is not true.\n- Properties Encrypted and EncryptedPath will only be included for encrypted\n  remotes, and (as mentioned below) only if the `--encrypted` option is set.\n\nDifferent options may also affect which properties are included:\n\n- If `--hash` is not specified, the Hashes property will be omitted. The\n  types of hash can be specified with the `--hash-type` parameter (which\n  may be repeated). If `--hash-type` is set then it implies `--hash`.\n- If `--no-modtime` is specified then ModTime will be blank. This can\n  speed things up on remotes where reading the ModTime takes an extra\n  request (e.g. s3, swift).\n- If `--no-mimetype` is specified then MimeType will be blank. This can\n  speed things up on remotes where reading the MimeType takes an extra\n  request (e.g. s3, swift).\n- If `--encrypted` is not specified the Encrypted and EncryptedPath\n  properties will be omitted - even for encrypted remotes.\n- If `--metadata` is set then an additional Metadata property will be\n  returned. This will have [metadata](/docs/#metadata) in rclone standard format\n  as a JSON object.\n\nThe default is to list directories and files/objects, but this can be changed\nwith the following options:\n\n- If `--dirs-only` is specified then directories will be returned\n  only, no files/objects.\n- If `--files-only` is specified then files will be returned only,\n  no directories.\n\nIf `--stat` is set then the the output is not an array of items,\nbut instead a single JSON blob will be returned about the item pointed to.\nThis will return an error if the item isn't found, however on bucket based\nbackends (like s3, gcs, b2, azureblob etc) if the item isn't found it will\nreturn an empty directory, as it isn't possible to tell empty directories\nfrom missing directories there.\n\nThe Path field will only show folders below the remote path being listed.\nIf \"remote:path\" contains the file \"subfolder/file.txt\", the Path for \"file.txt\"\nwill be \"subfolder/file.txt\", not \"remote:path/subfolder/file.txt\".\nWhen used without `--recursive` the Path will always be the same as Name.\n\nThe time is in RFC3339 format with up to nanosecond precision.  The\nnumber of decimal digits in the seconds will depend on the precision\nthat the remote can hold the times, so if times are accurate to the\nnearest millisecond (e.g. Google Drive) then 3 digits will always be\nshown (\"2017-05-31T16:15:57.034+01:00\") whereas if the times are\naccurate to the nearest second (Dropbox, Box, WebDav, etc.) no digits\nwill be shown (\"2017-05-31T16:15:57+01:00\").\n\nThe whole output can be processed as a JSON blob, or alternatively it\ncan be processed line by line as each item is written on individual lines\n(except with `--stat`).\n\nAny of the filtering options can be applied to this command.\n\nThere are several related list commands\n\n- `ls` to list size and path of objects only\n- `lsl` to list modification time, size and path of objects only\n- `lsd` to list directories only\n- `lsf` to list objects and directories in easy to parse format\n- `lsjson` to list objects and directories in JSON format\n\n`ls`,`lsl`,`lsd` are designed to be human-readable.\n`lsf` is designed to be human and machine-readable.\n`lsjson` is designed to be machine-readable.\n\nNote that `ls` and `lsl` recurse by default - use `--max-depth 1` to stop the recursion.\n\nThe other list commands `lsd`,`lsf`,`lsjson` do not recurse by default -\nuse `-R` to make them recurse.\n\nListing a nonexistent directory will produce an error except for\nremotes which can't have empty directories (e.g. s3, swift, or gcs -\nthe bucket-based remotes).\n\nUsage:\n  rclone lsjson remote:path [flags]\n\nFlags:\n      --dirs-only               Show only directories in the listing\n      --encrypted               Show the encrypted names\n      --files-only              Show only files in the listing\n      --hash                    Include hashes in the output (may take longer)\n      --hash-type stringArray   Show only this hash type (may be repeated)\n  -h, --help                    help for lsjson\n  -M, --metadata                Add metadata to the listing\n      --no-mimetype             Don't read the mime type (can speed things up)\n      --no-modtime              Don't read the modification time (can speed things up)\n      --original                Show the ID of the underlying Object\n  -R, --recursive               Recurse into the listing\n      --stat                    Just return the info for the pointed to file\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--dirs-only",
          "description": "Show only directories in the listing"
        },
        {
          "flag": "--encrypted",
          "description": "Show the encrypted names"
        },
        {
          "flag": "--files-only",
          "description": "Show only files in the listing"
        },
        {
          "flag": "--hash",
          "description": "Include hashes in the output (may take longer)"
        },
        {
          "flag": "--hash-type",
          "description": "stringArray   Show only this hash type (may be repeated)"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for lsjson"
        },
        {
          "flag": "-M,",
          "description": "--metadata                Add metadata to the listing"
        },
        {
          "flag": "--no-mimetype",
          "description": "Don't read the mime type (can speed things up)"
        },
        {
          "flag": "--no-modtime",
          "description": "Don't read the modification time (can speed things up)"
        },
        {
          "flag": "--original",
          "description": "Show the ID of the underlying Object"
        },
        {
          "flag": "-R,",
          "description": "--recursive               Recurse into the listing"
        },
        {
          "flag": "--stat",
          "description": "Just return the info for the pointed to file"
        }
      ]
    },
    "lsl": {
      "description": "Lists the objects in the source path to standard output in a human",
      "help_text": "Lists the objects in the source path to standard output in a human\nreadable format with modification time, size and path. Recurses by default.\n\nE.g.\n\n```sh\n$ rclone lsl swift:bucket\n    60295 2016-06-25 18:55:41.062626927 bevajer5jef\n    90613 2016-06-25 18:55:43.302607074 canole\n    94467 2016-06-25 18:55:43.046609333 diwogej7\n    37600 2016-06-25 18:55:40.814629136 fubuwic\n```\n\nAny of the filtering options can be applied to this command.\n\nThere are several related list commands\n\n- `ls` to list size and path of objects only\n- `lsl` to list modification time, size and path of objects only\n- `lsd` to list directories only\n- `lsf` to list objects and directories in easy to parse format\n- `lsjson` to list objects and directories in JSON format\n\n`ls`,`lsl`,`lsd` are designed to be human-readable.\n`lsf` is designed to be human and machine-readable.\n`lsjson` is designed to be machine-readable.\n\nNote that `ls` and `lsl` recurse by default - use `--max-depth 1` to stop the recursion.\n\nThe other list commands `lsd`,`lsf`,`lsjson` do not recurse by default -\nuse `-R` to make them recurse.\n\nListing a nonexistent directory will produce an error except for\nremotes which can't have empty directories (e.g. s3, swift, or gcs -\nthe bucket-based remotes).\n\nUsage:\n  rclone lsl remote:path [flags]\n\nFlags:\n  -h, --help   help for lsl\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for lsl"
        }
      ]
    },
    "md5sum": {
      "description": "Produces an md5sum file for all the objects in the path.  This",
      "help_text": "Produces an md5sum file for all the objects in the path.  This\nis in the same format as the standard md5sum tool produces.\n\nBy default, the hash is requested from the remote.  If MD5 is\nnot supported by the remote, no hash will be returned.  With the\ndownload flag, the file will be downloaded from the remote and\nhashed locally enabling MD5 for any remote.\n\nFor other algorithms, see the [hashsum](/commands/rclone_hashsum/)\ncommand. Running `rclone md5sum remote:path` is equivalent\nto running `rclone hashsum MD5 remote:path`.\n\nThis command can also hash data received on standard input (stdin),\nby not passing a remote:path, or by passing a hyphen as remote:path\nwhen there is data to read (if not, the hyphen will be treated literally,\nas a relative path).\n\nUsage:\n  rclone md5sum remote:path [flags]\n\nFlags:\n      --base64               Output base64 encoded hashsum\n  -C, --checkfile string     Validate hashes against a given SUM file instead of printing them\n      --download             Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote\n  -h, --help                 help for md5sum\n      --output-file string   Output hashsums to a file rather than the terminal\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--base64",
          "description": "Output base64 encoded hashsum"
        },
        {
          "flag": "-C,",
          "description": "--checkfile string     Validate hashes against a given SUM file instead of printing them"
        },
        {
          "flag": "--download",
          "description": "Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote"
        },
        {
          "flag": "-h,",
          "description": "--help                 help for md5sum"
        },
        {
          "flag": "--output-file",
          "description": "string   Output hashsums to a file rather than the terminal"
        }
      ]
    },
    "mkdir": {
      "description": "Make the path if it doesn't already exist.",
      "help_text": "Make the path if it doesn't already exist.\n\nUsage:\n  rclone mkdir remote:path [flags]\n\nFlags:\n  -h, --help   help for mkdir\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for mkdir"
        }
      ]
    },
    "mount": {
      "description": "Rclone mount allows Linux, FreeBSD, macOS and Windows to",
      "help_text": "Rclone mount allows Linux, FreeBSD, macOS and Windows to\nmount any of Rclone's cloud storage systems as a file system with FUSE.\n\nFirst set up your remote using `rclone config`. Check it works with `rclone ls` etc.\n\nOn Linux and macOS, you can run mount in either foreground or background (aka\ndaemon) mode. Mount runs in foreground mode by default. Use the `--daemon` flag\nto force background mode. On Windows you can run mount in foreground only,\nthe flag is ignored.\n\nIn background mode rclone acts as a generic Unix mount program: the main\nprogram starts, spawns background rclone process to setup and maintain the\nmount, waits until success or timeout and exits with appropriate code\n(killing the child process if it fails).\n\nOn Linux/macOS/FreeBSD start the mount like this, where `/path/to/local/mount`\nis an **empty** **existing** directory:\n\n```sh\nrclone mount remote:path/to/files /path/to/local/mount\n```\n\nOn Windows you can start a mount in different ways. See [below](#mounting-modes-on-windows)\nfor details. If foreground mount is used interactively from a console window,\nrclone will serve the mount and occupy the console so another window should be\nused to work with the mount until rclone is interrupted e.g. by pressing Ctrl-C.\n\nThe following examples will mount to an automatically assigned drive,\nto specific drive letter `X:`, to path `C:\\path\\parent\\mount`\n(where parent directory or drive must exist, and mount must **not** exist,\nand is not supported when [mounting as a network drive](#mounting-modes-on-windows)),\nand the last example will mount as network share `\\\\cloud\\remote` and map it to an\nautomatically assigned drive:\n\n```sh\nrclone mount remote:path/to/files *\nrclone mount remote:path/to/files X:\nrclone mount remote:path/to/files C:\\path\\parent\\mount\nrclone mount remote:path/to/files \\\\cloud\\remote\n```\n\nWhen the program ends while in foreground mode, either via Ctrl+C or receiving\na SIGINT or SIGTERM signal, the mount should be automatically stopped.\n\nWhen running in background mode the user will have to stop the mount manually:\n\n```sh\n# Linux\nfusermount -u /path/to/local/mount\n#... or on some systems\nfusermount3 -u /path/to/local/mount\n# OS X or Linux when using nfsmount\numount /path/to/local/mount\n```\n\nThe umount operation can fail, for example when the mountpoint is busy.\nWhen that happens, it is the user's responsibility to stop the mount manually.\n\nThe size of the mounted file system will be set according to information retrieved\nfrom the remote, the same as returned by the [rclone about](https://rclone.org/commands/rclone_about/)\ncommand. Remotes with unlimited storage may report the used size only,\nthen an additional 1 PiB of free space is assumed. If the remote does not\n[support](https://rclone.org/overview/#optional-features) the about feature\nat all, then 1 PiB is set as both the total and the free size.\n\n### Installing on Windows\n\nTo run rclone mount on Windows, you will need to\ndownload and install [WinFsp](http://www.secfs.net/winfsp/).\n\n[WinFsp](https://github.com/winfsp/winfsp) is an open-source\nWindows File System Proxy which makes it easy to write user space file\nsystems for Windows.  It provides a FUSE emulation layer which rclone\nuses combination with [cgofuse](https://github.com/winfsp/cgofuse).\nBoth of these packages are by Bill Zissimopoulos who was very helpful\nduring the implementation of rclone mount for Windows.\n\n#### Mounting modes on windows\n\nUnlike other operating systems, Microsoft Windows provides a different filesystem\ntype for network and fixed drives. It optimises access on the assumption fixed\ndisk drives are fast and reliable, while network drives have relatively high latency\nand less reliability. Some settings can also be differentiated between the two types,\nfor example that Windows Explorer should just display icons and not create preview\nthumbnails for image and video files on network drives.\n\nIn most cases, rclone will mount the remote as a normal, fixed disk drive by default.\nHowever, you can also choose to mount it as a remote network drive, often described\nas a network share. If you mount an rclone remote using the default, fixed drive\nmode and experience unexpected program errors, freezes or other issues, consider\nmounting as a network drive instead.\n\nWhen mounting as a fixed disk drive you can either mount to an unused drive letter,\nor to a path representing a **nonexistent** subdirectory of an **existing** parent\ndirectory or drive. Using the special value `*` will tell rclone to\nautomatically assign the next available drive letter, starting with Z: and moving\nbackward. Examples:\n\n```sh\nrclone mount remote:path/to/files *\nrclone mount remote:path/to/files X:\nrclone mount remote:path/to/files C:\\path\\parent\\mount\nrclone mount remote:path/to/files X:\n```\n\nOption `--volname` can be used to set a custom volume name for the mounted\nfile system. The default is to use the remote name and path.\n\nTo mount as network drive, you can add option `--network-mode`\nto your mount command. Mounting to a directory path is not supported in\nthis mode, it is a limitation Windows imposes on junctions, so the remote must always\nbe mounted to a drive letter.\n\n```sh\nrclone mount remote:path/to/files X: --network-mode\n```\n\nA volume name specified with `--volname` will be used to create the network share\npath. A complete UNC path, such as `\\\\cloud\\remote`, optionally with path\n`\\\\cloud\\remote\\madeup\\path`, will be used as is. Any other\nstring will be used as the share part, after a default prefix `\\\\server\\`.\nIf no volume name is specified then `\\\\server\\share` will be used.\nYou must make sure the volume name is unique when you are mounting more than one\ndrive, or else the mount command will fail. The share name will treated as the\nvolume label for the mapped drive, shown in Windows Explorer etc, while the complete\n`\\\\server\\share` will be reported as the remote UNC path by\n`net use` etc, just like a normal network drive mapping.\n\nIf you specify a full network share UNC path with `--volname`, this will implicitly\nset the `--network-mode` option, so the following two examples have same result:\n\n```sh\nrclone mount remote:path/to/files X: --network-mode\nrclone mount remote:path/to/files X: --volname \\\\server\\share\n```\n\nYou may also specify the network share UNC path as the mountpoint itself. Then rclone\nwill automatically assign a drive letter, same as with `*` and use that as\nmountpoint, and instead use the UNC path specified as the volume name, as if it were\nspecified with the `--volname` option. This will also implicitly set\nthe `--network-mode` option. This means the following two examples have same result:\n\n```sh\nrclone mount remote:path/to/files \\\\cloud\\remote\nrclone mount remote:path/to/files * --volname \\\\cloud\\remote\n```\n\nThere is yet another way to enable network mode, and to set the share path,\nand that is to pass the \"native\" libfuse/WinFsp option directly:\n`--fuse-flag --VolumePrefix=\\server\\share`. Note that the path\nmust be with just a single backslash prefix in this case.\n\n*Note:* In previous versions of rclone this was the only supported method.\n\n[Read more about drive mapping](https://en.wikipedia.org/wiki/Drive_mapping)\n\nSee also [Limitations](#limitations) section below.\n\n#### Windows filesystem permissions\n\nThe FUSE emulation layer on Windows must convert between the POSIX-based\npermission model used in FUSE, and the permission model used in Windows,\nbased on access-control lists (ACL).\n\nThe mounted filesystem will normally get three entries in its access-control list\n(ACL), representing permissions for the POSIX permission scopes: Owner, group and\nothers. By default, the owner and group will be taken from the current user, and\nthe built-in group \"Everyone\" will be used to represent others. The user/group can\nbe customized with FUSE options \"UserName\" and \"GroupName\",\ne.g. `-o UserName=user123 -o GroupName=\"Authenticated Users\"`.\nThe permissions on each entry will be set according to [options](#options)\n`--dir-perms` and `--file-perms`, which takes a value in traditional Unix\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\n\nThe default permissions corresponds to `--file-perms 0666 --dir-perms 0777`,\ni.e. read and write permissions to everyone. This means you will not be able\nto start any programs from the mount. To be able to do that you must add\nexecute permissions, e.g. `--file-perms 0777 --dir-perms 0777` to add it\nto everyone. If the program needs to write files, chances are you will\nhave to enable [VFS File Caching](#vfs-file-caching) as well (see also\n[limitations](#limitations)). Note that the default write permission have\nsome restrictions for accounts other than the owner, specifically it lacks\nthe \"write extended attributes\", as explained next.\n\nThe mapping of permissions is not always trivial, and the result you see in\nWindows Explorer may not be exactly like you expected. For example, when setting\na value that includes write access for the group or others scope, this will be\nmapped to individual permissions \"write attributes\", \"write data\" and\n\"append data\", but not \"write extended attributes\". Windows will then show this\nas basic permission \"Special\" instead of \"Write\", because \"Write\" also covers\nthe \"write extended attributes\" permission. When setting digit 0 for group or\nothers, to indicate no permissions, they will still get individual permissions\n\"read attributes\", \"read extended attributes\" and \"read permissions\". This is\ndone for compatibility reasons, e.g. to allow users without additional\npermissions to be able to read basic metadata about files like in Unix.\n\nWinFsp 2021 (version 1.9) introduced a new FUSE option \"FileSecurity\",\nthat allows the complete specification of file security descriptors using\n[SDDL](https://docs.microsoft.com/en-us/windows/win32/secauthz/security-descriptor-string-format).\nWith this you get detailed control of the resulting permissions, compared\nto use of the POSIX permissions described above, and no additional permissions\nwill be added automatically for compatibility with Unix. Some example use\ncases will following.\n\nIf you set POSIX permissions for only allowing access to the owner,\nusing `--file-perms 0600 --dir-perms 0700`, the user group and the built-in\n\"Everyone\" group will still be given some special permissions, as described\nabove. Some programs may then (incorrectly) interpret this as the file being\naccessible by everyone, for example an SSH client may warn about \"unprotected\nprivate key file\". You can work around this by specifying\n`-o FileSecurity=\"D:P(A;;FA;;;OW)\"`, which sets file all access (FA) to the\nowner (OW), and nothing else.\n\nWhen setting write permissions then, except for the owner, this does not\ninclude the \"write extended attributes\" permission, as mentioned above.\nThis may prevent applications from writing to files, giving permission denied\nerror instead. To set working write permissions for the built-in \"Everyone\"\ngroup, similar to what it gets by default but with the addition of the\n\"write extended attributes\", you can specify\n`-o FileSecurity=\"D:P(A;;FRFW;;;WD)\"`, which sets file read (FR) and file\nwrite (FW) to everyone (WD). If file execute (FX) is also needed, then change\nto `-o FileSecurity=\"D:P(A;;FRFWFX;;;WD)\"`, or set file all access (FA) to\nget full access permissions, including delete, with\n`-o FileSecurity=\"D:P(A;;FA;;;WD)\"`.\n\n#### Windows caveats\n\nDrives created as Administrator are not visible to other accounts,\nnot even an account that was elevated to Administrator with the\nUser Account Control (UAC) feature. A result of this is that if you mount\nto a drive letter from a Command Prompt run as Administrator, and then try\nto access the same drive from Windows Explorer (which does not run as\nAdministrator), you will not be able to see the mounted drive.\n\nIf you don't need to access the drive from applications running with\nadministrative privileges, the easiest way around this is to always\ncreate the mount from a non-elevated command prompt.\n\nTo make mapped drives available to the user account that created them\nregardless if elevated or not, there is a special Windows setting called\n[linked connections](https://docs.microsoft.com/en-us/troubleshoot/windows-client/networking/mapped-drives-not-available-from-elevated-command#detail-to-configure-the-enablelinkedconnections-registry-entry)\nthat can be enabled.\n\nIt is also possible to make a drive mount available to everyone on the system,\nby running the process creating it as the built-in SYSTEM account.\nThere are several ways to do this: One is to use the command-line\nutility [PsExec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec),\nfrom Microsoft's Sysinternals suite, which has option `-s` to start\nprocesses as the SYSTEM account. Another alternative is to run the mount\ncommand from a Windows Scheduled Task, or a Windows Service, configured\nto run as the SYSTEM account. A third alternative is to use the\n[WinFsp.Launcher infrastructure](https://github.com/winfsp/winfsp/wiki/WinFsp-Service-Architecture)).\nRead more in the [install documentation](https://rclone.org/install/).\nNote that when running rclone as another user, it will not use\nthe configuration file from your profile unless you tell it to\nwith the [`--config`](https://rclone.org/docs/#config-string) option.\nNote also that it is now the SYSTEM account that will have the owner\npermissions, and other accounts will have permissions according to the\ngroup or others scopes. As mentioned above, these will then not get the\n\"write extended attributes\" permission, and this may prevent writing to\nfiles. You can work around this with the FileSecurity option, see\nexample above.\n\nNote that mapping to a directory path, instead of a drive letter,\ndoes not suffer from the same limitations.\n\n### Mounting on macOS\n\nMounting on macOS can be done either via [built-in NFS server](/commands/rclone_serve_nfs/),\n[macFUSE](https://osxfuse.github.io/) (also known as osxfuse) or\n[FUSE-T](https://www.fuse-t.org/).macFUSE is a traditional FUSE driver utilizing\na macOS kernel extension (kext). FUSE-T is an alternative FUSE system which\n\"mounts\" via an NFSv4 local server.\n\n#### Unicode Normalization\n\nIt is highly recommended to keep the default of `--no-unicode-normalization=false`\nfor all `mount` and `serve` commands on macOS. For details, see [vfs-case-sensitivity](https://rclone.org/commands/rclone_mount/#vfs-case-sensitivity).\n\n#### NFS mount\n\nThis method spins up an NFS server using [serve nfs](/commands/rclone_serve_nfs/)\ncommand and mounts it to the specified mountpoint. If you run this in background\nmode using |--daemon|, you will need to send SIGTERM signal to the rclone process\nusing |kill| command to stop the mount.\n\nNote that `--nfs-cache-handle-limit` controls the maximum number of cached file\nhandles stored by the `nfsmount` caching handler. This should not be set too low\nor you may experience errors when trying to access files. The default is 1000000,\nbut consider lowering this limit if the server's system resource usage causes problems.\n\n#### macFUSE Notes\n\nIf installing macFUSE using [dmg packages](https://github.com/osxfuse/osxfuse/releases)\nfrom the website, rclone will locate the macFUSE libraries without any further intervention.\nIf however, macFUSE is installed using the [macports](https://www.macports.org/)\npackage manager, the following addition steps are required.\n\n```sh\nsudo mkdir /usr/local/lib\ncd /usr/local/lib\nsudo ln -s /opt/local/lib/libfuse.2.dylib\n```\n\n#### FUSE-T Limitations, Caveats, and Notes\n\nThere are some limitations, caveats, and notes about how it works. These are\ncurrent as  of FUSE-T version 1.0.14.\n\n##### ModTime update on read\n\nAs per the [FUSE-T wiki](https://github.com/macos-fuse-t/fuse-t/wiki#caveats):\n\n> File access and modification times cannot be set separately as it seems to be an\n> issue with the NFS client which always modifies both. Can be reproduced with\n> 'touch -m' and 'touch -a' commands\n\nThis means that viewing files with various tools, notably macOS Finder, will cause\nrlcone to update the modification time of the file. This may make rclone upload a\nfull new copy of the file.\n\n##### Read Only mounts\n\nWhen mounting with `--read-only`, attempts to write to files will fail *silently*\nas opposed to with a clear warning as in macFUSE.\n\n### Limitations\n\nWithout the use of `--vfs-cache-mode` this can only write files\nsequentially, it can only seek when reading.  This means that many\napplications won't work with their files on an rclone mount without\n`--vfs-cache-mode writes` or `--vfs-cache-mode full`.\nSee the [VFS File Caching](#vfs-file-caching) section for more info.\nWhen using NFS mount on macOS, if you don't specify |--vfs-cache-mode|\nthe mount point will be read-only.\n\nBucket-based remotes - Azure Blob, Swift, S3, Google Cloud Storage and B2 -\ncan't store empty directories. Of these, only Azure Blob, Google Cloud Storage\nand S3 can preserve them when you add `--xxx-directory_markers`; otherwise,\nempty directories will vanish once they drop out of the directory cache.\n\nWhen `rclone mount` is invoked on Unix with `--daemon` flag, the main rclone\nprogram will wait for the background mount to become ready or until the timeout\nspecified by the `--daemon-wait` flag. On Linux it can check mount status using\nProcFS so the flag in fact sets **maximum** time to wait, while the real wait\ncan be less. On macOS / BSD the time to wait is constant and the check is\nperformed only at the end. We advise you to set wait time on macOS reasonably.\n\nOnly supported on Linux, FreeBSD, OS X and Windows at the moment.\n\n### rclone mount vs rclone sync/copy\n\nFile systems expect things to be 100% reliable, whereas cloud storage\nsystems are a long way from 100% reliable. The rclone sync/copy\ncommands cope with this with lots of retries.  However rclone mount\ncan't use retries in the same way without making local copies of the\nuploads. Look at the [VFS File Caching](#vfs-file-caching)\nfor solutions to make mount more reliable.\n\n### Attribute caching\n\nYou can use the flag `--attr-timeout` to set the time the kernel caches\nthe attributes (size, modification time, etc.) for directory entries.\n\nThe default is `1s` which caches files just long enough to avoid\ntoo many callbacks to rclone from the kernel.\n\nIn theory 0s should be the correct value for filesystems which can\nchange outside the control of the kernel. However this causes quite a\nfew problems such as\n[rclone using too much memory](https://github.com/rclone/rclone/issues/2157),\n[rclone not serving files to samba](https://forum.rclone.org/t/rclone-1-39-vs-1-40-mount-issue/5112)\nand [excessive time listing directories](https://github.com/rclone/rclone/issues/2095#issuecomment-371141147).\n\nThe kernel can cache the info about a file for the time given by\n`--attr-timeout`. You may see corruption if the remote file changes\nlength during this window.  It will show up as either a truncated file\nor a file with garbage on the end.  With `--attr-timeout 1s` this is\nvery unlikely but not impossible.  The higher you set `--attr-timeout`\nthe more likely it is.  The default setting of \"1s\" is the lowest\nsetting which mitigates the problems above.\n\nIf you set it higher (`10s` or `1m` say) then the kernel will call\nback to rclone less often making it more efficient, however there is\nmore chance of the corruption issue above.\n\nIf files don't change on the remote outside of the control of rclone\nthen there is no chance of corruption.\n\nThis is the same as setting the attr_timeout option in mount.fuse.\n\n### Filters\n\nNote that all the rclone filters can be used to select a subset of the\nfiles to be visible in the mount.\n\n### systemd\n\nWhen running rclone mount as a systemd service, it is possible\nto use Type=notify. In this case the service will enter the started state\nafter the mountpoint has been successfully set up.\nUnits having the rclone mount service specified as a requirement\nwill see all files and folders immediately in this mode.\n\nNote that systemd runs mount units without any environment variables including\n`PATH` or `HOME`. This means that tilde (`~`) expansion will not work\nand you should provide `--config` and `--cache-dir` explicitly as absolute\npaths via rclone arguments.\nSince mounting requires the `fusermount` or `fusermount3` program,\nrclone will use the fallback PATH of `/bin:/usr/bin` in this scenario.\nPlease ensure that `fusermount`/`fusermount3` is present on this PATH.\n\n### Rclone as Unix mount helper\n\nThe core Unix program `/bin/mount` normally takes the `-t FSTYPE` argument\nthen runs the `/sbin/mount.FSTYPE` helper program passing it mount options\nas `-o key=val,...` or `--opt=...`. Automount (classic or systemd) behaves\nin a similar way.\n\nrclone by default expects GNU-style flags `--key val`. To run it as a mount\nhelper you should symlink rclone binary to `/sbin/mount.rclone` and optionally\n`/usr/bin/rclonefs`, e.g. `ln -s /usr/bin/rclone /sbin/mount.rclone`.\nrclone will detect it and translate command-line arguments appropriately.\n\nNow you can run classic mounts like this:\n\n```sh\nmount sftp1:subdir /mnt/data -t rclone -o vfs_cache_mode=writes,sftp_key_file=/path/to/pem\n```\n\nor create systemd mount units:\n\n```ini\n# /etc/systemd/system/mnt-data.mount\n[Unit]\nDescription=Mount for /mnt/data\n[Mount]\nType=rclone\nWhat=sftp1:subdir\nWhere=/mnt/data\nOptions=rw,_netdev,allow_other,args2env,vfs-cache-mode=writes,config=/etc/rclone.conf,cache-dir=/var/rclone\n```\n\noptionally accompanied by systemd automount unit\n\n```ini\n# /etc/systemd/system/mnt-data.automount\n[Unit]\nDescription=AutoMount for /mnt/data\n[Automount]\nWhere=/mnt/data\nTimeoutIdleSec=600\n[Install]\nWantedBy=multi-user.target\n```\n\nor add in `/etc/fstab` a line like\n\n```sh\nsftp1:subdir /mnt/data rclone rw,noauto,nofail,_netdev,x-systemd.automount,args2env,vfs_cache_mode=writes,config=/etc/rclone.conf,cache_dir=/var/cache/rclone 0 0\n```\n\nor use classic Automountd.\nRemember to provide explicit `config=...,cache-dir=...` as a workaround for\nmount units being run without `HOME`.\n\nRclone in the mount helper mode will split `-o` argument(s) by comma, replace `_`\nby `-` and prepend `--` to get the command-line flags. Options containing commas\nor spaces can be wrapped in single or double quotes. Any inner quotes inside outer\nquotes of the same type should be doubled.\n\nMount option syntax includes a few extra options treated specially:\n\n- `env.NAME=VALUE` will set an environment variable for the mount process.\n  This helps with Automountd and Systemd.mount which don't allow setting\n  custom environment for mount helpers.\n  Typically you will use `env.HTTPS_PROXY=proxy.host:3128` or `env.HOME=/root`\n- `command=cmount` can be used to run `cmount` or any other rclone command\n  rather than the default `mount`.\n- `args2env` will pass mount options to the mount helper running in background\n  via environment variables instead of command line arguments. This allows to\n  hide secrets from such commands as `ps` or `pgrep`.\n- `vv...` will be transformed into appropriate `--verbose=N`\n- standard mount options like `x-systemd.automount`, `_netdev`, `nosuid` and alike\n  are intended only for Automountd and ignored by rclone.\n\n### VFS - Virtual File System\n\nThis command uses the VFS layer. This adapts the cloud storage objects\nthat rclone uses into something which looks much more like a disk\nfiling system.\n\nCloud storage objects have lots of properties which aren't like disk\nfiles - you can't extend them or write to the middle of them, so the\nVFS layer has to deal with that. Because there is no one right way of\ndoing this there are various options explained below.\n\nThe VFS layer also implements a directory cache - this caches info\nabout files and directories (but not the data) in memory.\n\n### VFS Directory Cache\n\nUsing the `--dir-cache-time` flag, you can control how long a\ndirectory should be considered up to date and not refreshed from the\nbackend. Changes made through the VFS will appear immediately or\ninvalidate the cache.\n\n```text\n    --dir-cache-time duration   Time to cache directory entries for (default 5m0s)\n    --poll-interval duration    Time to wait between polling for changes. Must be smaller than dir-cache-time. Only on supported remotes. Set to 0 to disable (default 1m0s)\n```\n\nHowever, changes made directly on the cloud storage by the web\ninterface or a different copy of rclone will only be picked up once\nthe directory cache expires if the backend configured does not support\npolling for changes. If the backend supports polling, changes will be\npicked up within the polling interval.\n\nYou can send a `SIGHUP` signal to rclone for it to flush all\ndirectory caches, regardless of how old they are.  Assuming only one\nrclone instance is running, you can reset the cache like this:\n\n```sh\nkill -SIGHUP $(pidof rclone)\n```\n\nIf you configure rclone with a [remote control](/rc) then you can use\nrclone rc to flush the whole directory cache:\n\n```sh\nrclone rc vfs/forget\n```\n\nOr individual files or directories:\n\n```sh\nrclone rc vfs/forget file=path/to/file dir=path/to/dir\n```\n\n### VFS File Buffering\n\nThe `--buffer-size` flag determines the amount of memory,\nthat will be used to buffer data in advance.\n\nEach open file will try to keep the specified amount of data in memory\nat all times. The buffered data is bound to one open file and won't be\nshared.\n\nThis flag is a upper limit for the used memory per open file.  The\nbuffer will only use memory for data that is downloaded but not not\nyet read. If the buffer is empty, only a small amount of memory will\nbe used.\n\nThe maximum memory used by rclone for buffering can be up to\n`--buffer-size * open files`.\n\n### VFS File Caching\n\nThese flags control the VFS file caching options. File caching is\nnecessary to make the VFS layer appear compatible with a normal file\nsystem. It can be disabled at the cost of some compatibility.\n\nFor example you'll need to enable VFS caching if you want to read and\nwrite simultaneously to a file.  See below for more details.\n\nNote that the VFS cache is separate from the cache backend and you may\nfind that you need one or the other or both.\n\n```text\n    --cache-dir string                     Directory rclone will use for caching.\n    --vfs-cache-mode CacheMode             Cache mode off|minimal|writes|full (default off)\n    --vfs-cache-max-age duration           Max time since last access of objects in the cache (default 1h0m0s)\n    --vfs-cache-max-size SizeSuffix        Max total size of objects in the cache (default off)\n    --vfs-cache-min-free-space SizeSuffix  Target minimum free space on the disk containing the cache (default off)\n    --vfs-cache-poll-interval duration     Interval to poll the cache for stale objects (default 1m0s)\n    --vfs-write-back duration              Time to writeback files after last use when using cache (default 5s)\n```\n\nIf run with `-vv` rclone will print the location of the file cache.  The\nfiles are stored in the user cache file area which is OS dependent but\ncan be controlled with `--cache-dir` or setting the appropriate\nenvironment variable.\n\nThe cache has 4 different modes selected by `--vfs-cache-mode`.\nThe higher the cache mode the more compatible rclone becomes at the\ncost of using disk space.\n\nNote that files are written back to the remote only when they are\nclosed and if they haven't been accessed for `--vfs-write-back`\nseconds. If rclone is quit or dies with files that haven't been\nuploaded, these will be uploaded next time rclone is run with the same\nflags.\n\nIf using `--vfs-cache-max-size` or `--vfs-cache-min-free-space` note\nthat the cache may exceed these quotas for two reasons. Firstly\nbecause it is only checked every `--vfs-cache-poll-interval`. Secondly\nbecause open files cannot be evicted from the cache. When\n`--vfs-cache-max-size` or `--vfs-cache-min-free-space` is exceeded,\nrclone will attempt to evict the least accessed files from the cache\nfirst. rclone will start with files that haven't been accessed for the\nlongest. This cache flushing strategy is efficient and more relevant\nfiles are likely to remain cached.\n\nThe `--vfs-cache-max-age` will evict files from the cache\nafter the set time since last access has passed. The default value of\n1 hour will start evicting files from cache that haven't been accessed\nfor 1 hour. When a cached file is accessed the 1 hour timer is reset to 0\nand will wait for 1 more hour before evicting. Specify the time with\nstandard notation, s, m, h, d, w .\n\nYou **should not** run two copies of rclone using the same VFS cache\nwith the same or overlapping remotes if using `--vfs-cache-mode > off`.\nThis can potentially cause data corruption if you do. You can work\naround this by giving each rclone its own cache hierarchy with\n`--cache-dir`. You don't need to worry about this if the remotes in\nuse don't overlap.\n\n#### --vfs-cache-mode off\n\nIn this mode (the default) the cache will read directly from the remote and write\ndirectly to the remote without caching anything on disk.\n\nThis will mean some operations are not possible\n\n- Files can't be opened for both read AND write\n- Files opened for write can't be seeked\n- Existing files opened for write must have O_TRUNC set\n- Files open for read with O_TRUNC will be opened write only\n- Files open for write only will behave as if O_TRUNC was supplied\n- Open modes O_APPEND, O_TRUNC are ignored\n- If an upload fails it can't be retried\n\n#### --vfs-cache-mode minimal\n\nThis is very similar to \"off\" except that files opened for read AND\nwrite will be buffered to disk.  This means that files opened for\nwrite will be a lot more compatible, but uses the minimal disk space.\n\nThese operations are not possible\n\n- Files opened for write only can't be seeked\n- Existing files opened for write must have O_TRUNC set\n- Files opened for write only will ignore O_APPEND, O_TRUNC\n- If an upload fails it can't be retried\n\n#### --vfs-cache-mode writes\n\nIn this mode files opened for read only are still read directly from\nthe remote, write only and read/write files are buffered to disk\nfirst.\n\nThis mode should support all normal file system operations.\n\nIf an upload fails it will be retried at exponentially increasing\nintervals up to 1 minute.\n\n#### --vfs-cache-mode full\n\nIn this mode all reads and writes are buffered to and from disk. When\ndata is read from the remote this is buffered to disk as well.\n\nIn this mode the files in the cache will be sparse files and rclone\nwill keep track of which bits of the files it has downloaded.\n\nSo if an application only reads the starts of each file, then rclone\nwill only buffer the start of the file. These files will appear to be\ntheir full size in the cache, but they will be sparse files with only\nthe data that has been downloaded present in them.\n\nThis mode should support all normal file system operations and is\notherwise identical to `--vfs-cache-mode` writes.\n\nWhen reading a file rclone will read `--buffer-size` plus\n`--vfs-read-ahead` bytes ahead.  The `--buffer-size` is buffered in memory\nwhereas the `--vfs-read-ahead` is buffered on disk.\n\nWhen using this mode it is recommended that `--buffer-size` is not set\ntoo large and `--vfs-read-ahead` is set large if required.\n\n**IMPORTANT** not all file systems support sparse files. In particular\nFAT/exFAT do not. Rclone will perform very badly if the cache\ndirectory is on a filesystem which doesn't support sparse files and it\nwill log an ERROR message if one is detected.\n\n#### Fingerprinting\n\nVarious parts of the VFS use fingerprinting to see if a local file\ncopy has changed relative to a remote file. Fingerprints are made\nfrom:\n\n- size\n- modification time\n- hash\n\nwhere available on an object.\n\nOn some backends some of these attributes are slow to read (they take\nan extra API call per object, or extra work per object).\n\nFor example `hash` is slow with the `local` and `sftp` backends as\nthey have to read the entire file and hash it, and `modtime` is slow\nwith the `s3`, `swift`, `ftp` and `qinqstor` backends because they\nneed to do an extra API call to fetch it.\n\nIf you use the `--vfs-fast-fingerprint` flag then rclone will not\ninclude the slow operations in the fingerprint. This makes the\nfingerprinting less accurate but much faster and will improve the\nopening time of cached files.\n\nIf you are running a vfs cache over `local`, `s3` or `swift` backends\nthen using this flag is recommended.\n\nNote that if you change the value of this flag, the fingerprints of\nthe files in the cache may be invalidated and the files will need to\nbe downloaded again.\n\n### VFS Chunked Reading\n\nWhen rclone reads files from a remote it reads them in chunks. This\nmeans that rather than requesting the whole file rclone reads the\nchunk specified.  This can reduce the used download quota for some\nremotes by requesting only chunks from the remote that are actually\nread, at the cost of an increased number of requests.\n\nThese flags control the chunking:\n\n```text\n    --vfs-read-chunk-size SizeSuffix        Read the source objects in chunks (default 128M)\n    --vfs-read-chunk-size-limit SizeSuffix  Max chunk doubling size (default off)\n    --vfs-read-chunk-streams int            The number of parallel streams to read at once\n```\n\nThe chunking behaves differently depending on the `--vfs-read-chunk-streams` parameter.\n\n#### `--vfs-read-chunk-streams` == 0\n\nRclone will start reading a chunk of size `--vfs-read-chunk-size`,\nand then double the size for each read. When `--vfs-read-chunk-size-limit` is\nspecified, and greater than `--vfs-read-chunk-size`, the chunk size for each\nopen file will get doubled only until the specified value is reached. If the\nvalue is \"off\", which is the default, the limit is disabled and the chunk size\nwill grow indefinitely.\n\nWith `--vfs-read-chunk-size 100M` and `--vfs-read-chunk-size-limit 0`\nthe following parts will be downloaded: 0-100M, 100M-200M, 200M-300M, 300M-400M\nand so on. When `--vfs-read-chunk-size-limit 500M` is specified, the result would\nbe 0-100M, 100M-300M, 300M-700M, 700M-1200M, 1200M-1700M and so on.\n\nSetting `--vfs-read-chunk-size` to `0` or \"off\" disables chunked reading.\n\nThe chunks will not be buffered in memory.\n\n#### `--vfs-read-chunk-streams` > 0\n\nRclone reads `--vfs-read-chunk-streams` chunks of size\n`--vfs-read-chunk-size` concurrently. The size for each read will stay\nconstant.\n\nThis improves performance performance massively on high latency links\nor very high bandwidth links to high performance object stores.\n\nSome experimentation will be needed to find the optimum values of\n`--vfs-read-chunk-size` and `--vfs-read-chunk-streams` as these will\ndepend on the backend in use and the latency to the backend.\n\nFor high performance object stores (eg AWS S3) a reasonable place to\nstart might be `--vfs-read-chunk-streams 16` and\n`--vfs-read-chunk-size 4M`. In testing with AWS S3 the performance\nscaled roughly as the `--vfs-read-chunk-streams` setting.\n\nSimilar settings should work for high latency links, but depending on\nthe latency they may need more `--vfs-read-chunk-streams` in order to\nget the throughput.\n\n### VFS Performance\n\nThese flags may be used to enable/disable features of the VFS for\nperformance or other reasons. See also the [chunked reading](#vfs-chunked-reading)\nfeature.\n\nIn particular S3 and Swift benefit hugely from the `--no-modtime` flag\n(or use `--use-server-modtime` for a slightly different effect) as each\nread of the modification time takes a transaction.\n\n```text\n    --no-checksum     Don't compare checksums on up/download.\n    --no-modtime      Don't read/write the modification time (can speed things up).\n    --no-seek         Don't allow seeking in files.\n    --read-only       Only allow read-only access.\n```\n\nSometimes rclone is delivered reads or writes out of order. Rather\nthan seeking rclone will wait a short time for the in sequence read or\nwrite to come in. These flags only come into effect when not using an\non disk cache file.\n\n```text\n    --vfs-read-wait duration   Time to wait for in-sequence read before seeking (default 20ms)\n    --vfs-write-wait duration  Time to wait for in-sequence write before giving error (default 1s)\n```\n\nWhen using VFS write caching (`--vfs-cache-mode` with value writes or full),\nthe global flag `--transfers` can be set to adjust the number of parallel uploads\nof modified files from the cache (the related global flag `--checkers` has no\neffect on the VFS).\n\n```text\n    --transfers int  Number of file transfers to run in parallel (default 4)\n```\n\n### Symlinks\n\nBy default the VFS does not support symlinks. However this may be\nenabled with either of the following flags:\n\n```text\n    --links      Translate symlinks to/from regular files with a '.rclonelink' extension.\n    --vfs-links  Translate symlinks to/from regular files with a '.rclonelink' extension for the VFS\n```\n\nAs most cloud storage systems do not support symlinks directly, rclone\nstores the symlink as a normal file with a special extension. So a\nfile which appears as a symlink `link-to-file.txt` would be stored on\ncloud storage as `link-to-file.txt.rclonelink` and the contents would\nbe the path to the symlink destination.\n\nNote that `--links` enables symlink translation globally in rclone -\nthis includes any backend which supports the concept (for example the\nlocal backend). `--vfs-links` just enables it for the VFS layer.\n\nThis scheme is compatible with that used by the\n[local backend with the --local-links flag](/local/#symlinks-junction-points).\n\nThe `--vfs-links` flag has been designed for `rclone mount`, `rclone\nnfsmount` and `rclone serve nfs`.\n\nIt hasn't been tested with the other `rclone serve` commands yet.\n\nA limitation of the current implementation is that it expects the\ncaller to resolve sub-symlinks. For example given this directory tree\n\n```text\n.\n\u251c\u2500\u2500 dir\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 file.txt\n\u2514\u2500\u2500 linked-dir -> dir\n```\n\nThe VFS will correctly resolve `linked-dir` but not\n`linked-dir/file.txt`. This is not a problem for the tested commands\nbut may be for other commands.\n\n**Note** that there is an outstanding issue with symlink support\n[issue #8245](https://github.com/rclone/rclone/issues/8245) with duplicate\nfiles being created when symlinks are moved into directories where\nthere is a file of the same name (or vice versa).\n\n### VFS Case Sensitivity\n\nLinux file systems are case-sensitive: two files can differ only\nby case, and the exact case must be used when opening a file.\n\nFile systems in modern Windows are case-insensitive but case-preserving:\nalthough existing files can be opened using any case, the exact case used\nto create the file is preserved and available for programs to query.\nIt is not allowed for two files in the same directory to differ only by case.\n\nUsually file systems on macOS are case-insensitive. It is possible to make macOS\nfile systems case-sensitive but that is not the default.\n\nThe `--vfs-case-insensitive` VFS flag controls how rclone handles these\ntwo cases. If its value is \"false\", rclone passes file names to the remote\nas-is. If the flag is \"true\" (or appears without a value on the\ncommand line), rclone may perform a \"fixup\" as explained below.\n\nThe user may specify a file name to open/delete/rename/etc with a case\ndifferent than what is stored on the remote. If an argument refers\nto an existing file with exactly the same name, then the case of the existing\nfile on the disk will be used. However, if a file name with exactly the same\nname is not found but a name differing only by case exists, rclone will\ntransparently fixup the name. This fixup happens only when an existing file\nis requested. Case sensitivity of file names created anew by rclone is\ncontrolled by the underlying remote.\n\nNote that case sensitivity of the operating system running rclone (the target)\nmay differ from case sensitivity of a file system presented by rclone (the source).\nThe flag controls whether \"fixup\" is performed to satisfy the target.\n\nIf the flag is not provided on the command line, then its default value depends\non the operating system where rclone runs: \"true\" on Windows and macOS, \"false\"\notherwise. If the flag is provided without a value, then it is \"true\".\n\nThe `--no-unicode-normalization` flag controls whether a similar \"fixup\" is\nperformed for filenames that differ but are [canonically\nequivalent](https://en.wikipedia.org/wiki/Unicode_equivalence) with respect to\nunicode. Unicode normalization can be particularly helpful for users of macOS,\nwhich prefers form NFD instead of the NFC used by most other platforms. It is\ntherefore highly recommended to keep the default of `false` on macOS, to avoid\nencoding compatibility issues.\n\nIn the (probably unlikely) event that a directory has multiple duplicate\nfilenames after applying case and unicode normalization, the `--vfs-block-norm-dupes`\nflag allows hiding these duplicates. This comes with a performance tradeoff, as\nrclone will have to scan the entire directory for duplicates when listing a\ndirectory. For this reason, it is recommended to leave this disabled if not\nneeded. However, macOS users may wish to consider using it, as otherwise, if a\nremote directory contains both NFC and NFD versions of the same filename, an odd\nsituation will occur: both versions of the file will be visible in the mount,\nand both will appear to be editable, however, editing either version will\nactually result in only the NFD version getting edited under the hood. `--vfs-block-\nnorm-dupes` prevents this confusion by detecting this scenario, hiding the\nduplicates, and logging an error, similar to how this is handled in `rclone\nsync`.\n\n### VFS Disk Options\n\nThis flag allows you to manually set the statistics about the filing system.\nIt can be useful when those statistics cannot be read correctly automatically.\n\n```text\n    --vfs-disk-space-total-size    Manually set the total disk space size (example: 256G, default: -1)\n```\n\n### Alternate report of used bytes\n\nSome backends, most notably S3, do not report the amount of bytes used.\nIf you need this information to be available when running `df` on the\nfilesystem, then pass the flag `--vfs-used-is-size` to rclone.\nWith this flag set, instead of relying on the backend to report this\ninformation, rclone will scan the whole remote similar to `rclone size`\nand compute the total used space itself.\n\n**WARNING**: Contrary to `rclone size`, this flag ignores filters so that the\nresult is accurate. However, this is very inefficient and may cost lots of API\ncalls resulting in extra charges. Use it as a last resort and only with caching.\n\n### VFS Metadata\n\nIf you use the `--vfs-metadata-extension` flag you can get the VFS to\nexpose files which contain the [metadata](/docs/#metadata) as a JSON\nblob. These files will not appear in the directory listing, but can be\n`stat`-ed and opened and once they have been they **will** appear in\ndirectory listings until the directory cache expires.\n\nNote that some backends won't create metadata unless you pass in the\n`--metadata` flag.\n\nFor example, using `rclone mount` with `--metadata --vfs-metadata-extension .metadata`\nwe get\n\n```sh\n$ ls -l /mnt/\ntotal 1048577\n-rw-rw-r-- 1 user user 1073741824 Mar  3 16:03 1G\n\n$ cat /mnt/1G.metadata\n{\n        \"atime\": \"2025-03-04T17:34:22.317069787Z\",\n        \"btime\": \"2025-03-03T16:03:37.708253808Z\",\n        \"gid\": \"1000\",\n        \"mode\": \"100664\",\n        \"mtime\": \"2025-03-03T16:03:39.640238323Z\",\n        \"uid\": \"1000\"\n}\n\n$ ls -l /mnt/\ntotal 1048578\n-rw-rw-r-- 1 user user 1073741824 Mar  3 16:03 1G\n-rw-rw-r-- 1 user user        185 Mar  3 16:03 1G.metadata\n```\n\nIf the file has no metadata it will be returned as `{}` and if there\nis an error reading the metadata the error will be returned as\n`{\"error\":\"error string\"}`.\n\nUsage:\n  rclone mount remote:path /path/to/mountpoint [flags]\n\nFlags:\n      --allow-non-empty                        Allow mounting over a non-empty directory (not supported on Windows)\n      --allow-other                            Allow access to other users (not supported on Windows)\n      --allow-root                             Allow access to root user (not supported on Windows)\n      --async-read                             Use asynchronous reads (not supported on Windows) (default true)\n      --attr-timeout Duration                  Time for which file/directory attributes are cached (default 1s)\n      --daemon                                 Run mount in background and exit parent process (as background output is suppressed, use --log-file with --log-format=pid,... to monitor) (not supported on Windows)\n      --daemon-timeout Duration                Time limit for rclone to respond to kernel (not supported on Windows) (default 0s)\n      --daemon-wait Duration                   Time to wait for ready mount from daemon (maximum time on Linux, constant sleep time on OSX/BSD) (not supported on Windows) (default 1m0s)\n      --debug-fuse                             Debug the FUSE internals - needs -v\n      --default-permissions                    Makes kernel enforce access control based on the file mode (not supported on Windows)\n      --devname string                         Set the device name - default is remote:path\n      --dir-cache-time Duration                Time to cache directory entries for (default 5m0s)\n      --dir-perms FileMode                     Directory permissions (default 777)\n      --direct-io                              Use Direct IO, disables caching of data\n      --file-perms FileMode                    File permissions (default 666)\n      --fuse-flag stringArray                  Flags or arguments to be passed direct to libfuse/WinFsp (repeat if required)\n      --gid uint32                             Override the gid field set by the filesystem (not supported on Windows) (default 1000)\n  -h, --help                                   help for mount\n      --link-perms FileMode                    Link permissions (default 666)\n      --max-read-ahead SizeSuffix              The number of bytes that can be prefetched for sequential reads (not supported on Windows) (default 128Ki)\n      --mount-case-insensitive Tristate        Tell the OS the mount is case insensitive (true) or sensitive (false) regardless of the backend (auto) (default unset)\n      --network-mode                           Mount as remote network drive, instead of fixed disk drive (supported on Windows only)\n      --no-checksum                            Don't compare checksums on up/download\n      --no-modtime                             Don't read/write the modification time (can speed things up)\n      --no-seek                                Don't allow seeking in files\n      --noappledouble                          Ignore Apple Double (._) and .DS_Store files (supported on OSX only) (default true)\n      --noapplexattr                           Ignore all \"com.apple.*\" extended attributes (supported on OSX only)\n  -o, --option stringArray                     Option for libfuse/WinFsp (repeat if required)\n      --poll-interval Duration                 Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)\n      --read-only                              Only allow read-only access\n      --uid uint32                             Override the uid field set by the filesystem (not supported on Windows) (default 1000)\n      --umask FileMode                         Override the permission bits set by the filesystem (not supported on Windows) (default 022)\n      --vfs-block-norm-dupes                   If duplicate filenames exist in the same directory (after normalization), log an error and hide the duplicates (may have a performance cost)\n      --vfs-cache-max-age Duration             Max time since last access of objects in the cache (default 1h0m0s)\n      --vfs-cache-max-size SizeSuffix          Max total size of objects in the cache (default off)\n      --vfs-cache-min-free-space SizeSuffix    Target minimum free space on the disk containing the cache (default off)\n      --vfs-cache-mode CacheMode               Cache mode off|minimal|writes|full (default off)\n      --vfs-cache-poll-interval Duration       Interval to poll the cache for stale objects (default 1m0s)\n      --vfs-case-insensitive                   If a file name not found, find a case insensitive match\n      --vfs-disk-space-total-size SizeSuffix   Specify the total space of disk (default off)\n      --vfs-fast-fingerprint                   Use fast (less accurate) fingerprints for change detection\n      --vfs-links                              Translate symlinks to/from regular files with a '.rclonelink' extension for the VFS\n      --vfs-metadata-extension string          Set the extension to read metadata from\n      --vfs-read-ahead SizeSuffix              Extra read ahead over --buffer-size when using cache-mode full\n      --vfs-read-chunk-size SizeSuffix         Read the source objects in chunks (default 128Mi)\n      --vfs-read-chunk-size-limit SizeSuffix   If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('off' is unlimited) (default off)\n      --vfs-read-chunk-streams int             The number of parallel streams to read at once\n      --vfs-read-wait Duration                 Time to wait for in-sequence read before seeking (default 20ms)\n      --vfs-refresh                            Refreshes the directory cache recursively in the background on start\n      --vfs-used-is-size rclone size           Use the rclone size algorithm for Used size\n      --vfs-write-back Duration                Time to writeback files after last use when using cache (default 5s)\n      --vfs-write-wait Duration                Time to wait for in-sequence write before giving error (default 1s)\n      --volname string                         Set the volume name (supported on Windows and OSX only)\n      --write-back-cache                       Makes kernel buffer writes before sending them to rclone (without this, writethrough caching is used) (not supported on Windows)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--allow-non-empty",
          "description": "Allow mounting over a non-empty directory (not supported on Windows)"
        },
        {
          "flag": "--allow-other",
          "description": "Allow access to other users (not supported on Windows)"
        },
        {
          "flag": "--allow-root",
          "description": "Allow access to root user (not supported on Windows)"
        },
        {
          "flag": "--async-read",
          "description": "Use asynchronous reads (not supported on Windows) (default true)"
        },
        {
          "flag": "--attr-timeout",
          "description": "Duration                  Time for which file/directory attributes are cached (default 1s)"
        },
        {
          "flag": "--daemon",
          "description": "Run mount in background and exit parent process (as background output is suppressed, use --log-file with --log-format=pid,... to monitor) (not supported on Windows)"
        },
        {
          "flag": "--daemon-timeout",
          "description": "Duration                Time limit for rclone to respond to kernel (not supported on Windows) (default 0s)"
        },
        {
          "flag": "--daemon-wait",
          "description": "Duration                   Time to wait for ready mount from daemon (maximum time on Linux, constant sleep time on OSX/BSD) (not supported on Windows) (default 1m0s)"
        },
        {
          "flag": "--debug-fuse",
          "description": "Debug the FUSE internals - needs -v"
        },
        {
          "flag": "--default-permissions",
          "description": "Makes kernel enforce access control based on the file mode (not supported on Windows)"
        },
        {
          "flag": "--devname",
          "description": "string                         Set the device name - default is remote:path"
        },
        {
          "flag": "--dir-cache-time",
          "description": "Duration                Time to cache directory entries for (default 5m0s)"
        },
        {
          "flag": "--dir-perms",
          "description": "FileMode                     Directory permissions (default 777)"
        },
        {
          "flag": "--direct-io",
          "description": "Use Direct IO, disables caching of data"
        },
        {
          "flag": "--file-perms",
          "description": "FileMode                    File permissions (default 666)"
        },
        {
          "flag": "--fuse-flag",
          "description": "stringArray                  Flags or arguments to be passed direct to libfuse/WinFsp (repeat if required)"
        },
        {
          "flag": "--gid",
          "description": "uint32                             Override the gid field set by the filesystem (not supported on Windows) (default 1000)"
        },
        {
          "flag": "-h,",
          "description": "--help                                   help for mount"
        },
        {
          "flag": "--link-perms",
          "description": "FileMode                    Link permissions (default 666)"
        },
        {
          "flag": "--max-read-ahead",
          "description": "SizeSuffix              The number of bytes that can be prefetched for sequential reads (not supported on Windows) (default 128Ki)"
        },
        {
          "flag": "--mount-case-insensitive",
          "description": "Tristate        Tell the OS the mount is case insensitive (true) or sensitive (false) regardless of the backend (auto) (default unset)"
        },
        {
          "flag": "--network-mode",
          "description": "Mount as remote network drive, instead of fixed disk drive (supported on Windows only)"
        },
        {
          "flag": "--no-checksum",
          "description": "Don't compare checksums on up/download"
        },
        {
          "flag": "--no-modtime",
          "description": "Don't read/write the modification time (can speed things up)"
        },
        {
          "flag": "--no-seek",
          "description": "Don't allow seeking in files"
        },
        {
          "flag": "--noappledouble",
          "description": "Ignore Apple Double (._) and .DS_Store files (supported on OSX only) (default true)"
        },
        {
          "flag": "--noapplexattr",
          "description": "Ignore all \"com.apple.*\" extended attributes (supported on OSX only)"
        },
        {
          "flag": "-o,",
          "description": "--option stringArray                     Option for libfuse/WinFsp (repeat if required)"
        },
        {
          "flag": "--poll-interval",
          "description": "Duration                 Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)"
        },
        {
          "flag": "--read-only",
          "description": "Only allow read-only access"
        },
        {
          "flag": "--uid",
          "description": "uint32                             Override the uid field set by the filesystem (not supported on Windows) (default 1000)"
        },
        {
          "flag": "--umask",
          "description": "FileMode                         Override the permission bits set by the filesystem (not supported on Windows) (default 022)"
        },
        {
          "flag": "--vfs-block-norm-dupes",
          "description": "If duplicate filenames exist in the same directory (after normalization), log an error and hide the duplicates (may have a performance cost)"
        },
        {
          "flag": "--vfs-cache-max-age",
          "description": "Duration             Max time since last access of objects in the cache (default 1h0m0s)"
        },
        {
          "flag": "--vfs-cache-max-size",
          "description": "SizeSuffix          Max total size of objects in the cache (default off)"
        },
        {
          "flag": "--vfs-cache-min-free-space",
          "description": "SizeSuffix    Target minimum free space on the disk containing the cache (default off)"
        },
        {
          "flag": "--vfs-cache-mode",
          "description": "CacheMode               Cache mode off|minimal|writes|full (default off)"
        },
        {
          "flag": "--vfs-cache-poll-interval",
          "description": "Duration       Interval to poll the cache for stale objects (default 1m0s)"
        },
        {
          "flag": "--vfs-case-insensitive",
          "description": "If a file name not found, find a case insensitive match"
        },
        {
          "flag": "--vfs-disk-space-total-size",
          "description": "SizeSuffix   Specify the total space of disk (default off)"
        },
        {
          "flag": "--vfs-fast-fingerprint",
          "description": "Use fast (less accurate) fingerprints for change detection"
        },
        {
          "flag": "--vfs-links",
          "description": "Translate symlinks to/from regular files with a '.rclonelink' extension for the VFS"
        },
        {
          "flag": "--vfs-metadata-extension",
          "description": "string          Set the extension to read metadata from"
        },
        {
          "flag": "--vfs-read-ahead",
          "description": "SizeSuffix              Extra read ahead over --buffer-size when using cache-mode full"
        },
        {
          "flag": "--vfs-read-chunk-size",
          "description": "SizeSuffix         Read the source objects in chunks (default 128Mi)"
        },
        {
          "flag": "--vfs-read-chunk-size-limit",
          "description": "SizeSuffix   If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('off' is unlimited) (default off)"
        },
        {
          "flag": "--vfs-read-chunk-streams",
          "description": "int             The number of parallel streams to read at once"
        },
        {
          "flag": "--vfs-read-wait",
          "description": "Duration                 Time to wait for in-sequence read before seeking (default 20ms)"
        },
        {
          "flag": "--vfs-refresh",
          "description": "Refreshes the directory cache recursively in the background on start"
        },
        {
          "flag": "--vfs-used-is-size",
          "description": "rclone size           Use the rclone size algorithm for Used size"
        },
        {
          "flag": "--vfs-write-back",
          "description": "Duration                Time to writeback files after last use when using cache (default 5s)"
        },
        {
          "flag": "--vfs-write-wait",
          "description": "Duration                Time to wait for in-sequence write before giving error (default 1s)"
        },
        {
          "flag": "--volname",
          "description": "string                         Set the volume name (supported on Windows and OSX only)"
        },
        {
          "flag": "--write-back-cache",
          "description": "Makes kernel buffer writes before sending them to rclone (without this, writethrough caching is used) (not supported on Windows)"
        }
      ]
    },
    "move": {
      "description": "Moves the contents of the source directory to the destination",
      "help_text": "Moves the contents of the source directory to the destination\ndirectory. Rclone will error if the source and destination overlap and\nthe remote does not support a server-side directory move operation.\n\nTo move single files, use the [moveto](/commands/rclone_moveto/)\ncommand instead.\n\nIf no filters are in use and if possible this will server-side move\n`source:path` into `dest:path`. After this `source:path` will no\nlonger exist.\n\nOtherwise for each file in `source:path` selected by the filters (if\nany) this will move it into `dest:path`.  If possible a server-side\nmove will be used, otherwise it will copy it (server-side if possible)\ninto `dest:path` then delete the original (if no errors on copy) in\n`source:path`.\n\nIf you want to delete empty source directories after move, use the\n`--delete-empty-src-dirs` flag.\n\nSee the [--no-traverse](/docs/#no-traverse) option for controlling\nwhether rclone lists the destination directory or not.  Supplying this\noption when moving a small number of files into a large destination\ncan speed transfers up greatly.\n\nRclone will sync the modification times of files and directories if\nthe backend supports it. If metadata syncing is required then use the\n`--metadata` flag.\n\nNote that the modification time and metadata for the root directory\nwill **not** be synced. See <https://github.com/rclone/rclone/issues/7652>\nfor more info.\n\n**Important**: Since this can cause data loss, test first with the\n`--dry-run` or the `--interactive`/`-i` flag.\n\n**Note**: Use the `-P`/`--progress` flag to view real-time transfer statistics.\n\n### Logger Flags\n\nThe `--differ`, `--missing-on-dst`, `--missing-on-src`, `--match` and `--error`\nflags write paths, one per line, to the file name (or stdout if it is `-`)\nsupplied. What they write is described in the help below. For example\n`--differ` will write all paths which are present on both the source and\ndestination but different.\n\nThe `--combined` flag will write a file (or stdout) which contains all\nfile paths with a symbol and then a space and then the path to tell\nyou what happened to it. These are reminiscent of diff files.\n\n- `= path` means path was found in source and destination and was identical\n- `- path` means path was missing on the source, so only in the destination\n- `+ path` means path was missing on the destination, so only in the source\n- `* path` means path was present in source and destination but different.\n- `! path` means there was an error reading or hashing the source or dest.\n\nThe `--dest-after` flag writes a list file using the same format flags\nas [`lsf`](/commands/rclone_lsf/#synopsis) (including [customizable options\nfor hash, modtime, etc.](/commands/rclone_lsf/#synopsis))\nConceptually it is similar to rsync's `--itemize-changes`, but not identical\n-- it should output an accurate list of what will be on the destination\nafter the command is finished.\n\nWhen the `--no-traverse` flag is set, all logs involving files that exist only\non the destination will be incomplete or completely missing.\n\nNote that these logger flags have a few limitations, and certain scenarios\nare not currently supported:\n\n- `--max-duration` / `CutoffModeHard`\n- `--compare-dest` / `--copy-dest`\n- server-side moves of an entire dir at once\n- High-level retries, because there would be duplicates (use `--retries 1` to disable)\n- Possibly some unusual error scenarios\n\nNote also that each file is logged during execution, as opposed to after, so it\nis most useful as a predictor of what SHOULD happen to each file\n(which may or may not match what actually DID).\n\nUsage:\n  rclone move source:path dest:path [flags]\n\nFlags:\n      --absolute                Put a leading / in front of path names\n      --combined string         Make a combined report of changes to this file\n      --create-empty-src-dirs   Create empty source dirs on destination after move\n      --csv                     Output in CSV format\n      --delete-empty-src-dirs   Delete empty source dirs after move\n      --dest-after string       Report all files that exist on the dest post-sync\n      --differ string           Report all non-matching files to this file\n  -d, --dir-slash               Append a slash to directory names (default true)\n      --dirs-only               Only list directories\n      --error string            Report all files with errors (hashing or reading) to this file\n      --files-only              Only list files (default true)\n  -F, --format string           Output format - see lsf help for details (default \"p\")\n      --hash h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")\n  -h, --help                    help for move\n      --match string            Report all matching files to this file\n      --missing-on-dst string   Report all files missing from the destination to this file\n      --missing-on-src string   Report all files missing from the source to this file\n  -s, --separator string        Separator for the items in the format (default \";\")\n  -t, --timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)\n\nFlags for anything which can copy a file (flag group Copy):\n      --check-first                                 Do all the checks before starting transfers\n  -c, --checksum                                    Check for changes with size & checksum (if available, or fallback to size only)\n      --compare-dest stringArray                    Include additional server-side paths during comparison\n      --copy-dest stringArray                       Implies --compare-dest but also copies files from paths into destination\n      --cutoff-mode HARD|SOFT|CAUTIOUS              Mode to stop transfers when reaching the max transfer limit HARD|SOFT|CAUTIOUS (default HARD)\n      --ignore-case-sync                            Ignore case when synchronizing\n      --ignore-checksum                             Skip post copy check of checksums\n      --ignore-existing                             Skip all files that exist on destination\n      --ignore-size                                 Ignore size when skipping use modtime or checksum\n  -I, --ignore-times                                Don't skip items that match size and time - transfer all unconditionally\n      --immutable                                   Do not modify files, fail if existing files have been modified\n      --inplace                                     Download directly to destination file instead of atomic download to temp/rename\n  -l, --links                                       Translate symlinks to/from regular files with a '.rclonelink' extension\n      --max-backlog int                             Maximum number of objects in sync or check backlog (default 10000)\n      --max-duration Duration                       Maximum duration rclone will transfer data for (default 0s)\n      --max-transfer SizeSuffix                     Maximum size of data to transfer (default off)\n  -M, --metadata                                    If set, preserve metadata when copying objects\n      --modify-window Duration                      Max time diff to be considered the same (default 1ns)\n      --multi-thread-chunk-size SizeSuffix          Chunk size for multi-thread downloads / uploads, if not set by filesystem (default 64Mi)\n      --multi-thread-cutoff SizeSuffix              Use multi-thread downloads for files above this size (default 256Mi)\n      --multi-thread-streams int                    Number of streams to use for multi-thread downloads (default 4)\n      --multi-thread-write-buffer-size SizeSuffix   In memory buffer size for writing when in multi-thread mode (default 128Ki)\n      --name-transform stringArray                  Transform paths during the copy process\n      --no-check-dest                               Don't check the destination, copy regardless\n      --no-traverse                                 Don't traverse destination file system on copy\n      --no-update-dir-modtime                       Don't update directory modification times\n      --no-update-modtime                           Don't update destination modtime if files identical\n      --order-by string                             Instructions on how to order the transfers, e.g. 'size,descending'\n      --partial-suffix string                       Add partial-suffix to temporary file name when --inplace is not used (default \".partial\")\n      --refresh-times                               Refresh the modtime of remote files\n      --server-side-across-configs                  Allow server-side operations (e.g. copy) to work across different configs\n      --size-only                                   Skip based on size only, not modtime or checksum\n      --streaming-upload-cutoff SizeSuffix          Cutoff for switching to chunked upload if file size is unknown, upload starts after reaching cutoff or when file ends (default 100Ki)\n  -u, --update                                      Skip files that are newer on the destination\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--absolute",
          "description": "Put a leading / in front of path names"
        },
        {
          "flag": "--combined",
          "description": "string         Make a combined report of changes to this file"
        },
        {
          "flag": "--create-empty-src-dirs",
          "description": "Create empty source dirs on destination after move"
        },
        {
          "flag": "--csv",
          "description": "Output in CSV format"
        },
        {
          "flag": "--delete-empty-src-dirs",
          "description": "Delete empty source dirs after move"
        },
        {
          "flag": "--dest-after",
          "description": "string       Report all files that exist on the dest post-sync"
        },
        {
          "flag": "--differ",
          "description": "string           Report all non-matching files to this file"
        },
        {
          "flag": "-d,",
          "description": "--dir-slash               Append a slash to directory names (default true)"
        },
        {
          "flag": "--dirs-only",
          "description": "Only list directories"
        },
        {
          "flag": "--error",
          "description": "string            Report all files with errors (hashing or reading) to this file"
        },
        {
          "flag": "--files-only",
          "description": "Only list files (default true)"
        },
        {
          "flag": "-F,",
          "description": "--format string           Output format - see lsf help for details (default \"p\")"
        },
        {
          "flag": "--hash",
          "description": "h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for move"
        },
        {
          "flag": "--match",
          "description": "string            Report all matching files to this file"
        },
        {
          "flag": "--missing-on-dst",
          "description": "string   Report all files missing from the destination to this file"
        },
        {
          "flag": "--missing-on-src",
          "description": "string   Report all files missing from the source to this file"
        },
        {
          "flag": "-s,",
          "description": "--separator string        Separator for the items in the format (default \";\")"
        },
        {
          "flag": "-t,",
          "description": "--timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)"
        }
      ]
    },
    "moveto": {
      "description": "If source:path is a file or directory then it moves it to a file or",
      "help_text": "If source:path is a file or directory then it moves it to a file or\ndirectory named dest:path.\n\nThis can be used to rename files or upload single files to other than\ntheir existing name.  If the source is a directory then it acts exactly\nlike the [move](/commands/rclone_move/) command.\n\nSo\n\n```sh\nrclone moveto src dst\n```\n\nwhere src and dst are rclone paths, either remote:path or\n/path/to/local or C:\\windows\\path\\if\\on\\windows.\n\nThis will:\n\n```text\nif src is file\n    move it to dst, overwriting an existing file if it exists\nif src is directory\n    move it to dst, overwriting existing files if they exist\n    see move command for full details\n```\n\nThis doesn't transfer files that are identical on src and dst, testing\nby size and modification time or MD5SUM.  src will be deleted on\nsuccessful transfer.\n\n**Important**: Since this can cause data loss, test first with the\n`--dry-run` or the `--interactive`/`-i` flag.\n\n**Note**: Use the `-P`/`--progress` flag to view real-time transfer statistics.\n\n### Logger Flags\n\nThe `--differ`, `--missing-on-dst`, `--missing-on-src`, `--match` and `--error`\nflags write paths, one per line, to the file name (or stdout if it is `-`)\nsupplied. What they write is described in the help below. For example\n`--differ` will write all paths which are present on both the source and\ndestination but different.\n\nThe `--combined` flag will write a file (or stdout) which contains all\nfile paths with a symbol and then a space and then the path to tell\nyou what happened to it. These are reminiscent of diff files.\n\n- `= path` means path was found in source and destination and was identical\n- `- path` means path was missing on the source, so only in the destination\n- `+ path` means path was missing on the destination, so only in the source\n- `* path` means path was present in source and destination but different.\n- `! path` means there was an error reading or hashing the source or dest.\n\nThe `--dest-after` flag writes a list file using the same format flags\nas [`lsf`](/commands/rclone_lsf/#synopsis) (including [customizable options\nfor hash, modtime, etc.](/commands/rclone_lsf/#synopsis))\nConceptually it is similar to rsync's `--itemize-changes`, but not identical\n-- it should output an accurate list of what will be on the destination\nafter the command is finished.\n\nWhen the `--no-traverse` flag is set, all logs involving files that exist only\non the destination will be incomplete or completely missing.\n\nNote that these logger flags have a few limitations, and certain scenarios\nare not currently supported:\n\n- `--max-duration` / `CutoffModeHard`\n- `--compare-dest` / `--copy-dest`\n- server-side moves of an entire dir at once\n- High-level retries, because there would be duplicates (use `--retries 1` to disable)\n- Possibly some unusual error scenarios\n\nNote also that each file is logged during execution, as opposed to after, so it\nis most useful as a predictor of what SHOULD happen to each file\n(which may or may not match what actually DID).\n\nUsage:\n  rclone moveto source:path dest:path [flags]\n\nFlags:\n      --absolute                Put a leading / in front of path names\n      --combined string         Make a combined report of changes to this file\n      --csv                     Output in CSV format\n      --dest-after string       Report all files that exist on the dest post-sync\n      --differ string           Report all non-matching files to this file\n  -d, --dir-slash               Append a slash to directory names (default true)\n      --dirs-only               Only list directories\n      --error string            Report all files with errors (hashing or reading) to this file\n      --files-only              Only list files (default true)\n  -F, --format string           Output format - see lsf help for details (default \"p\")\n      --hash h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")\n  -h, --help                    help for moveto\n      --match string            Report all matching files to this file\n      --missing-on-dst string   Report all files missing from the destination to this file\n      --missing-on-src string   Report all files missing from the source to this file\n  -s, --separator string        Separator for the items in the format (default \";\")\n  -t, --timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)\n\nFlags for anything which can copy a file (flag group Copy):\n      --check-first                                 Do all the checks before starting transfers\n  -c, --checksum                                    Check for changes with size & checksum (if available, or fallback to size only)\n      --compare-dest stringArray                    Include additional server-side paths during comparison\n      --copy-dest stringArray                       Implies --compare-dest but also copies files from paths into destination\n      --cutoff-mode HARD|SOFT|CAUTIOUS              Mode to stop transfers when reaching the max transfer limit HARD|SOFT|CAUTIOUS (default HARD)\n      --ignore-case-sync                            Ignore case when synchronizing\n      --ignore-checksum                             Skip post copy check of checksums\n      --ignore-existing                             Skip all files that exist on destination\n      --ignore-size                                 Ignore size when skipping use modtime or checksum\n  -I, --ignore-times                                Don't skip items that match size and time - transfer all unconditionally\n      --immutable                                   Do not modify files, fail if existing files have been modified\n      --inplace                                     Download directly to destination file instead of atomic download to temp/rename\n  -l, --links                                       Translate symlinks to/from regular files with a '.rclonelink' extension\n      --max-backlog int                             Maximum number of objects in sync or check backlog (default 10000)\n      --max-duration Duration                       Maximum duration rclone will transfer data for (default 0s)\n      --max-transfer SizeSuffix                     Maximum size of data to transfer (default off)\n  -M, --metadata                                    If set, preserve metadata when copying objects\n      --modify-window Duration                      Max time diff to be considered the same (default 1ns)\n      --multi-thread-chunk-size SizeSuffix          Chunk size for multi-thread downloads / uploads, if not set by filesystem (default 64Mi)\n      --multi-thread-cutoff SizeSuffix              Use multi-thread downloads for files above this size (default 256Mi)\n      --multi-thread-streams int                    Number of streams to use for multi-thread downloads (default 4)\n      --multi-thread-write-buffer-size SizeSuffix   In memory buffer size for writing when in multi-thread mode (default 128Ki)\n      --name-transform stringArray                  Transform paths during the copy process\n      --no-check-dest                               Don't check the destination, copy regardless\n      --no-traverse                                 Don't traverse destination file system on copy\n      --no-update-dir-modtime                       Don't update directory modification times\n      --no-update-modtime                           Don't update destination modtime if files identical\n      --order-by string                             Instructions on how to order the transfers, e.g. 'size,descending'\n      --partial-suffix string                       Add partial-suffix to temporary file name when --inplace is not used (default \".partial\")\n      --refresh-times                               Refresh the modtime of remote files\n      --server-side-across-configs                  Allow server-side operations (e.g. copy) to work across different configs\n      --size-only                                   Skip based on size only, not modtime or checksum\n      --streaming-upload-cutoff SizeSuffix          Cutoff for switching to chunked upload if file size is unknown, upload starts after reaching cutoff or when file ends (default 100Ki)\n  -u, --update                                      Skip files that are newer on the destination\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--absolute",
          "description": "Put a leading / in front of path names"
        },
        {
          "flag": "--combined",
          "description": "string         Make a combined report of changes to this file"
        },
        {
          "flag": "--csv",
          "description": "Output in CSV format"
        },
        {
          "flag": "--dest-after",
          "description": "string       Report all files that exist on the dest post-sync"
        },
        {
          "flag": "--differ",
          "description": "string           Report all non-matching files to this file"
        },
        {
          "flag": "-d,",
          "description": "--dir-slash               Append a slash to directory names (default true)"
        },
        {
          "flag": "--dirs-only",
          "description": "Only list directories"
        },
        {
          "flag": "--error",
          "description": "string            Report all files with errors (hashing or reading) to this file"
        },
        {
          "flag": "--files-only",
          "description": "Only list files (default true)"
        },
        {
          "flag": "-F,",
          "description": "--format string           Output format - see lsf help for details (default \"p\")"
        },
        {
          "flag": "--hash",
          "description": "h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for moveto"
        },
        {
          "flag": "--match",
          "description": "string            Report all matching files to this file"
        },
        {
          "flag": "--missing-on-dst",
          "description": "string   Report all files missing from the destination to this file"
        },
        {
          "flag": "--missing-on-src",
          "description": "string   Report all files missing from the source to this file"
        },
        {
          "flag": "-s,",
          "description": "--separator string        Separator for the items in the format (default \";\")"
        },
        {
          "flag": "-t,",
          "description": "--timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)"
        }
      ]
    },
    "ncdu": {
      "description": "This displays a text based user interface allowing the navigation of a",
      "help_text": "This displays a text based user interface allowing the navigation of a\nremote. It is most useful for answering the question - \"What is using\nall my disk space?\".\n\n{{< asciinema 157793 >}}\n\nTo make the user interface it first scans the entire remote given and\nbuilds an in memory representation.  rclone ncdu can be used during\nthis scanning phase and you will see it building up the directory\nstructure as it goes along.\n\nYou can interact with the user interface using key presses,\npress '?' to toggle the help on and off. The supported keys are:\n\n```text\n \u2191,\u2193 or k,j to Move\n \u2192,l to enter\n \u2190,h to return\n g toggle graph\n c toggle counts\n a toggle average size in directory\n m toggle modified time\n u toggle human-readable format\n n,s,C,A,M sort by name,size,count,asize,mtime\n d delete file/directory\n v select file/directory\n V enter visual select mode\n D delete selected files/directories\n y copy current path to clipboard\n Y display current path\n ^L refresh screen (fix screen corruption)\n r recalculate file sizes\n ? to toggle help on and off\n ESC to close the menu box\n q/^c to quit\n```\n\nListed files/directories may be prefixed by a one-character flag,\nsome of them combined with a description in brackets at end of line.\nThese flags have the following meaning:\n\n```text\ne means this is an empty directory, i.e. contains no files (but\n  may contain empty subdirectories)\n~ means this is a directory where some of the files (possibly in\n  subdirectories) have unknown size, and therefore the directory\n  size may be underestimated (and average size inaccurate, as it\n  is average of the files with known sizes).\n. means an error occurred while reading a subdirectory, and\n  therefore the directory size may be underestimated (and average\n  size inaccurate)\n! means an error occurred while reading this directory\n```\n\nThis an homage to the [ncdu tool](https://dev.yorhel.nl/ncdu) but for\nrclone remotes.  It is missing lots of features at the moment\nbut is useful as it stands. Unlike ncdu it does not show excluded files.\n\nNote that it might take some time to delete big files/directories. The\nUI won't respond in the meantime since the deletion is done synchronously.\n\nFor a non-interactive listing of the remote, see the\n[tree](/commands/rclone_tree/) command. To just get the total size of\nthe remote you can also use the [size](/commands/rclone_size/) command.\n\nUsage:\n  rclone ncdu remote:path [flags]\n\nFlags:\n  -h, --help   help for ncdu\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for ncdu"
        }
      ]
    },
    "nfsmount": {
      "description": "Rclone nfsmount allows Linux, FreeBSD, macOS and Windows to",
      "help_text": "Rclone nfsmount allows Linux, FreeBSD, macOS and Windows to\nmount any of Rclone's cloud storage systems as a file system with FUSE.\n\nFirst set up your remote using `rclone config`. Check it works with `rclone ls` etc.\n\nOn Linux and macOS, you can run mount in either foreground or background (aka\ndaemon) mode. Mount runs in foreground mode by default. Use the `--daemon` flag\nto force background mode. On Windows you can run mount in foreground only,\nthe flag is ignored.\n\nIn background mode rclone acts as a generic Unix mount program: the main\nprogram starts, spawns background rclone process to setup and maintain the\nmount, waits until success or timeout and exits with appropriate code\n(killing the child process if it fails).\n\nOn Linux/macOS/FreeBSD start the mount like this, where `/path/to/local/mount`\nis an **empty** **existing** directory:\n\n```sh\nrclone nfsmount remote:path/to/files /path/to/local/mount\n```\n\nOn Windows you can start a mount in different ways. See [below](#mounting-modes-on-windows)\nfor details. If foreground mount is used interactively from a console window,\nrclone will serve the mount and occupy the console so another window should be\nused to work with the mount until rclone is interrupted e.g. by pressing Ctrl-C.\n\nThe following examples will mount to an automatically assigned drive,\nto specific drive letter `X:`, to path `C:\\path\\parent\\mount`\n(where parent directory or drive must exist, and mount must **not** exist,\nand is not supported when [mounting as a network drive](#mounting-modes-on-windows)),\nand the last example will mount as network share `\\\\cloud\\remote` and map it to an\nautomatically assigned drive:\n\n```sh\nrclone nfsmount remote:path/to/files *\nrclone nfsmount remote:path/to/files X:\nrclone nfsmount remote:path/to/files C:\\path\\parent\\mount\nrclone nfsmount remote:path/to/files \\\\cloud\\remote\n```\n\nWhen the program ends while in foreground mode, either via Ctrl+C or receiving\na SIGINT or SIGTERM signal, the mount should be automatically stopped.\n\nWhen running in background mode the user will have to stop the mount manually:\n\n```sh\n# Linux\nfusermount -u /path/to/local/mount\n#... or on some systems\nfusermount3 -u /path/to/local/mount\n# OS X or Linux when using nfsmount\numount /path/to/local/mount\n```\n\nThe umount operation can fail, for example when the mountpoint is busy.\nWhen that happens, it is the user's responsibility to stop the mount manually.\n\nThe size of the mounted file system will be set according to information retrieved\nfrom the remote, the same as returned by the [rclone about](https://rclone.org/commands/rclone_about/)\ncommand. Remotes with unlimited storage may report the used size only,\nthen an additional 1 PiB of free space is assumed. If the remote does not\n[support](https://rclone.org/overview/#optional-features) the about feature\nat all, then 1 PiB is set as both the total and the free size.\n\n### Installing on Windows\n\nTo run rclone nfsmount on Windows, you will need to\ndownload and install [WinFsp](http://www.secfs.net/winfsp/).\n\n[WinFsp](https://github.com/winfsp/winfsp) is an open-source\nWindows File System Proxy which makes it easy to write user space file\nsystems for Windows.  It provides a FUSE emulation layer which rclone\nuses combination with [cgofuse](https://github.com/winfsp/cgofuse).\nBoth of these packages are by Bill Zissimopoulos who was very helpful\nduring the implementation of rclone nfsmount for Windows.\n\n#### Mounting modes on windows\n\nUnlike other operating systems, Microsoft Windows provides a different filesystem\ntype for network and fixed drives. It optimises access on the assumption fixed\ndisk drives are fast and reliable, while network drives have relatively high latency\nand less reliability. Some settings can also be differentiated between the two types,\nfor example that Windows Explorer should just display icons and not create preview\nthumbnails for image and video files on network drives.\n\nIn most cases, rclone will mount the remote as a normal, fixed disk drive by default.\nHowever, you can also choose to mount it as a remote network drive, often described\nas a network share. If you mount an rclone remote using the default, fixed drive\nmode and experience unexpected program errors, freezes or other issues, consider\nmounting as a network drive instead.\n\nWhen mounting as a fixed disk drive you can either mount to an unused drive letter,\nor to a path representing a **nonexistent** subdirectory of an **existing** parent\ndirectory or drive. Using the special value `*` will tell rclone to\nautomatically assign the next available drive letter, starting with Z: and moving\nbackward. Examples:\n\n```sh\nrclone nfsmount remote:path/to/files *\nrclone nfsmount remote:path/to/files X:\nrclone nfsmount remote:path/to/files C:\\path\\parent\\mount\nrclone nfsmount remote:path/to/files X:\n```\n\nOption `--volname` can be used to set a custom volume name for the mounted\nfile system. The default is to use the remote name and path.\n\nTo mount as network drive, you can add option `--network-mode`\nto your nfsmount command. Mounting to a directory path is not supported in\nthis mode, it is a limitation Windows imposes on junctions, so the remote must always\nbe mounted to a drive letter.\n\n```sh\nrclone nfsmount remote:path/to/files X: --network-mode\n```\n\nA volume name specified with `--volname` will be used to create the network share\npath. A complete UNC path, such as `\\\\cloud\\remote`, optionally with path\n`\\\\cloud\\remote\\madeup\\path`, will be used as is. Any other\nstring will be used as the share part, after a default prefix `\\\\server\\`.\nIf no volume name is specified then `\\\\server\\share` will be used.\nYou must make sure the volume name is unique when you are mounting more than one\ndrive, or else the mount command will fail. The share name will treated as the\nvolume label for the mapped drive, shown in Windows Explorer etc, while the complete\n`\\\\server\\share` will be reported as the remote UNC path by\n`net use` etc, just like a normal network drive mapping.\n\nIf you specify a full network share UNC path with `--volname`, this will implicitly\nset the `--network-mode` option, so the following two examples have same result:\n\n```sh\nrclone nfsmount remote:path/to/files X: --network-mode\nrclone nfsmount remote:path/to/files X: --volname \\\\server\\share\n```\n\nYou may also specify the network share UNC path as the mountpoint itself. Then rclone\nwill automatically assign a drive letter, same as with `*` and use that as\nmountpoint, and instead use the UNC path specified as the volume name, as if it were\nspecified with the `--volname` option. This will also implicitly set\nthe `--network-mode` option. This means the following two examples have same result:\n\n```sh\nrclone nfsmount remote:path/to/files \\\\cloud\\remote\nrclone nfsmount remote:path/to/files * --volname \\\\cloud\\remote\n```\n\nThere is yet another way to enable network mode, and to set the share path,\nand that is to pass the \"native\" libfuse/WinFsp option directly:\n`--fuse-flag --VolumePrefix=\\server\\share`. Note that the path\nmust be with just a single backslash prefix in this case.\n\n*Note:* In previous versions of rclone this was the only supported method.\n\n[Read more about drive mapping](https://en.wikipedia.org/wiki/Drive_mapping)\n\nSee also [Limitations](#limitations) section below.\n\n#### Windows filesystem permissions\n\nThe FUSE emulation layer on Windows must convert between the POSIX-based\npermission model used in FUSE, and the permission model used in Windows,\nbased on access-control lists (ACL).\n\nThe mounted filesystem will normally get three entries in its access-control list\n(ACL), representing permissions for the POSIX permission scopes: Owner, group and\nothers. By default, the owner and group will be taken from the current user, and\nthe built-in group \"Everyone\" will be used to represent others. The user/group can\nbe customized with FUSE options \"UserName\" and \"GroupName\",\ne.g. `-o UserName=user123 -o GroupName=\"Authenticated Users\"`.\nThe permissions on each entry will be set according to [options](#options)\n`--dir-perms` and `--file-perms`, which takes a value in traditional Unix\n[numeric notation](https://en.wikipedia.org/wiki/File-system_permissions#Numeric_notation).\n\nThe default permissions corresponds to `--file-perms 0666 --dir-perms 0777`,\ni.e. read and write permissions to everyone. This means you will not be able\nto start any programs from the mount. To be able to do that you must add\nexecute permissions, e.g. `--file-perms 0777 --dir-perms 0777` to add it\nto everyone. If the program needs to write files, chances are you will\nhave to enable [VFS File Caching](#vfs-file-caching) as well (see also\n[limitations](#limitations)). Note that the default write permission have\nsome restrictions for accounts other than the owner, specifically it lacks\nthe \"write extended attributes\", as explained next.\n\nThe mapping of permissions is not always trivial, and the result you see in\nWindows Explorer may not be exactly like you expected. For example, when setting\na value that includes write access for the group or others scope, this will be\nmapped to individual permissions \"write attributes\", \"write data\" and\n\"append data\", but not \"write extended attributes\". Windows will then show this\nas basic permission \"Special\" instead of \"Write\", because \"Write\" also covers\nthe \"write extended attributes\" permission. When setting digit 0 for group or\nothers, to indicate no permissions, they will still get individual permissions\n\"read attributes\", \"read extended attributes\" and \"read permissions\". This is\ndone for compatibility reasons, e.g. to allow users without additional\npermissions to be able to read basic metadata about files like in Unix.\n\nWinFsp 2021 (version 1.9) introduced a new FUSE option \"FileSecurity\",\nthat allows the complete specification of file security descriptors using\n[SDDL](https://docs.microsoft.com/en-us/windows/win32/secauthz/security-descriptor-string-format).\nWith this you get detailed control of the resulting permissions, compared\nto use of the POSIX permissions described above, and no additional permissions\nwill be added automatically for compatibility with Unix. Some example use\ncases will following.\n\nIf you set POSIX permissions for only allowing access to the owner,\nusing `--file-perms 0600 --dir-perms 0700`, the user group and the built-in\n\"Everyone\" group will still be given some special permissions, as described\nabove. Some programs may then (incorrectly) interpret this as the file being\naccessible by everyone, for example an SSH client may warn about \"unprotected\nprivate key file\". You can work around this by specifying\n`-o FileSecurity=\"D:P(A;;FA;;;OW)\"`, which sets file all access (FA) to the\nowner (OW), and nothing else.\n\nWhen setting write permissions then, except for the owner, this does not\ninclude the \"write extended attributes\" permission, as mentioned above.\nThis may prevent applications from writing to files, giving permission denied\nerror instead. To set working write permissions for the built-in \"Everyone\"\ngroup, similar to what it gets by default but with the addition of the\n\"write extended attributes\", you can specify\n`-o FileSecurity=\"D:P(A;;FRFW;;;WD)\"`, which sets file read (FR) and file\nwrite (FW) to everyone (WD). If file execute (FX) is also needed, then change\nto `-o FileSecurity=\"D:P(A;;FRFWFX;;;WD)\"`, or set file all access (FA) to\nget full access permissions, including delete, with\n`-o FileSecurity=\"D:P(A;;FA;;;WD)\"`.\n\n#### Windows caveats\n\nDrives created as Administrator are not visible to other accounts,\nnot even an account that was elevated to Administrator with the\nUser Account Control (UAC) feature. A result of this is that if you mount\nto a drive letter from a Command Prompt run as Administrator, and then try\nto access the same drive from Windows Explorer (which does not run as\nAdministrator), you will not be able to see the mounted drive.\n\nIf you don't need to access the drive from applications running with\nadministrative privileges, the easiest way around this is to always\ncreate the mount from a non-elevated command prompt.\n\nTo make mapped drives available to the user account that created them\nregardless if elevated or not, there is a special Windows setting called\n[linked connections](https://docs.microsoft.com/en-us/troubleshoot/windows-client/networking/mapped-drives-not-available-from-elevated-command#detail-to-configure-the-enablelinkedconnections-registry-entry)\nthat can be enabled.\n\nIt is also possible to make a drive mount available to everyone on the system,\nby running the process creating it as the built-in SYSTEM account.\nThere are several ways to do this: One is to use the command-line\nutility [PsExec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec),\nfrom Microsoft's Sysinternals suite, which has option `-s` to start\nprocesses as the SYSTEM account. Another alternative is to run the mount\ncommand from a Windows Scheduled Task, or a Windows Service, configured\nto run as the SYSTEM account. A third alternative is to use the\n[WinFsp.Launcher infrastructure](https://github.com/winfsp/winfsp/wiki/WinFsp-Service-Architecture)).\nRead more in the [install documentation](https://rclone.org/install/).\nNote that when running rclone as another user, it will not use\nthe configuration file from your profile unless you tell it to\nwith the [`--config`](https://rclone.org/docs/#config-string) option.\nNote also that it is now the SYSTEM account that will have the owner\npermissions, and other accounts will have permissions according to the\ngroup or others scopes. As mentioned above, these will then not get the\n\"write extended attributes\" permission, and this may prevent writing to\nfiles. You can work around this with the FileSecurity option, see\nexample above.\n\nNote that mapping to a directory path, instead of a drive letter,\ndoes not suffer from the same limitations.\n\n### Mounting on macOS\n\nMounting on macOS can be done either via [built-in NFS server](/commands/rclone_serve_nfs/),\n[macFUSE](https://osxfuse.github.io/) (also known as osxfuse) or\n[FUSE-T](https://www.fuse-t.org/).macFUSE is a traditional FUSE driver utilizing\na macOS kernel extension (kext). FUSE-T is an alternative FUSE system which\n\"mounts\" via an NFSv4 local server.\n\n#### Unicode Normalization\n\nIt is highly recommended to keep the default of `--no-unicode-normalization=false`\nfor all `mount` and `serve` commands on macOS. For details, see [vfs-case-sensitivity](https://rclone.org/commands/rclone_mount/#vfs-case-sensitivity).\n\n#### NFS mount\n\nThis method spins up an NFS server using [serve nfs](/commands/rclone_serve_nfs/)\ncommand and mounts it to the specified mountpoint. If you run this in background\nmode using |--daemon|, you will need to send SIGTERM signal to the rclone process\nusing |kill| command to stop the mount.\n\nNote that `--nfs-cache-handle-limit` controls the maximum number of cached file\nhandles stored by the `nfsmount` caching handler. This should not be set too low\nor you may experience errors when trying to access files. The default is 1000000,\nbut consider lowering this limit if the server's system resource usage causes problems.\n\n#### macFUSE Notes\n\nIf installing macFUSE using [dmg packages](https://github.com/osxfuse/osxfuse/releases)\nfrom the website, rclone will locate the macFUSE libraries without any further intervention.\nIf however, macFUSE is installed using the [macports](https://www.macports.org/)\npackage manager, the following addition steps are required.\n\n```sh\nsudo mkdir /usr/local/lib\ncd /usr/local/lib\nsudo ln -s /opt/local/lib/libfuse.2.dylib\n```\n\n#### FUSE-T Limitations, Caveats, and Notes\n\nThere are some limitations, caveats, and notes about how it works. These are\ncurrent as  of FUSE-T version 1.0.14.\n\n##### ModTime update on read\n\nAs per the [FUSE-T wiki](https://github.com/macos-fuse-t/fuse-t/wiki#caveats):\n\n> File access and modification times cannot be set separately as it seems to be an\n> issue with the NFS client which always modifies both. Can be reproduced with\n> 'touch -m' and 'touch -a' commands\n\nThis means that viewing files with various tools, notably macOS Finder, will cause\nrlcone to update the modification time of the file. This may make rclone upload a\nfull new copy of the file.\n\n##### Read Only mounts\n\nWhen mounting with `--read-only`, attempts to write to files will fail *silently*\nas opposed to with a clear warning as in macFUSE.\n\n### Limitations\n\nWithout the use of `--vfs-cache-mode` this can only write files\nsequentially, it can only seek when reading.  This means that many\napplications won't work with their files on an rclone mount without\n`--vfs-cache-mode writes` or `--vfs-cache-mode full`.\nSee the [VFS File Caching](#vfs-file-caching) section for more info.\nWhen using NFS mount on macOS, if you don't specify |--vfs-cache-mode|\nthe mount point will be read-only.\n\nBucket-based remotes - Azure Blob, Swift, S3, Google Cloud Storage and B2 -\ncan't store empty directories. Of these, only Azure Blob, Google Cloud Storage\nand S3 can preserve them when you add `--xxx-directory_markers`; otherwise,\nempty directories will vanish once they drop out of the directory cache.\n\nWhen `rclone mount` is invoked on Unix with `--daemon` flag, the main rclone\nprogram will wait for the background mount to become ready or until the timeout\nspecified by the `--daemon-wait` flag. On Linux it can check mount status using\nProcFS so the flag in fact sets **maximum** time to wait, while the real wait\ncan be less. On macOS / BSD the time to wait is constant and the check is\nperformed only at the end. We advise you to set wait time on macOS reasonably.\n\nOnly supported on Linux, FreeBSD, OS X and Windows at the moment.\n\n### rclone nfsmount vs rclone sync/copy\n\nFile systems expect things to be 100% reliable, whereas cloud storage\nsystems are a long way from 100% reliable. The rclone sync/copy\ncommands cope with this with lots of retries.  However rclone nfsmount\ncan't use retries in the same way without making local copies of the\nuploads. Look at the [VFS File Caching](#vfs-file-caching)\nfor solutions to make nfsmount more reliable.\n\n### Attribute caching\n\nYou can use the flag `--attr-timeout` to set the time the kernel caches\nthe attributes (size, modification time, etc.) for directory entries.\n\nThe default is `1s` which caches files just long enough to avoid\ntoo many callbacks to rclone from the kernel.\n\nIn theory 0s should be the correct value for filesystems which can\nchange outside the control of the kernel. However this causes quite a\nfew problems such as\n[rclone using too much memory](https://github.com/rclone/rclone/issues/2157),\n[rclone not serving files to samba](https://forum.rclone.org/t/rclone-1-39-vs-1-40-mount-issue/5112)\nand [excessive time listing directories](https://github.com/rclone/rclone/issues/2095#issuecomment-371141147).\n\nThe kernel can cache the info about a file for the time given by\n`--attr-timeout`. You may see corruption if the remote file changes\nlength during this window.  It will show up as either a truncated file\nor a file with garbage on the end.  With `--attr-timeout 1s` this is\nvery unlikely but not impossible.  The higher you set `--attr-timeout`\nthe more likely it is.  The default setting of \"1s\" is the lowest\nsetting which mitigates the problems above.\n\nIf you set it higher (`10s` or `1m` say) then the kernel will call\nback to rclone less often making it more efficient, however there is\nmore chance of the corruption issue above.\n\nIf files don't change on the remote outside of the control of rclone\nthen there is no chance of corruption.\n\nThis is the same as setting the attr_timeout option in mount.fuse.\n\n### Filters\n\nNote that all the rclone filters can be used to select a subset of the\nfiles to be visible in the mount.\n\n### systemd\n\nWhen running rclone nfsmount as a systemd service, it is possible\nto use Type=notify. In this case the service will enter the started state\nafter the mountpoint has been successfully set up.\nUnits having the rclone nfsmount service specified as a requirement\nwill see all files and folders immediately in this mode.\n\nNote that systemd runs mount units without any environment variables including\n`PATH` or `HOME`. This means that tilde (`~`) expansion will not work\nand you should provide `--config` and `--cache-dir` explicitly as absolute\npaths via rclone arguments.\nSince mounting requires the `fusermount` or `fusermount3` program,\nrclone will use the fallback PATH of `/bin:/usr/bin` in this scenario.\nPlease ensure that `fusermount`/`fusermount3` is present on this PATH.\n\n### Rclone as Unix mount helper\n\nThe core Unix program `/bin/mount` normally takes the `-t FSTYPE` argument\nthen runs the `/sbin/mount.FSTYPE` helper program passing it mount options\nas `-o key=val,...` or `--opt=...`. Automount (classic or systemd) behaves\nin a similar way.\n\nrclone by default expects GNU-style flags `--key val`. To run it as a mount\nhelper you should symlink rclone binary to `/sbin/mount.rclone` and optionally\n`/usr/bin/rclonefs`, e.g. `ln -s /usr/bin/rclone /sbin/mount.rclone`.\nrclone will detect it and translate command-line arguments appropriately.\n\nNow you can run classic mounts like this:\n\n```sh\nmount sftp1:subdir /mnt/data -t rclone -o vfs_cache_mode=writes,sftp_key_file=/path/to/pem\n```\n\nor create systemd mount units:\n\n```ini\n# /etc/systemd/system/mnt-data.mount\n[Unit]\nDescription=Mount for /mnt/data\n[Mount]\nType=rclone\nWhat=sftp1:subdir\nWhere=/mnt/data\nOptions=rw,_netdev,allow_other,args2env,vfs-cache-mode=writes,config=/etc/rclone.conf,cache-dir=/var/rclone\n```\n\noptionally accompanied by systemd automount unit\n\n```ini\n# /etc/systemd/system/mnt-data.automount\n[Unit]\nDescription=AutoMount for /mnt/data\n[Automount]\nWhere=/mnt/data\nTimeoutIdleSec=600\n[Install]\nWantedBy=multi-user.target\n```\n\nor add in `/etc/fstab` a line like\n\n```sh\nsftp1:subdir /mnt/data rclone rw,noauto,nofail,_netdev,x-systemd.automount,args2env,vfs_cache_mode=writes,config=/etc/rclone.conf,cache_dir=/var/cache/rclone 0 0\n```\n\nor use classic Automountd.\nRemember to provide explicit `config=...,cache-dir=...` as a workaround for\nmount units being run without `HOME`.\n\nRclone in the mount helper mode will split `-o` argument(s) by comma, replace `_`\nby `-` and prepend `--` to get the command-line flags. Options containing commas\nor spaces can be wrapped in single or double quotes. Any inner quotes inside outer\nquotes of the same type should be doubled.\n\nMount option syntax includes a few extra options treated specially:\n\n- `env.NAME=VALUE` will set an environment variable for the mount process.\n  This helps with Automountd and Systemd.mount which don't allow setting\n  custom environment for mount helpers.\n  Typically you will use `env.HTTPS_PROXY=proxy.host:3128` or `env.HOME=/root`\n- `command=cmount` can be used to run `cmount` or any other rclone command\n  rather than the default `mount`.\n- `args2env` will pass mount options to the mount helper running in background\n  via environment variables instead of command line arguments. This allows to\n  hide secrets from such commands as `ps` or `pgrep`.\n- `vv...` will be transformed into appropriate `--verbose=N`\n- standard mount options like `x-systemd.automount`, `_netdev`, `nosuid` and alike\n  are intended only for Automountd and ignored by rclone.\n\n### VFS - Virtual File System\n\nThis command uses the VFS layer. This adapts the cloud storage objects\nthat rclone uses into something which looks much more like a disk\nfiling system.\n\nCloud storage objects have lots of properties which aren't like disk\nfiles - you can't extend them or write to the middle of them, so the\nVFS layer has to deal with that. Because there is no one right way of\ndoing this there are various options explained below.\n\nThe VFS layer also implements a directory cache - this caches info\nabout files and directories (but not the data) in memory.\n\n### VFS Directory Cache\n\nUsing the `--dir-cache-time` flag, you can control how long a\ndirectory should be considered up to date and not refreshed from the\nbackend. Changes made through the VFS will appear immediately or\ninvalidate the cache.\n\n```text\n    --dir-cache-time duration   Time to cache directory entries for (default 5m0s)\n    --poll-interval duration    Time to wait between polling for changes. Must be smaller than dir-cache-time. Only on supported remotes. Set to 0 to disable (default 1m0s)\n```\n\nHowever, changes made directly on the cloud storage by the web\ninterface or a different copy of rclone will only be picked up once\nthe directory cache expires if the backend configured does not support\npolling for changes. If the backend supports polling, changes will be\npicked up within the polling interval.\n\nYou can send a `SIGHUP` signal to rclone for it to flush all\ndirectory caches, regardless of how old they are.  Assuming only one\nrclone instance is running, you can reset the cache like this:\n\n```sh\nkill -SIGHUP $(pidof rclone)\n```\n\nIf you configure rclone with a [remote control](/rc) then you can use\nrclone rc to flush the whole directory cache:\n\n```sh\nrclone rc vfs/forget\n```\n\nOr individual files or directories:\n\n```sh\nrclone rc vfs/forget file=path/to/file dir=path/to/dir\n```\n\n### VFS File Buffering\n\nThe `--buffer-size` flag determines the amount of memory,\nthat will be used to buffer data in advance.\n\nEach open file will try to keep the specified amount of data in memory\nat all times. The buffered data is bound to one open file and won't be\nshared.\n\nThis flag is a upper limit for the used memory per open file.  The\nbuffer will only use memory for data that is downloaded but not not\nyet read. If the buffer is empty, only a small amount of memory will\nbe used.\n\nThe maximum memory used by rclone for buffering can be up to\n`--buffer-size * open files`.\n\n### VFS File Caching\n\nThese flags control the VFS file caching options. File caching is\nnecessary to make the VFS layer appear compatible with a normal file\nsystem. It can be disabled at the cost of some compatibility.\n\nFor example you'll need to enable VFS caching if you want to read and\nwrite simultaneously to a file.  See below for more details.\n\nNote that the VFS cache is separate from the cache backend and you may\nfind that you need one or the other or both.\n\n```text\n    --cache-dir string                     Directory rclone will use for caching.\n    --vfs-cache-mode CacheMode             Cache mode off|minimal|writes|full (default off)\n    --vfs-cache-max-age duration           Max time since last access of objects in the cache (default 1h0m0s)\n    --vfs-cache-max-size SizeSuffix        Max total size of objects in the cache (default off)\n    --vfs-cache-min-free-space SizeSuffix  Target minimum free space on the disk containing the cache (default off)\n    --vfs-cache-poll-interval duration     Interval to poll the cache for stale objects (default 1m0s)\n    --vfs-write-back duration              Time to writeback files after last use when using cache (default 5s)\n```\n\nIf run with `-vv` rclone will print the location of the file cache.  The\nfiles are stored in the user cache file area which is OS dependent but\ncan be controlled with `--cache-dir` or setting the appropriate\nenvironment variable.\n\nThe cache has 4 different modes selected by `--vfs-cache-mode`.\nThe higher the cache mode the more compatible rclone becomes at the\ncost of using disk space.\n\nNote that files are written back to the remote only when they are\nclosed and if they haven't been accessed for `--vfs-write-back`\nseconds. If rclone is quit or dies with files that haven't been\nuploaded, these will be uploaded next time rclone is run with the same\nflags.\n\nIf using `--vfs-cache-max-size` or `--vfs-cache-min-free-space` note\nthat the cache may exceed these quotas for two reasons. Firstly\nbecause it is only checked every `--vfs-cache-poll-interval`. Secondly\nbecause open files cannot be evicted from the cache. When\n`--vfs-cache-max-size` or `--vfs-cache-min-free-space` is exceeded,\nrclone will attempt to evict the least accessed files from the cache\nfirst. rclone will start with files that haven't been accessed for the\nlongest. This cache flushing strategy is efficient and more relevant\nfiles are likely to remain cached.\n\nThe `--vfs-cache-max-age` will evict files from the cache\nafter the set time since last access has passed. The default value of\n1 hour will start evicting files from cache that haven't been accessed\nfor 1 hour. When a cached file is accessed the 1 hour timer is reset to 0\nand will wait for 1 more hour before evicting. Specify the time with\nstandard notation, s, m, h, d, w .\n\nYou **should not** run two copies of rclone using the same VFS cache\nwith the same or overlapping remotes if using `--vfs-cache-mode > off`.\nThis can potentially cause data corruption if you do. You can work\naround this by giving each rclone its own cache hierarchy with\n`--cache-dir`. You don't need to worry about this if the remotes in\nuse don't overlap.\n\n#### --vfs-cache-mode off\n\nIn this mode (the default) the cache will read directly from the remote and write\ndirectly to the remote without caching anything on disk.\n\nThis will mean some operations are not possible\n\n- Files can't be opened for both read AND write\n- Files opened for write can't be seeked\n- Existing files opened for write must have O_TRUNC set\n- Files open for read with O_TRUNC will be opened write only\n- Files open for write only will behave as if O_TRUNC was supplied\n- Open modes O_APPEND, O_TRUNC are ignored\n- If an upload fails it can't be retried\n\n#### --vfs-cache-mode minimal\n\nThis is very similar to \"off\" except that files opened for read AND\nwrite will be buffered to disk.  This means that files opened for\nwrite will be a lot more compatible, but uses the minimal disk space.\n\nThese operations are not possible\n\n- Files opened for write only can't be seeked\n- Existing files opened for write must have O_TRUNC set\n- Files opened for write only will ignore O_APPEND, O_TRUNC\n- If an upload fails it can't be retried\n\n#### --vfs-cache-mode writes\n\nIn this mode files opened for read only are still read directly from\nthe remote, write only and read/write files are buffered to disk\nfirst.\n\nThis mode should support all normal file system operations.\n\nIf an upload fails it will be retried at exponentially increasing\nintervals up to 1 minute.\n\n#### --vfs-cache-mode full\n\nIn this mode all reads and writes are buffered to and from disk. When\ndata is read from the remote this is buffered to disk as well.\n\nIn this mode the files in the cache will be sparse files and rclone\nwill keep track of which bits of the files it has downloaded.\n\nSo if an application only reads the starts of each file, then rclone\nwill only buffer the start of the file. These files will appear to be\ntheir full size in the cache, but they will be sparse files with only\nthe data that has been downloaded present in them.\n\nThis mode should support all normal file system operations and is\notherwise identical to `--vfs-cache-mode` writes.\n\nWhen reading a file rclone will read `--buffer-size` plus\n`--vfs-read-ahead` bytes ahead.  The `--buffer-size` is buffered in memory\nwhereas the `--vfs-read-ahead` is buffered on disk.\n\nWhen using this mode it is recommended that `--buffer-size` is not set\ntoo large and `--vfs-read-ahead` is set large if required.\n\n**IMPORTANT** not all file systems support sparse files. In particular\nFAT/exFAT do not. Rclone will perform very badly if the cache\ndirectory is on a filesystem which doesn't support sparse files and it\nwill log an ERROR message if one is detected.\n\n#### Fingerprinting\n\nVarious parts of the VFS use fingerprinting to see if a local file\ncopy has changed relative to a remote file. Fingerprints are made\nfrom:\n\n- size\n- modification time\n- hash\n\nwhere available on an object.\n\nOn some backends some of these attributes are slow to read (they take\nan extra API call per object, or extra work per object).\n\nFor example `hash` is slow with the `local` and `sftp` backends as\nthey have to read the entire file and hash it, and `modtime` is slow\nwith the `s3`, `swift`, `ftp` and `qinqstor` backends because they\nneed to do an extra API call to fetch it.\n\nIf you use the `--vfs-fast-fingerprint` flag then rclone will not\ninclude the slow operations in the fingerprint. This makes the\nfingerprinting less accurate but much faster and will improve the\nopening time of cached files.\n\nIf you are running a vfs cache over `local`, `s3` or `swift` backends\nthen using this flag is recommended.\n\nNote that if you change the value of this flag, the fingerprints of\nthe files in the cache may be invalidated and the files will need to\nbe downloaded again.\n\n### VFS Chunked Reading\n\nWhen rclone reads files from a remote it reads them in chunks. This\nmeans that rather than requesting the whole file rclone reads the\nchunk specified.  This can reduce the used download quota for some\nremotes by requesting only chunks from the remote that are actually\nread, at the cost of an increased number of requests.\n\nThese flags control the chunking:\n\n```text\n    --vfs-read-chunk-size SizeSuffix        Read the source objects in chunks (default 128M)\n    --vfs-read-chunk-size-limit SizeSuffix  Max chunk doubling size (default off)\n    --vfs-read-chunk-streams int            The number of parallel streams to read at once\n```\n\nThe chunking behaves differently depending on the `--vfs-read-chunk-streams` parameter.\n\n#### `--vfs-read-chunk-streams` == 0\n\nRclone will start reading a chunk of size `--vfs-read-chunk-size`,\nand then double the size for each read. When `--vfs-read-chunk-size-limit` is\nspecified, and greater than `--vfs-read-chunk-size`, the chunk size for each\nopen file will get doubled only until the specified value is reached. If the\nvalue is \"off\", which is the default, the limit is disabled and the chunk size\nwill grow indefinitely.\n\nWith `--vfs-read-chunk-size 100M` and `--vfs-read-chunk-size-limit 0`\nthe following parts will be downloaded: 0-100M, 100M-200M, 200M-300M, 300M-400M\nand so on. When `--vfs-read-chunk-size-limit 500M` is specified, the result would\nbe 0-100M, 100M-300M, 300M-700M, 700M-1200M, 1200M-1700M and so on.\n\nSetting `--vfs-read-chunk-size` to `0` or \"off\" disables chunked reading.\n\nThe chunks will not be buffered in memory.\n\n#### `--vfs-read-chunk-streams` > 0\n\nRclone reads `--vfs-read-chunk-streams` chunks of size\n`--vfs-read-chunk-size` concurrently. The size for each read will stay\nconstant.\n\nThis improves performance performance massively on high latency links\nor very high bandwidth links to high performance object stores.\n\nSome experimentation will be needed to find the optimum values of\n`--vfs-read-chunk-size` and `--vfs-read-chunk-streams` as these will\ndepend on the backend in use and the latency to the backend.\n\nFor high performance object stores (eg AWS S3) a reasonable place to\nstart might be `--vfs-read-chunk-streams 16` and\n`--vfs-read-chunk-size 4M`. In testing with AWS S3 the performance\nscaled roughly as the `--vfs-read-chunk-streams` setting.\n\nSimilar settings should work for high latency links, but depending on\nthe latency they may need more `--vfs-read-chunk-streams` in order to\nget the throughput.\n\n### VFS Performance\n\nThese flags may be used to enable/disable features of the VFS for\nperformance or other reasons. See also the [chunked reading](#vfs-chunked-reading)\nfeature.\n\nIn particular S3 and Swift benefit hugely from the `--no-modtime` flag\n(or use `--use-server-modtime` for a slightly different effect) as each\nread of the modification time takes a transaction.\n\n```text\n    --no-checksum     Don't compare checksums on up/download.\n    --no-modtime      Don't read/write the modification time (can speed things up).\n    --no-seek         Don't allow seeking in files.\n    --read-only       Only allow read-only access.\n```\n\nSometimes rclone is delivered reads or writes out of order. Rather\nthan seeking rclone will wait a short time for the in sequence read or\nwrite to come in. These flags only come into effect when not using an\non disk cache file.\n\n```text\n    --vfs-read-wait duration   Time to wait for in-sequence read before seeking (default 20ms)\n    --vfs-write-wait duration  Time to wait for in-sequence write before giving error (default 1s)\n```\n\nWhen using VFS write caching (`--vfs-cache-mode` with value writes or full),\nthe global flag `--transfers` can be set to adjust the number of parallel uploads\nof modified files from the cache (the related global flag `--checkers` has no\neffect on the VFS).\n\n```text\n    --transfers int  Number of file transfers to run in parallel (default 4)\n```\n\n### Symlinks\n\nBy default the VFS does not support symlinks. However this may be\nenabled with either of the following flags:\n\n```text\n    --links      Translate symlinks to/from regular files with a '.rclonelink' extension.\n    --vfs-links  Translate symlinks to/from regular files with a '.rclonelink' extension for the VFS\n```\n\nAs most cloud storage systems do not support symlinks directly, rclone\nstores the symlink as a normal file with a special extension. So a\nfile which appears as a symlink `link-to-file.txt` would be stored on\ncloud storage as `link-to-file.txt.rclonelink` and the contents would\nbe the path to the symlink destination.\n\nNote that `--links` enables symlink translation globally in rclone -\nthis includes any backend which supports the concept (for example the\nlocal backend). `--vfs-links` just enables it for the VFS layer.\n\nThis scheme is compatible with that used by the\n[local backend with the --local-links flag](/local/#symlinks-junction-points).\n\nThe `--vfs-links` flag has been designed for `rclone mount`, `rclone\nnfsmount` and `rclone serve nfs`.\n\nIt hasn't been tested with the other `rclone serve` commands yet.\n\nA limitation of the current implementation is that it expects the\ncaller to resolve sub-symlinks. For example given this directory tree\n\n```text\n.\n\u251c\u2500\u2500 dir\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 file.txt\n\u2514\u2500\u2500 linked-dir -> dir\n```\n\nThe VFS will correctly resolve `linked-dir` but not\n`linked-dir/file.txt`. This is not a problem for the tested commands\nbut may be for other commands.\n\n**Note** that there is an outstanding issue with symlink support\n[issue #8245](https://github.com/rclone/rclone/issues/8245) with duplicate\nfiles being created when symlinks are moved into directories where\nthere is a file of the same name (or vice versa).\n\n### VFS Case Sensitivity\n\nLinux file systems are case-sensitive: two files can differ only\nby case, and the exact case must be used when opening a file.\n\nFile systems in modern Windows are case-insensitive but case-preserving:\nalthough existing files can be opened using any case, the exact case used\nto create the file is preserved and available for programs to query.\nIt is not allowed for two files in the same directory to differ only by case.\n\nUsually file systems on macOS are case-insensitive. It is possible to make macOS\nfile systems case-sensitive but that is not the default.\n\nThe `--vfs-case-insensitive` VFS flag controls how rclone handles these\ntwo cases. If its value is \"false\", rclone passes file names to the remote\nas-is. If the flag is \"true\" (or appears without a value on the\ncommand line), rclone may perform a \"fixup\" as explained below.\n\nThe user may specify a file name to open/delete/rename/etc with a case\ndifferent than what is stored on the remote. If an argument refers\nto an existing file with exactly the same name, then the case of the existing\nfile on the disk will be used. However, if a file name with exactly the same\nname is not found but a name differing only by case exists, rclone will\ntransparently fixup the name. This fixup happens only when an existing file\nis requested. Case sensitivity of file names created anew by rclone is\ncontrolled by the underlying remote.\n\nNote that case sensitivity of the operating system running rclone (the target)\nmay differ from case sensitivity of a file system presented by rclone (the source).\nThe flag controls whether \"fixup\" is performed to satisfy the target.\n\nIf the flag is not provided on the command line, then its default value depends\non the operating system where rclone runs: \"true\" on Windows and macOS, \"false\"\notherwise. If the flag is provided without a value, then it is \"true\".\n\nThe `--no-unicode-normalization` flag controls whether a similar \"fixup\" is\nperformed for filenames that differ but are [canonically\nequivalent](https://en.wikipedia.org/wiki/Unicode_equivalence) with respect to\nunicode. Unicode normalization can be particularly helpful for users of macOS,\nwhich prefers form NFD instead of the NFC used by most other platforms. It is\ntherefore highly recommended to keep the default of `false` on macOS, to avoid\nencoding compatibility issues.\n\nIn the (probably unlikely) event that a directory has multiple duplicate\nfilenames after applying case and unicode normalization, the `--vfs-block-norm-dupes`\nflag allows hiding these duplicates. This comes with a performance tradeoff, as\nrclone will have to scan the entire directory for duplicates when listing a\ndirectory. For this reason, it is recommended to leave this disabled if not\nneeded. However, macOS users may wish to consider using it, as otherwise, if a\nremote directory contains both NFC and NFD versions of the same filename, an odd\nsituation will occur: both versions of the file will be visible in the mount,\nand both will appear to be editable, however, editing either version will\nactually result in only the NFD version getting edited under the hood. `--vfs-block-\nnorm-dupes` prevents this confusion by detecting this scenario, hiding the\nduplicates, and logging an error, similar to how this is handled in `rclone\nsync`.\n\n### VFS Disk Options\n\nThis flag allows you to manually set the statistics about the filing system.\nIt can be useful when those statistics cannot be read correctly automatically.\n\n```text\n    --vfs-disk-space-total-size    Manually set the total disk space size (example: 256G, default: -1)\n```\n\n### Alternate report of used bytes\n\nSome backends, most notably S3, do not report the amount of bytes used.\nIf you need this information to be available when running `df` on the\nfilesystem, then pass the flag `--vfs-used-is-size` to rclone.\nWith this flag set, instead of relying on the backend to report this\ninformation, rclone will scan the whole remote similar to `rclone size`\nand compute the total used space itself.\n\n**WARNING**: Contrary to `rclone size`, this flag ignores filters so that the\nresult is accurate. However, this is very inefficient and may cost lots of API\ncalls resulting in extra charges. Use it as a last resort and only with caching.\n\n### VFS Metadata\n\nIf you use the `--vfs-metadata-extension` flag you can get the VFS to\nexpose files which contain the [metadata](/docs/#metadata) as a JSON\nblob. These files will not appear in the directory listing, but can be\n`stat`-ed and opened and once they have been they **will** appear in\ndirectory listings until the directory cache expires.\n\nNote that some backends won't create metadata unless you pass in the\n`--metadata` flag.\n\nFor example, using `rclone mount` with `--metadata --vfs-metadata-extension .metadata`\nwe get\n\n```sh\n$ ls -l /mnt/\ntotal 1048577\n-rw-rw-r-- 1 user user 1073741824 Mar  3 16:03 1G\n\n$ cat /mnt/1G.metadata\n{\n        \"atime\": \"2025-03-04T17:34:22.317069787Z\",\n        \"btime\": \"2025-03-03T16:03:37.708253808Z\",\n        \"gid\": \"1000\",\n        \"mode\": \"100664\",\n        \"mtime\": \"2025-03-03T16:03:39.640238323Z\",\n        \"uid\": \"1000\"\n}\n\n$ ls -l /mnt/\ntotal 1048578\n-rw-rw-r-- 1 user user 1073741824 Mar  3 16:03 1G\n-rw-rw-r-- 1 user user        185 Mar  3 16:03 1G.metadata\n```\n\nIf the file has no metadata it will be returned as `{}` and if there\nis an error reading the metadata the error will be returned as\n`{\"error\":\"error string\"}`.\n\nUsage:\n  rclone nfsmount remote:path /path/to/mountpoint [flags]\n\nFlags:\n      --addr string                            IPaddress:Port or :Port to bind server to\n      --allow-non-empty                        Allow mounting over a non-empty directory (not supported on Windows)\n      --allow-other                            Allow access to other users (not supported on Windows)\n      --allow-root                             Allow access to root user (not supported on Windows)\n      --async-read                             Use asynchronous reads (not supported on Windows) (default true)\n      --attr-timeout Duration                  Time for which file/directory attributes are cached (default 1s)\n      --daemon                                 Run mount in background and exit parent process (as background output is suppressed, use --log-file with --log-format=pid,... to monitor) (not supported on Windows)\n      --daemon-timeout Duration                Time limit for rclone to respond to kernel (not supported on Windows) (default 0s)\n      --daemon-wait Duration                   Time to wait for ready mount from daemon (maximum time on Linux, constant sleep time on OSX/BSD) (not supported on Windows) (default 1m0s)\n      --debug-fuse                             Debug the FUSE internals - needs -v\n      --default-permissions                    Makes kernel enforce access control based on the file mode (not supported on Windows)\n      --devname string                         Set the device name - default is remote:path\n      --dir-cache-time Duration                Time to cache directory entries for (default 5m0s)\n      --dir-perms FileMode                     Directory permissions (default 777)\n      --direct-io                              Use Direct IO, disables caching of data\n      --file-perms FileMode                    File permissions (default 666)\n      --fuse-flag stringArray                  Flags or arguments to be passed direct to libfuse/WinFsp (repeat if required)\n      --gid uint32                             Override the gid field set by the filesystem (not supported on Windows) (default 1000)\n  -h, --help                                   help for nfsmount\n      --link-perms FileMode                    Link permissions (default 666)\n      --max-read-ahead SizeSuffix              The number of bytes that can be prefetched for sequential reads (not supported on Windows) (default 128Ki)\n      --mount-case-insensitive Tristate        Tell the OS the mount is case insensitive (true) or sensitive (false) regardless of the backend (auto) (default unset)\n      --network-mode                           Mount as remote network drive, instead of fixed disk drive (supported on Windows only)\n      --nfs-cache-dir string                   The directory the NFS handle cache will use if set\n      --nfs-cache-handle-limit int             max file handles cached simultaneously (min 5) (default 1000000)\n      --nfs-cache-type memory|disk|symlink     Type of NFS handle cache to use (default memory)\n      --no-checksum                            Don't compare checksums on up/download\n      --no-modtime                             Don't read/write the modification time (can speed things up)\n      --no-seek                                Don't allow seeking in files\n      --noappledouble                          Ignore Apple Double (._) and .DS_Store files (supported on OSX only) (default true)\n      --noapplexattr                           Ignore all \"com.apple.*\" extended attributes (supported on OSX only)\n  -o, --option stringArray                     Option for libfuse/WinFsp (repeat if required)\n      --poll-interval Duration                 Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)\n      --read-only                              Only allow read-only access\n      --sudo                                   Use sudo to run the mount/umount commands as root.\n      --uid uint32                             Override the uid field set by the filesystem (not supported on Windows) (default 1000)\n      --umask FileMode                         Override the permission bits set by the filesystem (not supported on Windows) (default 022)\n      --vfs-block-norm-dupes                   If duplicate filenames exist in the same directory (after normalization), log an error and hide the duplicates (may have a performance cost)\n      --vfs-cache-max-age Duration             Max time since last access of objects in the cache (default 1h0m0s)\n      --vfs-cache-max-size SizeSuffix          Max total size of objects in the cache (default off)\n      --vfs-cache-min-free-space SizeSuffix    Target minimum free space on the disk containing the cache (default off)\n      --vfs-cache-mode CacheMode               Cache mode off|minimal|writes|full (default off)\n      --vfs-cache-poll-interval Duration       Interval to poll the cache for stale objects (default 1m0s)\n      --vfs-case-insensitive                   If a file name not found, find a case insensitive match\n      --vfs-disk-space-total-size SizeSuffix   Specify the total space of disk (default off)\n      --vfs-fast-fingerprint                   Use fast (less accurate) fingerprints for change detection\n      --vfs-links                              Translate symlinks to/from regular files with a '.rclonelink' extension for the VFS\n      --vfs-metadata-extension string          Set the extension to read metadata from\n      --vfs-read-ahead SizeSuffix              Extra read ahead over --buffer-size when using cache-mode full\n      --vfs-read-chunk-size SizeSuffix         Read the source objects in chunks (default 128Mi)\n      --vfs-read-chunk-size-limit SizeSuffix   If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('off' is unlimited) (default off)\n      --vfs-read-chunk-streams int             The number of parallel streams to read at once\n      --vfs-read-wait Duration                 Time to wait for in-sequence read before seeking (default 20ms)\n      --vfs-refresh                            Refreshes the directory cache recursively in the background on start\n      --vfs-used-is-size rclone size           Use the rclone size algorithm for Used size\n      --vfs-write-back Duration                Time to writeback files after last use when using cache (default 5s)\n      --vfs-write-wait Duration                Time to wait for in-sequence write before giving error (default 1s)\n      --volname string                         Set the volume name (supported on Windows and OSX only)\n      --write-back-cache                       Makes kernel buffer writes before sending them to rclone (without this, writethrough caching is used) (not supported on Windows)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--addr",
          "description": "string                            IPaddress:Port or :Port to bind server to"
        },
        {
          "flag": "--allow-non-empty",
          "description": "Allow mounting over a non-empty directory (not supported on Windows)"
        },
        {
          "flag": "--allow-other",
          "description": "Allow access to other users (not supported on Windows)"
        },
        {
          "flag": "--allow-root",
          "description": "Allow access to root user (not supported on Windows)"
        },
        {
          "flag": "--async-read",
          "description": "Use asynchronous reads (not supported on Windows) (default true)"
        },
        {
          "flag": "--attr-timeout",
          "description": "Duration                  Time for which file/directory attributes are cached (default 1s)"
        },
        {
          "flag": "--daemon",
          "description": "Run mount in background and exit parent process (as background output is suppressed, use --log-file with --log-format=pid,... to monitor) (not supported on Windows)"
        },
        {
          "flag": "--daemon-timeout",
          "description": "Duration                Time limit for rclone to respond to kernel (not supported on Windows) (default 0s)"
        },
        {
          "flag": "--daemon-wait",
          "description": "Duration                   Time to wait for ready mount from daemon (maximum time on Linux, constant sleep time on OSX/BSD) (not supported on Windows) (default 1m0s)"
        },
        {
          "flag": "--debug-fuse",
          "description": "Debug the FUSE internals - needs -v"
        },
        {
          "flag": "--default-permissions",
          "description": "Makes kernel enforce access control based on the file mode (not supported on Windows)"
        },
        {
          "flag": "--devname",
          "description": "string                         Set the device name - default is remote:path"
        },
        {
          "flag": "--dir-cache-time",
          "description": "Duration                Time to cache directory entries for (default 5m0s)"
        },
        {
          "flag": "--dir-perms",
          "description": "FileMode                     Directory permissions (default 777)"
        },
        {
          "flag": "--direct-io",
          "description": "Use Direct IO, disables caching of data"
        },
        {
          "flag": "--file-perms",
          "description": "FileMode                    File permissions (default 666)"
        },
        {
          "flag": "--fuse-flag",
          "description": "stringArray                  Flags or arguments to be passed direct to libfuse/WinFsp (repeat if required)"
        },
        {
          "flag": "--gid",
          "description": "uint32                             Override the gid field set by the filesystem (not supported on Windows) (default 1000)"
        },
        {
          "flag": "-h,",
          "description": "--help                                   help for nfsmount"
        },
        {
          "flag": "--link-perms",
          "description": "FileMode                    Link permissions (default 666)"
        },
        {
          "flag": "--max-read-ahead",
          "description": "SizeSuffix              The number of bytes that can be prefetched for sequential reads (not supported on Windows) (default 128Ki)"
        },
        {
          "flag": "--mount-case-insensitive",
          "description": "Tristate        Tell the OS the mount is case insensitive (true) or sensitive (false) regardless of the backend (auto) (default unset)"
        },
        {
          "flag": "--network-mode",
          "description": "Mount as remote network drive, instead of fixed disk drive (supported on Windows only)"
        },
        {
          "flag": "--nfs-cache-dir",
          "description": "string                   The directory the NFS handle cache will use if set"
        },
        {
          "flag": "--nfs-cache-handle-limit",
          "description": "int             max file handles cached simultaneously (min 5) (default 1000000)"
        },
        {
          "flag": "--nfs-cache-type",
          "description": "memory|disk|symlink     Type of NFS handle cache to use (default memory)"
        },
        {
          "flag": "--no-checksum",
          "description": "Don't compare checksums on up/download"
        },
        {
          "flag": "--no-modtime",
          "description": "Don't read/write the modification time (can speed things up)"
        },
        {
          "flag": "--no-seek",
          "description": "Don't allow seeking in files"
        },
        {
          "flag": "--noappledouble",
          "description": "Ignore Apple Double (._) and .DS_Store files (supported on OSX only) (default true)"
        },
        {
          "flag": "--noapplexattr",
          "description": "Ignore all \"com.apple.*\" extended attributes (supported on OSX only)"
        },
        {
          "flag": "-o,",
          "description": "--option stringArray                     Option for libfuse/WinFsp (repeat if required)"
        },
        {
          "flag": "--poll-interval",
          "description": "Duration                 Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)"
        },
        {
          "flag": "--read-only",
          "description": "Only allow read-only access"
        },
        {
          "flag": "--sudo",
          "description": "Use sudo to run the mount/umount commands as root."
        },
        {
          "flag": "--uid",
          "description": "uint32                             Override the uid field set by the filesystem (not supported on Windows) (default 1000)"
        },
        {
          "flag": "--umask",
          "description": "FileMode                         Override the permission bits set by the filesystem (not supported on Windows) (default 022)"
        },
        {
          "flag": "--vfs-block-norm-dupes",
          "description": "If duplicate filenames exist in the same directory (after normalization), log an error and hide the duplicates (may have a performance cost)"
        },
        {
          "flag": "--vfs-cache-max-age",
          "description": "Duration             Max time since last access of objects in the cache (default 1h0m0s)"
        },
        {
          "flag": "--vfs-cache-max-size",
          "description": "SizeSuffix          Max total size of objects in the cache (default off)"
        },
        {
          "flag": "--vfs-cache-min-free-space",
          "description": "SizeSuffix    Target minimum free space on the disk containing the cache (default off)"
        },
        {
          "flag": "--vfs-cache-mode",
          "description": "CacheMode               Cache mode off|minimal|writes|full (default off)"
        },
        {
          "flag": "--vfs-cache-poll-interval",
          "description": "Duration       Interval to poll the cache for stale objects (default 1m0s)"
        },
        {
          "flag": "--vfs-case-insensitive",
          "description": "If a file name not found, find a case insensitive match"
        },
        {
          "flag": "--vfs-disk-space-total-size",
          "description": "SizeSuffix   Specify the total space of disk (default off)"
        },
        {
          "flag": "--vfs-fast-fingerprint",
          "description": "Use fast (less accurate) fingerprints for change detection"
        },
        {
          "flag": "--vfs-links",
          "description": "Translate symlinks to/from regular files with a '.rclonelink' extension for the VFS"
        },
        {
          "flag": "--vfs-metadata-extension",
          "description": "string          Set the extension to read metadata from"
        },
        {
          "flag": "--vfs-read-ahead",
          "description": "SizeSuffix              Extra read ahead over --buffer-size when using cache-mode full"
        },
        {
          "flag": "--vfs-read-chunk-size",
          "description": "SizeSuffix         Read the source objects in chunks (default 128Mi)"
        },
        {
          "flag": "--vfs-read-chunk-size-limit",
          "description": "SizeSuffix   If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('off' is unlimited) (default off)"
        },
        {
          "flag": "--vfs-read-chunk-streams",
          "description": "int             The number of parallel streams to read at once"
        },
        {
          "flag": "--vfs-read-wait",
          "description": "Duration                 Time to wait for in-sequence read before seeking (default 20ms)"
        },
        {
          "flag": "--vfs-refresh",
          "description": "Refreshes the directory cache recursively in the background on start"
        },
        {
          "flag": "--vfs-used-is-size",
          "description": "rclone size           Use the rclone size algorithm for Used size"
        },
        {
          "flag": "--vfs-write-back",
          "description": "Duration                Time to writeback files after last use when using cache (default 5s)"
        },
        {
          "flag": "--vfs-write-wait",
          "description": "Duration                Time to wait for in-sequence write before giving error (default 1s)"
        },
        {
          "flag": "--volname",
          "description": "string                         Set the volume name (supported on Windows and OSX only)"
        },
        {
          "flag": "--write-back-cache",
          "description": "Makes kernel buffer writes before sending them to rclone (without this, writethrough caching is used) (not supported on Windows)"
        }
      ]
    },
    "obscure": {
      "description": "In the rclone config file, human-readable passwords are",
      "help_text": "In the rclone config file, human-readable passwords are\nobscured. Obscuring them is done by encrypting them and writing them\nout in base64. This is **not** a secure way of encrypting these\npasswords as rclone can decrypt them - it is to prevent \"eyedropping\" -\nnamely someone seeing a password in the rclone config file by accident.\n\nMany equally important things (like access tokens) are not obscured in\nthe config file. However it is very hard to shoulder surf a 64\ncharacter hex token.\n\nThis command can also accept a password through STDIN instead of an\nargument by passing a hyphen as an argument. This will use the first\nline of STDIN as the password not including the trailing newline.\n\n```sh\necho \"secretpassword\" | rclone obscure -\n```\n\nIf there is no data on STDIN to read, rclone obscure will default to\nobfuscating the hyphen itself.\n\nIf you want to encrypt the config file then please use config file\nencryption - see [rclone config](/commands/rclone_config/) for more\ninfo.\n\nUsage:\n  rclone obscure password [flags]\n\nFlags:\n  -h, --help   help for obscure\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for obscure"
        }
      ]
    },
    "purge": {
      "description": "Remove the path and all of its contents.  Note that this does not obey",
      "help_text": "Remove the path and all of its contents.  Note that this does not obey\ninclude/exclude filters - everything will be removed.  Use the\n[delete](/commands/rclone_delete/) command if you want to selectively\ndelete files. To delete empty directories only, use command\n[rmdir](/commands/rclone_rmdir/) or [rmdirs](/commands/rclone_rmdirs/).\n\nThe concurrency of this operation is controlled by the `--checkers` global flag.\nHowever, some backends will implement this command directly, in which\ncase `--checkers` will be ignored.\n\n**Important**: Since this can cause data loss, test first with the\n`--dry-run` or the `--interactive`/`-i` flag.\n\nUsage:\n  rclone purge remote:path [flags]\n\nFlags:\n  -h, --help   help for purge\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for purge"
        }
      ]
    },
    "rc": {
      "description": "This runs a command against a running rclone.  Use the `--url` flag to",
      "help_text": "This runs a command against a running rclone.  Use the `--url` flag to\nspecify an non default URL to connect on.  This can be either a\n\":port\" which is taken to mean <http://localhost:port> or a\n\"host:port\" which is taken to mean <http://host:port>.\n\nA username and password can be passed in with `--user` and `--pass`.\n\nNote that `--rc-addr`, `--rc-user`, `--rc-pass` will be read also for\n`--url`, `--user`, `--pass`.\n\nThe `--unix-socket` flag can be used to connect over a unix socket like this\n\n```sh\n# start server on /tmp/my.socket\nrclone rcd --rc-addr unix:///tmp/my.socket\n# Connect to it\nrclone rc --unix-socket /tmp/my.socket core/stats\n```\n\nArguments should be passed in as parameter=value.\n\nThe result will be returned as a JSON object by default.\n\nThe `--json` parameter can be used to pass in a JSON blob as an input\ninstead of key=value arguments.  This is the only way of passing in\nmore complicated values.\n\nThe `-o`/`--opt` option can be used to set a key \"opt\" with key, value\noptions in the form `-o key=value` or `-o key`. It can be repeated as\nmany times as required. This is useful for rc commands which take the\n\"opt\" parameter which by convention is a dictionary of strings.\n\n```text\n-o key=value -o key2\n```\n\nWill place this in the \"opt\" value\n\n```json\n{\"key\":\"value\", \"key2\",\"\")\n```\n\nThe `-a`/`--arg` option can be used to set strings in the \"arg\" value. It\ncan be repeated as many times as required. This is useful for rc\ncommands which take the \"arg\" parameter which by convention is a list\nof strings.\n\n```text\n-a value -a value2\n```\n\nWill place this in the \"arg\" value\n\n```json\n[\"value\", \"value2\"]\n```\n\nUse `--loopback` to connect to the rclone instance running `rclone rc`.\nThis is very useful for testing commands without having to run an\nrclone rc server, e.g.:\n\n```sh\nrclone rc --loopback operations/about fs=/\n```\n\nUse `rclone rc` to see a list of all possible commands.\n\nUsage:\n  rclone rc commands parameter [flags]\n\nFlags:\n  -a, --arg stringArray      Argument placed in the \"arg\" array\n  -h, --help                 help for rc\n      --json string          Input JSON - use instead of key=value args\n      --loopback             If set connect to this rclone instance not via HTTP\n      --no-output            If set, don't output the JSON result\n  -o, --opt stringArray      Option in the form name=value or name placed in the \"opt\" array\n      --pass string          Password to use to connect to rclone remote control\n      --unix-socket string   Path to a unix domain socket to dial to, instead of opening a TCP connection directly\n      --url string           URL to connect to rclone remote control (default \"http://localhost:5572/\")\n      --user string          Username to use to rclone remote control\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-a,",
          "description": "--arg stringArray      Argument placed in the \"arg\" array"
        },
        {
          "flag": "-h,",
          "description": "--help                 help for rc"
        },
        {
          "flag": "--json",
          "description": "string          Input JSON - use instead of key=value args"
        },
        {
          "flag": "--loopback",
          "description": "If set connect to this rclone instance not via HTTP"
        },
        {
          "flag": "--no-output",
          "description": "If set, don't output the JSON result"
        },
        {
          "flag": "-o,",
          "description": "--opt stringArray      Option in the form name=value or name placed in the \"opt\" array"
        },
        {
          "flag": "--pass",
          "description": "string          Password to use to connect to rclone remote control"
        },
        {
          "flag": "--unix-socket",
          "description": "string   Path to a unix domain socket to dial to, instead of opening a TCP connection directly"
        },
        {
          "flag": "--url",
          "description": "string           URL to connect to rclone remote control (default \"http://localhost:5572/\")"
        },
        {
          "flag": "--user",
          "description": "string          Username to use to rclone remote control"
        }
      ]
    },
    "rcat": {
      "description": "Reads from standard input (stdin) and copies it to a single remote file.",
      "help_text": "Reads from standard input (stdin) and copies it to a single remote file.\n\n```sh\necho \"hello world\" | rclone rcat remote:path/to/file\nffmpeg - | rclone rcat remote:path/to/file\n```\n\nIf the remote file already exists, it will be overwritten.\n\nrcat will try to upload small files in a single request, which is\nusually more efficient than the streaming/chunked upload endpoints,\nwhich use multiple requests. Exact behaviour depends on the remote.\nWhat is considered a small file may be set through\n`--streaming-upload-cutoff`. Uploading only starts after\nthe cutoff is reached or if the file ends before that. The data\nmust fit into RAM. The cutoff needs to be small enough to adhere\nthe limits of your remote, please see there. Generally speaking,\nsetting this cutoff too high will decrease your performance.\n\nUse the `--size` flag to preallocate the file in advance at the remote end\nand actually stream it, even if remote backend doesn't support streaming.\n\n`--size` should be the exact size of the input stream in bytes. If the\nsize of the stream is different in length to the `--size` passed in\nthen the transfer will likely fail.\n\nNote that the upload cannot be retried because the data is not stored.\nIf the backend supports multipart uploading then individual chunks can\nbe retried. If you need to transfer a lot of data, you may be better\noff caching it locally and then `rclone move` it to the\ndestination which can use retries.\n\nUsage:\n  rclone rcat remote:path [flags]\n\nFlags:\n  -h, --help       help for rcat\n      --size int   File size hint to preallocate (default -1)\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help       help for rcat"
        },
        {
          "flag": "--size",
          "description": "int   File size hint to preallocate (default -1)"
        }
      ]
    },
    "rcd": {
      "description": "This runs rclone so that it only listens to remote control commands.",
      "help_text": "This runs rclone so that it only listens to remote control commands.\n\nThis is useful if you are controlling rclone via the rc API.\n\nIf you pass in a path to a directory, rclone will serve that directory\nfor GET requests on the URL passed in.  It will also open the URL in\nthe browser when rclone is run.\n\nSee the [rc documentation](/rc/) for more info on the rc flags.\n\n### Server options\n\nUse `--rc-addr` to specify which IP address and port the server should\nlisten on, eg `--rc-addr 1.2.3.4:8000` or `--rc-addr :8080` to listen to all\nIPs.  By default it only listens on localhost.  You can use port\n:0 to let the OS choose an available port.\n\nIf you set `--rc-addr` to listen on a public or LAN accessible IP address\nthen using Authentication is advised - see the next section for info.\n\nYou can use a unix socket by setting the url to `unix:///path/to/socket`\nor just by using an absolute path name.\n\n`--rc-addr` may be repeated to listen on multiple IPs/ports/sockets.\nSocket activation, described further below, can also be used to accomplish the same.\n\n`--rc-server-read-timeout` and `--rc-server-write-timeout` can be used to\ncontrol the timeouts on the server.  Note that this is the total time\nfor a transfer.\n\n`--rc-max-header-bytes` controls the maximum number of bytes the server will\naccept in the HTTP header.\n\n`--rc-baseurl` controls the URL prefix that rclone serves from.  By default\nrclone will serve from the root.  If you used `--rc-baseurl \"/rclone\"` then\nrclone would serve from a URL starting with \"/rclone/\".  This is\nuseful if you wish to proxy rclone serve.  Rclone automatically\ninserts leading and trailing \"/\" on `--rc-baseurl`, so `--rc-baseurl \"rclone\"`,\n`--rc-baseurl \"/rclone\"` and `--rc-baseurl \"/rclone/\"` are all treated\nidentically.\n\n#### TLS (SSL)\n\nBy default this will serve over http.  If you want you can serve over\nhttps.  You will need to supply the `--rc-cert` and `--rc-key` flags.\nIf you wish to do client side certificate validation then you will need to\nsupply `--rc-client-ca` also.\n\n`--rc-cert` must be set to the path of a file containing\neither a PEM encoded certificate, or a concatenation of that with the CA\ncertificate. `--rc-key` must be set to the path of a file\nwith the PEM encoded private key. If setting `--rc-client-ca`,\nit should be set to the path of a file with PEM encoded client certificate\nauthority certificates.\n\n`--rc-min-tls-version` is minimum TLS version that is acceptable. Valid\nvalues are \"tls1.0\", \"tls1.1\", \"tls1.2\" and \"tls1.3\" (default \"tls1.0\").\n\n### Socket activation\n\nInstead of the listening addresses specified above, rclone will listen to all\nFDs passed by the service manager, if any (and ignore any arguments passed\nby `--rc-addr`).\n\nThis allows rclone to be a socket-activated service.\nIt can be configured with .socket and .service unit files as described in\n<https://www.freedesktop.org/software/systemd/man/latest/systemd.socket.html>.\n\nSocket activation can be tested ad-hoc with the `systemd-socket-activate`command\n\n```sh\nsystemd-socket-activate -l 8000 -- rclone serve\n```\n\nThis will socket-activate rclone on the first connection to port 8000 over TCP.\n\n#### Template\n\n`--rc-template` allows a user to specify a custom markup template for HTTP\nand WebDAV serve functions.  The server exports the following markup\nto be used within the template to server pages:\n\n| Parameter   | Description |\n| :---------- | :---------- |\n| .Name       | The full path of a file/directory. |\n| .Title      | Directory listing of .Name |\n| .Sort       | The current sort used.  This is changeable via ?sort= parameter |\n|             | Sort Options: namedirfirst,name,size,time (default namedirfirst) |\n| .Order      | The current ordering used.  This is changeable via ?order= parameter |\n|             | Order Options: asc,desc (default asc) |\n| .Query      | Currently unused. |\n| .Breadcrumb | Allows for creating a relative navigation |\n|-- .Link     | The relative to the root link of the Text. |\n|-- .Text     | The Name of the directory. |\n| .Entries    | Information about a specific file/directory. |\n|-- .URL      | The 'url' of an entry.  |\n|-- .Leaf     | Currently same as 'URL' but intended to be 'just' the name. |\n|-- .IsDir    | Boolean for if an entry is a directory or not. |\n|-- .Size     | Size in Bytes of the entry. |\n|-- .ModTime  | The UTC timestamp of an entry. |\n\nThe server also makes the following functions available so that they can be used\nwithin the template. These functions help extend the options for dynamic\nrendering of HTML. They can be used to render HTML based on specific conditions.\n\n| Function   | Description |\n| :---------- | :---------- |\n| afterEpoch  | Returns the time since the epoch for the given time. |\n| contains    | Checks whether a given substring is present or not in a given string. |\n| hasPrefix   | Checks whether the given string begins with the specified prefix. |\n| hasSuffix   | Checks whether the given string end with the specified suffix. |\n\n#### Authentication\n\nBy default this will serve files without needing a login.\n\nYou can either use an htpasswd file which can take lots of users, or\nset a single username and password with the `--rc-user` and `--rc-pass` flags.\n\nAlternatively, you can have the reverse proxy manage authentication and use the\nusername provided in the configured header with `--user-from-header`  (e.g., `--rc---user-from-header=x-remote-user`).\nEnsure the proxy is trusted and headers cannot be spoofed, as misconfiguration\nmay lead to unauthorized access.\n\nIf either of the above authentication methods is not configured and client\ncertificates are required by the `--client-ca` flag passed to the server, the\nclient certificate common name will be considered as the username.\n\nUse `--rc-htpasswd /path/to/htpasswd` to provide an htpasswd file.  This is\nin standard apache format and supports MD5, SHA1 and BCrypt for basic\nauthentication.  Bcrypt is recommended.\n\nTo create an htpasswd file:\n\n```sh\ntouch htpasswd\nhtpasswd -B htpasswd user\nhtpasswd -B htpasswd anotherUser\n```\n\nThe password file can be updated while rclone is running.\n\nUse `--rc-realm` to set the authentication realm.\n\nUse `--rc-salt` to change the password hashing salt from the default.\n\nUsage:\n  rclone rcd <path to files to serve>* [flags]\n\nFlags:\n  -h, --help   help for rcd\n\nFlags to control the Remote Control API (flag group RC):\n      --rc                                 Enable the remote control server\n      --rc-addr stringArray                IPaddress:Port or :Port to bind server to (default localhost:5572)\n      --rc-allow-origin string             Origin which cross-domain request (CORS) can be executed from\n      --rc-baseurl string                  Prefix for URLs - leave blank for root\n      --rc-cert string                     TLS PEM key (concatenation of certificate and CA certificate)\n      --rc-client-ca string                Client certificate authority to verify clients with\n      --rc-enable-metrics                  Enable the Prometheus metrics path at the remote control server\n      --rc-files string                    Path to local files to serve on the HTTP server\n      --rc-htpasswd string                 A htpasswd file - if not provided no authentication is done\n      --rc-job-expire-duration Duration    Expire finished async jobs older than this value (default 1m0s)\n      --rc-job-expire-interval Duration    Interval to check for expired async jobs (default 10s)\n      --rc-key string                      TLS PEM Private key\n      --rc-max-header-bytes int            Maximum size of request header (default 4096)\n      --rc-min-tls-version string          Minimum TLS version that is acceptable (default \"tls1.0\")\n      --rc-no-auth                         Don't require auth for certain methods\n      --rc-pass string                     Password for authentication\n      --rc-realm string                    Realm for authentication\n      --rc-salt string                     Password hashing salt (default \"dlPL2MqE\")\n      --rc-serve                           Enable the serving of remote objects\n      --rc-serve-no-modtime                Don't read the modification time (can speed things up)\n      --rc-server-read-timeout Duration    Timeout for server reading data (default 1h0m0s)\n      --rc-server-write-timeout Duration   Timeout for server writing data (default 1h0m0s)\n      --rc-template string                 User-specified template\n      --rc-user string                     User name for authentication\n      --rc-user-from-header string         User name from a defined HTTP header\n      --rc-web-fetch-url string            URL to fetch the releases for webgui (default \"https://api.github.com/repos/rclone/rclone-webui-react/releases/latest\")\n      --rc-web-gui                         Launch WebGUI on localhost\n      --rc-web-gui-force-update            Force update to latest version of web gui\n      --rc-web-gui-no-open-browser         Don't open the browser automatically\n      --rc-web-gui-update                  Check and update to latest version of web gui\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for rcd"
        }
      ]
    },
    "rmdir": {
      "description": "This removes empty directory given by path. Will not remove the path if it",
      "help_text": "This removes empty directory given by path. Will not remove the path if it\nhas any objects in it, not even empty subdirectories. Use\ncommand [rmdirs](/commands/rclone_rmdirs/) (or [delete](/commands/rclone_delete/)\nwith option `--rmdirs`) to do that.\n\nTo delete a path and any objects in it, use [purge](/commands/rclone_purge/) command.\n\nUsage:\n  rclone rmdir remote:path [flags]\n\nFlags:\n  -h, --help   help for rmdir\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for rmdir"
        }
      ]
    },
    "rmdirs": {
      "description": "This recursively removes any empty directories (including directories",
      "help_text": "This recursively removes any empty directories (including directories\nthat only contain empty directories), that it finds under the path.\nThe root path itself will also be removed if it is empty, unless\nyou supply the `--leave-root` flag.\n\nUse command [rmdir](/commands/rclone_rmdir/) to delete just the empty\ndirectory given by path, not recurse.\n\nThis is useful for tidying up remotes that rclone has left a lot of\nempty directories in. For example the [delete](/commands/rclone_delete/)\ncommand will delete files but leave the directory structure (unless\nused with option `--rmdirs`).\n\nThis will delete `--checkers` directories concurrently so\nif you have thousands of empty directories consider increasing this number.\n\nTo delete a path and any objects in it, use the [purge](/commands/rclone_purge/)\ncommand.\n\nUsage:\n  rclone rmdirs remote:path [flags]\n\nFlags:\n  -h, --help         help for rmdirs\n      --leave-root   Do not remove root directory if empty\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help         help for rmdirs"
        },
        {
          "flag": "--leave-root",
          "description": "Do not remove root directory if empty"
        }
      ]
    },
    "selfupdate": {
      "description": "This command downloads the latest release of rclone and replaces the",
      "help_text": "This command downloads the latest release of rclone and replaces the\ncurrently running binary. The download is verified with a hashsum and\ncryptographically signed signature; see [the release signing\ndocs](/release_signing/) for details.\n\nIf used without flags (or with implied `--stable` flag), this command\nwill install the latest stable release. However, some issues may be fixed\n(or features added) only in the latest beta release. In such cases you should\nrun the command with the `--beta` flag, i.e. `rclone selfupdate --beta`.\nYou can check in advance what version would be installed by adding the\n`--check` flag, then repeat the command without it when you are satisfied.\n\nSometimes the rclone team may recommend you a concrete beta or stable\nrclone release to troubleshoot your issue or add a bleeding edge feature.\nThe `--version VER` flag, if given, will update to the concrete version\ninstead of the latest one. If you omit micro version from `VER` (for\nexample `1.53`), the latest matching micro version will be used.\n\nUpon successful update rclone will print a message that contains a previous\nversion number. You will need it if you later decide to revert your update\nfor some reason. Then you'll have to note the previous version and run the\nfollowing command: `rclone selfupdate [--beta] OLDVER`.\nIf the old version contains only dots and digits (for example `v1.54.0`)\nthen it's a stable release so you won't need the `--beta` flag. Beta releases\nhave an additional information similar to `v1.54.0-beta.5111.06f1c0c61`.\n(if you are a developer and use a locally built rclone, the version number\nwill end with `-DEV`, you will have to rebuild it as it obviously can't\nbe distributed).\n\nIf you previously installed rclone via a package manager, the package may\ninclude local documentation or configure services. You may wish to update\nwith the flag `--package deb` or `--package rpm` (whichever is correct for\nyour OS) to update these too. This command with the default `--package zip`\nwill update only the rclone executable so the local manual may become\ninaccurate after it.\n\nThe [rclone mount](/commands/rclone_mount/) command may\nor may not support extended FUSE options depending on the build and OS.\n`selfupdate` will refuse to update if the capability would be discarded.\n\nNote: Windows forbids deletion of a currently running executable so this\ncommand will rename the old executable to 'rclone.old.exe' upon success.\n\nPlease note that this command was not available before rclone version 1.55.\nIf it fails for you with the message `unknown command \"selfupdate\"` then\nyou will need to update manually following the\n[install documentation](https://rclone.org/install/).\n\nUsage:\n  rclone selfupdate [flags]\n\nAliases:\n  selfupdate, self-update\n\nFlags:\n      --beta             Install beta release\n      --check            Check for latest release, do not download\n  -h, --help             help for selfupdate\n      --output string    Save the downloaded binary at a given path (default: replace running binary)\n      --package string   Package format: zip|deb|rpm (default: zip)\n      --stable           Install stable release (this is the default)\n      --version string   Install the given rclone version (default: latest)\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--beta",
          "description": "Install beta release"
        },
        {
          "flag": "--check",
          "description": "Check for latest release, do not download"
        },
        {
          "flag": "-h,",
          "description": "--help             help for selfupdate"
        },
        {
          "flag": "--output",
          "description": "string    Save the downloaded binary at a given path (default: replace running binary)"
        },
        {
          "flag": "--package",
          "description": "string   Package format: zip|deb|rpm (default: zip)"
        },
        {
          "flag": "--stable",
          "description": "Install stable release (this is the default)"
        },
        {
          "flag": "--version",
          "description": "string   Install the given rclone version (default: latest)"
        }
      ]
    },
    "serve": {
      "description": "Serve a remote over a given protocol. Requires the use of a",
      "help_text": "Serve a remote over a given protocol. Requires the use of a\nsubcommand to specify the protocol, e.g.\n\n```sh\nrclone serve http remote:\n```\n\nEach subcommand has its own options which you can see in their help.\n\nUsage:\n  rclone serve <protocol> [opts] <remote> [flags]\n  rclone serve [command]\n\nAvailable commands:\n  dlna        Serve remote:path over DLNA\n  docker      Serve any remote on docker's volume plugin API.\n  ftp         Serve remote:path over FTP.\n  http        Serve the remote over HTTP.\n  nfs         Serve the remote as an NFS mount\n  restic      Serve the remote for restic's REST API.\n  s3          Serve remote:path over s3.\n  sftp        Serve the remote over SFTP.\n  webdav      Serve remote:path over WebDAV.\n\nFlags:\n  -h, --help   help for serve\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for serve"
        }
      ]
    },
    "settier": {
      "description": "Changes storage tier or class at remote if supported. Few cloud storage",
      "help_text": "Changes storage tier or class at remote if supported. Few cloud storage\nservices provides different storage classes on objects, for example\nAWS S3 and Glacier, Azure Blob storage - Hot, Cool and Archive,\nGoogle Cloud Storage, Regional Storage, Nearline, Coldline etc.\n\nNote that, certain tier changes make objects not available to access immediately.\nFor example tiering to archive in azure blob storage makes objects in frozen state,\nuser can restore by setting tier to Hot/Cool, similarly S3 to Glacier makes object\ninaccessible.true\n\nYou can use it to tier single object\n\n```sh\nrclone settier Cool remote:path/file\n```\n\nOr use rclone filters to set tier on only specific files\n\n```sh\nrclone --include \"*.txt\" settier Hot remote:path/dir\n```\n\nOr just provide remote directory and all files in directory will be tiered\n\n```sh\nrclone settier tier remote:path/dir\n```\n\nUsage:\n  rclone settier tier remote:path [flags]\n\nFlags:\n  -h, --help   help for settier\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for settier"
        }
      ]
    },
    "sha1sum": {
      "description": "Produces an sha1sum file for all the objects in the path.  This",
      "help_text": "Produces an sha1sum file for all the objects in the path.  This\nis in the same format as the standard sha1sum tool produces.\n\nBy default, the hash is requested from the remote.  If SHA-1 is\nnot supported by the remote, no hash will be returned.  With the\ndownload flag, the file will be downloaded from the remote and\nhashed locally enabling SHA-1 for any remote.\n\nFor other algorithms, see the [hashsum](/commands/rclone_hashsum/)\ncommand. Running `rclone sha1sum remote:path` is equivalent\nto running `rclone hashsum SHA1 remote:path`.\n\nThis command can also hash data received on standard input (stdin),\nby not passing a remote:path, or by passing a hyphen as remote:path\nwhen there is data to read (if not, the hyphen will be treated literally,\nas a relative path).\n\nThis command can also hash data received on STDIN, if not passing\na remote:path.\n\nUsage:\n  rclone sha1sum remote:path [flags]\n\nFlags:\n      --base64               Output base64 encoded hashsum\n  -C, --checkfile string     Validate hashes against a given SUM file instead of printing them\n      --download             Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote\n  -h, --help                 help for sha1sum\n      --output-file string   Output hashsums to a file rather than the terminal\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--base64",
          "description": "Output base64 encoded hashsum"
        },
        {
          "flag": "-C,",
          "description": "--checkfile string     Validate hashes against a given SUM file instead of printing them"
        },
        {
          "flag": "--download",
          "description": "Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote"
        },
        {
          "flag": "-h,",
          "description": "--help                 help for sha1sum"
        },
        {
          "flag": "--output-file",
          "description": "string   Output hashsums to a file rather than the terminal"
        }
      ]
    },
    "size": {
      "description": "Counts objects in the path and calculates the total size. Prints the",
      "help_text": "Counts objects in the path and calculates the total size. Prints the\nresult to standard output.\n\nBy default the output is in human-readable format, but shows values in\nboth human-readable format as well as the raw numbers (global option\n`--human-readable` is not considered). Use option `--json`\nto format output as JSON instead.\n\nRecurses by default, use `--max-depth 1` to stop the\nrecursion.\n\nSome backends do not always provide file sizes, see for example\n[Google Photos](/googlephotos/#size) and\n[Google Docs](/drive/#limitations-of-google-docs).\nRclone will then show a notice in the log indicating how many such\nfiles were encountered, and count them in as empty files in the output\nof the size command.\n\nUsage:\n  rclone size remote:path [flags]\n\nFlags:\n  -h, --help   help for size\n      --json   Format output as JSON\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for size"
        },
        {
          "flag": "--json",
          "description": "Format output as JSON"
        }
      ]
    },
    "sync": {
      "description": "Sync the source to the destination, changing the destination",
      "help_text": "Sync the source to the destination, changing the destination\nonly.  Doesn't transfer files that are identical on source and\ndestination, testing by size and modification time or MD5SUM.\nDestination is updated to match source, including deleting files\nif necessary (except duplicate objects, see below). If you don't\nwant to delete files from destination, use the\n[copy](/commands/rclone_copy/) command instead.\n\n**Important**: Since this can cause data loss, test first with the\n`--dry-run` or the `--interactive`/`i` flag.\n\n```sh\nrclone sync --interactive SOURCE remote:DESTINATION\n```\n\nFiles in the destination won't be deleted if there were any errors at any\npoint. Duplicate objects (files with the same name, on those providers that\nsupport it) are not yet handled. Files that are excluded won't be deleted\nunless `--delete-excluded` is used. Symlinks won't be transferred or\ndeleted from local file systems unless `--links` is used.\n\nIt is always the contents of the directory that is synced, not the\ndirectory itself. So when source:path is a directory, it's the contents of\nsource:path that are copied, not the directory name and contents.  See\nextended explanation in the [copy](/commands/rclone_copy/) command if unsure.\n\nIf dest:path doesn't exist, it is created and the source:path contents\ngo there.\n\nIt is not possible to sync overlapping remotes. However, you may exclude\nthe destination from the sync with a filter rule or by putting an\nexclude-if-present file inside the destination directory and sync to a\ndestination that is inside the source directory.\n\nRclone will sync the modification times of files and directories if\nthe backend supports it. If metadata syncing is required then use the\n`--metadata` flag.\n\nNote that the modification time and metadata for the root directory\nwill **not** be synced. See <https://github.com/rclone/rclone/issues/7652>\nfor more info.\n\n**Note**: Use the `-P`/`--progress` flag to view real-time transfer statistics\n\n**Note**: Use the `rclone dedupe` command to deal with \"Duplicate\nobject/directory found in source/destination - ignoring\" errors.\nSee [this forum post](https://forum.rclone.org/t/sync-not-clearing-duplicates/14372)\nfor more info.\n\n### Logger Flags\n\nThe `--differ`, `--missing-on-dst`, `--missing-on-src`, `--match` and `--error`\nflags write paths, one per line, to the file name (or stdout if it is `-`)\nsupplied. What they write is described in the help below. For example\n`--differ` will write all paths which are present on both the source and\ndestination but different.\n\nThe `--combined` flag will write a file (or stdout) which contains all\nfile paths with a symbol and then a space and then the path to tell\nyou what happened to it. These are reminiscent of diff files.\n\n- `= path` means path was found in source and destination and was identical\n- `- path` means path was missing on the source, so only in the destination\n- `+ path` means path was missing on the destination, so only in the source\n- `* path` means path was present in source and destination but different.\n- `! path` means there was an error reading or hashing the source or dest.\n\nThe `--dest-after` flag writes a list file using the same format flags\nas [`lsf`](/commands/rclone_lsf/#synopsis) (including [customizable options\nfor hash, modtime, etc.](/commands/rclone_lsf/#synopsis))\nConceptually it is similar to rsync's `--itemize-changes`, but not identical\n-- it should output an accurate list of what will be on the destination\nafter the command is finished.\n\nWhen the `--no-traverse` flag is set, all logs involving files that exist only\non the destination will be incomplete or completely missing.\n\nNote that these logger flags have a few limitations, and certain scenarios\nare not currently supported:\n\n- `--max-duration` / `CutoffModeHard`\n- `--compare-dest` / `--copy-dest`\n- server-side moves of an entire dir at once\n- High-level retries, because there would be duplicates (use `--retries 1` to disable)\n- Possibly some unusual error scenarios\n\nNote also that each file is logged during execution, as opposed to after, so it\nis most useful as a predictor of what SHOULD happen to each file\n(which may or may not match what actually DID).\n\nUsage:\n  rclone sync source:path dest:path [flags]\n\nFlags:\n      --absolute                Put a leading / in front of path names\n      --combined string         Make a combined report of changes to this file\n      --create-empty-src-dirs   Create empty source dirs on destination after sync\n      --csv                     Output in CSV format\n      --dest-after string       Report all files that exist on the dest post-sync\n      --differ string           Report all non-matching files to this file\n  -d, --dir-slash               Append a slash to directory names (default true)\n      --dirs-only               Only list directories\n      --error string            Report all files with errors (hashing or reading) to this file\n      --files-only              Only list files (default true)\n  -F, --format string           Output format - see lsf help for details (default \"p\")\n      --hash h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")\n  -h, --help                    help for sync\n      --match string            Report all matching files to this file\n      --missing-on-dst string   Report all files missing from the destination to this file\n      --missing-on-src string   Report all files missing from the source to this file\n  -s, --separator string        Separator for the items in the format (default \";\")\n  -t, --timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)\n\nFlags for anything which can copy a file (flag group Copy):\n      --check-first                                 Do all the checks before starting transfers\n  -c, --checksum                                    Check for changes with size & checksum (if available, or fallback to size only)\n      --compare-dest stringArray                    Include additional server-side paths during comparison\n      --copy-dest stringArray                       Implies --compare-dest but also copies files from paths into destination\n      --cutoff-mode HARD|SOFT|CAUTIOUS              Mode to stop transfers when reaching the max transfer limit HARD|SOFT|CAUTIOUS (default HARD)\n      --ignore-case-sync                            Ignore case when synchronizing\n      --ignore-checksum                             Skip post copy check of checksums\n      --ignore-existing                             Skip all files that exist on destination\n      --ignore-size                                 Ignore size when skipping use modtime or checksum\n  -I, --ignore-times                                Don't skip items that match size and time - transfer all unconditionally\n      --immutable                                   Do not modify files, fail if existing files have been modified\n      --inplace                                     Download directly to destination file instead of atomic download to temp/rename\n  -l, --links                                       Translate symlinks to/from regular files with a '.rclonelink' extension\n      --max-backlog int                             Maximum number of objects in sync or check backlog (default 10000)\n      --max-duration Duration                       Maximum duration rclone will transfer data for (default 0s)\n      --max-transfer SizeSuffix                     Maximum size of data to transfer (default off)\n  -M, --metadata                                    If set, preserve metadata when copying objects\n      --modify-window Duration                      Max time diff to be considered the same (default 1ns)\n      --multi-thread-chunk-size SizeSuffix          Chunk size for multi-thread downloads / uploads, if not set by filesystem (default 64Mi)\n      --multi-thread-cutoff SizeSuffix              Use multi-thread downloads for files above this size (default 256Mi)\n      --multi-thread-streams int                    Number of streams to use for multi-thread downloads (default 4)\n      --multi-thread-write-buffer-size SizeSuffix   In memory buffer size for writing when in multi-thread mode (default 128Ki)\n      --name-transform stringArray                  Transform paths during the copy process\n      --no-check-dest                               Don't check the destination, copy regardless\n      --no-traverse                                 Don't traverse destination file system on copy\n      --no-update-dir-modtime                       Don't update directory modification times\n      --no-update-modtime                           Don't update destination modtime if files identical\n      --order-by string                             Instructions on how to order the transfers, e.g. 'size,descending'\n      --partial-suffix string                       Add partial-suffix to temporary file name when --inplace is not used (default \".partial\")\n      --refresh-times                               Refresh the modtime of remote files\n      --server-side-across-configs                  Allow server-side operations (e.g. copy) to work across different configs\n      --size-only                                   Skip based on size only, not modtime or checksum\n      --streaming-upload-cutoff SizeSuffix          Cutoff for switching to chunked upload if file size is unknown, upload starts after reaching cutoff or when file ends (default 100Ki)\n  -u, --update                                      Skip files that are newer on the destination\n\nFlags used for sync commands (flag group Sync):\n      --backup-dir string               Make backups into hierarchy based in DIR\n      --delete-after                    When synchronizing, delete files on destination after transferring (default)\n      --delete-before                   When synchronizing, delete files on destination before transferring\n      --delete-during                   When synchronizing, delete files during transfer\n      --fix-case                        Force rename of case insensitive dest to match source\n      --ignore-errors                   Delete even if there are I/O errors\n      --list-cutoff int                 To save memory, sort directory listings on disk above this threshold (default 1000000)\n      --max-delete int                  When synchronizing, limit the number of deletes (default -1)\n      --max-delete-size SizeSuffix      When synchronizing, limit the total size of deletes (default off)\n      --suffix string                   Suffix to add to changed files\n      --suffix-keep-extension           Preserve the extension when using --suffix\n      --track-renames                   When synchronizing, track file renames and do a server-side move if possible\n      --track-renames-strategy string   Strategies to use when synchronizing using track-renames hash|modtime|leaf (default \"hash\")\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--absolute",
          "description": "Put a leading / in front of path names"
        },
        {
          "flag": "--combined",
          "description": "string         Make a combined report of changes to this file"
        },
        {
          "flag": "--create-empty-src-dirs",
          "description": "Create empty source dirs on destination after sync"
        },
        {
          "flag": "--csv",
          "description": "Output in CSV format"
        },
        {
          "flag": "--dest-after",
          "description": "string       Report all files that exist on the dest post-sync"
        },
        {
          "flag": "--differ",
          "description": "string           Report all non-matching files to this file"
        },
        {
          "flag": "-d,",
          "description": "--dir-slash               Append a slash to directory names (default true)"
        },
        {
          "flag": "--dirs-only",
          "description": "Only list directories"
        },
        {
          "flag": "--error",
          "description": "string            Report all files with errors (hashing or reading) to this file"
        },
        {
          "flag": "--files-only",
          "description": "Only list files (default true)"
        },
        {
          "flag": "-F,",
          "description": "--format string           Output format - see lsf help for details (default \"p\")"
        },
        {
          "flag": "--hash",
          "description": "h                  Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default \"md5\")"
        },
        {
          "flag": "-h,",
          "description": "--help                    help for sync"
        },
        {
          "flag": "--match",
          "description": "string            Report all matching files to this file"
        },
        {
          "flag": "--missing-on-dst",
          "description": "string   Report all files missing from the destination to this file"
        },
        {
          "flag": "--missing-on-src",
          "description": "string   Report all files missing from the source to this file"
        },
        {
          "flag": "-s,",
          "description": "--separator string        Separator for the items in the format (default \";\")"
        },
        {
          "flag": "-t,",
          "description": "--timeformat string       Specify a custom time format, or 'max' for max precision supported by remote (default: 2006-01-02 15:04:05)"
        }
      ]
    },
    "test": {
      "description": "Rclone test is used to run test commands.",
      "help_text": "Rclone test is used to run test commands.\n\nSelect which test command you want with the subcommand, eg\n\n```sh\nrclone test memory remote:\n```\n\nEach subcommand has its own options which you can see in their help.\n\n**NB** Be careful running these commands, they may do strange things\nso reading their documentation first is recommended.\n\nUsage:\n  rclone test [command]\n\nAvailable commands:\n  changenotify Log any change notify requests for the remote passed in.\n  histogram    Makes a histogram of file name characters.\n  info         Discovers file name or other limitations for paths.\n  makefile     Make files with random contents of the size given\n  makefiles    Make a random file hierarchy in a directory\n  memory       Load all the objects at remote:path into memory and report memory stats.\n\nFlags:\n  -h, --help   help for test\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help   help for test"
        }
      ]
    },
    "touch": {
      "description": "Set the modification time on file(s) as specified by remote:path to",
      "help_text": "Set the modification time on file(s) as specified by remote:path to\nhave the current time.\n\nIf remote:path does not exist then a zero sized file will be created,\nunless `--no-create` or `--recursive` is provided.\n\nIf `--recursive` is used then recursively sets the modification\ntime on all existing files that is found under the path. Filters are supported,\nand you can test with the `--dry-run` or the `--interactive`/`-i` flag.\nThis will touch `--transfers` files concurrently.\n\nIf `--timestamp` is used then sets the modification time to that\ntime instead of the current time. Times may be specified as one of:\n\n- 'YYMMDD' - e.g. 17.10.30\n- 'YYYY-MM-DDTHH:MM:SS' - e.g. 2006-01-02T15:04:05\n- 'YYYY-MM-DDTHH:MM:SS.SSS' - e.g. 2006-01-02T15:04:05.123456789\n\nNote that value of `--timestamp` is in UTC. If you want local time\nthen add the `--localtime` flag.\n\nUsage:\n  rclone touch remote:path [flags]\n\nFlags:\n  -h, --help               help for touch\n      --localtime          Use localtime for timestamp, not UTC\n  -C, --no-create          Do not create the file if it does not exist (implied with --recursive)\n  -R, --recursive          Recursively touch all files\n  -t, --timestamp string   Use specified time instead of the current time of day\n\nImportant flags useful for most commands (flag group Important):\n  -n, --dry-run         Do a trial run with no permanent changes\n  -i, --interactive     Enable interactive mode\n  -v, --verbose count   Print lots more stuff (repeat for more)\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-h,",
          "description": "--help               help for touch"
        },
        {
          "flag": "--localtime",
          "description": "Use localtime for timestamp, not UTC"
        },
        {
          "flag": "-C,",
          "description": "--no-create          Do not create the file if it does not exist (implied with --recursive)"
        },
        {
          "flag": "-R,",
          "description": "--recursive          Recursively touch all files"
        },
        {
          "flag": "-t,",
          "description": "--timestamp string   Use specified time instead of the current time of day"
        }
      ]
    },
    "tree": {
      "description": "Lists the contents of a remote in a similar way to the unix tree command.",
      "help_text": "Lists the contents of a remote in a similar way to the unix tree command.\n\nFor example\n\n```text\n$ rclone tree remote:path\n/\n\u251c\u2500\u2500 file1\n\u251c\u2500\u2500 file2\n\u251c\u2500\u2500 file3\n\u2514\u2500\u2500 subdir\n    \u251c\u2500\u2500 file4\n    \u2514\u2500\u2500 file5\n\n1 directories, 5 files\n```\n\nYou can use any of the filtering options with the tree command (e.g.\n`--include` and `--exclude`.  You can also use `--fast-list`.\n\nThe tree command has many options for controlling the listing which\nare compatible with the tree command, for example you can include file\nsizes with `--size`.  Note that not all of them have\nshort options as they conflict with rclone's short options.\n\nFor a more interactive navigation of the remote see the\n[ncdu](/commands/rclone_ncdu/) command.\n\nUsage:\n  rclone tree remote:path [flags]\n\nFlags:\n  -a, --all             All files are listed (list . files too)\n  -d, --dirs-only       List directories only\n      --dirsfirst       List directories before files (-U disables)\n      --full-path       Print the full path prefix for each file\n  -h, --help            help for tree\n      --level int       Descend only level directories deep\n  -D, --modtime         Print the date of last modification.\n      --noindent        Don't print indentation lines\n      --noreport        Turn off file/directory count at end of tree listing\n  -o, --output string   Output to file instead of stdout\n  -p, --protections     Print the protections for each file.\n  -Q, --quote           Quote filenames with double quotes.\n  -s, --size            Print the size in bytes of each file.\n      --sort string     Select sort: name,version,size,mtime,ctime\n      --sort-ctime      Sort files by last status change time\n  -t, --sort-modtime    Sort files by last modification time\n  -r, --sort-reverse    Reverse the order of the sort\n  -U, --unsorted        Leave files unsorted\n      --version         Sort files alphanumerically by version\n\nFlags for filtering directory listings (flag group Filter):\n      --delete-excluded                     Delete files on dest excluded from sync\n      --exclude stringArray                 Exclude files matching pattern\n      --exclude-from stringArray            Read file exclude patterns from file (use - to read from stdin)\n      --exclude-if-present stringArray      Exclude directories if filename is present\n      --files-from stringArray              Read list of source-file names from file (use - to read from stdin)\n      --files-from-raw stringArray          Read list of source-file names from file without any processing of lines (use - to read from stdin)\n  -f, --filter stringArray                  Add a file filtering rule\n      --filter-from stringArray             Read file filtering patterns from a file (use - to read from stdin)\n      --hash-filter string                  Partition filenames by hash k/n or randomly @/n\n      --ignore-case                         Ignore case in filters (case insensitive)\n      --include stringArray                 Include files matching pattern\n      --include-from stringArray            Read file include patterns from file (use - to read from stdin)\n      --max-age Duration                    Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --max-depth int                       If set limits the recursion depth to this (default -1)\n      --max-size SizeSuffix                 Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)\n      --metadata-exclude stringArray        Exclude metadatas matching pattern\n      --metadata-exclude-from stringArray   Read metadata exclude patterns from file (use - to read from stdin)\n      --metadata-filter stringArray         Add a metadata filtering rule\n      --metadata-filter-from stringArray    Read metadata filtering patterns from a file (use - to read from stdin)\n      --metadata-include stringArray        Include metadatas matching pattern\n      --metadata-include-from stringArray   Read metadata include patterns from file (use - to read from stdin)\n      --min-age Duration                    Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)\n      --min-size SizeSuffix                 Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)\n\nFlags for listing directories (flag group Listing):\n      --default-time Time   Time to show if modtime is unknown for files and directories (default 2000-01-01T00:00:00Z)\n      --fast-list           Use recursive list if available; uses more memory but fewer transactions\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "-a,",
          "description": "--all             All files are listed (list . files too)"
        },
        {
          "flag": "-d,",
          "description": "--dirs-only       List directories only"
        },
        {
          "flag": "--dirsfirst",
          "description": "List directories before files (-U disables)"
        },
        {
          "flag": "--full-path",
          "description": "Print the full path prefix for each file"
        },
        {
          "flag": "-h,",
          "description": "--help            help for tree"
        },
        {
          "flag": "--level",
          "description": "int       Descend only level directories deep"
        },
        {
          "flag": "-D,",
          "description": "--modtime         Print the date of last modification."
        },
        {
          "flag": "--noindent",
          "description": "Don't print indentation lines"
        },
        {
          "flag": "--noreport",
          "description": "Turn off file/directory count at end of tree listing"
        },
        {
          "flag": "-o,",
          "description": "--output string   Output to file instead of stdout"
        },
        {
          "flag": "-p,",
          "description": "--protections     Print the protections for each file."
        },
        {
          "flag": "-Q,",
          "description": "--quote           Quote filenames with double quotes."
        },
        {
          "flag": "-s,",
          "description": "--size            Print the size in bytes of each file."
        },
        {
          "flag": "--sort",
          "description": "string     Select sort: name,version,size,mtime,ctime"
        },
        {
          "flag": "--sort-ctime",
          "description": "Sort files by last status change time"
        },
        {
          "flag": "-t,",
          "description": "--sort-modtime    Sort files by last modification time"
        },
        {
          "flag": "-r,",
          "description": "--sort-reverse    Reverse the order of the sort"
        },
        {
          "flag": "-U,",
          "description": "--unsorted        Leave files unsorted"
        },
        {
          "flag": "--version",
          "description": "Sort files alphanumerically by version"
        }
      ]
    },
    "version": {
      "description": "Show the rclone version number, the go version, the build target",
      "help_text": "Show the rclone version number, the go version, the build target\nOS and architecture, the runtime OS and kernel version and bitness,\nbuild tags and the type of executable (static or dynamic).\n\nFor example:\n\n```sh\n$ rclone version\nrclone v1.55.0\n- os/version: ubuntu 18.04 (64 bit)\n- os/kernel: 4.15.0-136-generic (x86_64)\n- os/type: linux\n- os/arch: amd64\n- go/version: go1.16\n- go/linking: static\n- go/tags: none\n```\n\nNote: before rclone version 1.55 the os/type and os/arch lines were merged,\n      and the \"go/version\" line was tagged as \"go version\".\n\nIf you supply the --check flag, then it will do an online check to\ncompare your version with the latest release and the latest beta.\n\n```sh\n$ rclone version --check\nyours:  1.42.0.6\nlatest: 1.42          (released 2018-06-16)\nbeta:   1.42.0.5      (released 2018-06-17)\n```\n\nOr\n\n```sh\n$ rclone version --check\nyours:  1.41\nlatest: 1.42          (released 2018-06-16)\n  upgrade: https://downloads.rclone.org/v1.42\nbeta:   1.42.0.5      (released 2018-06-17)\n  upgrade: https://beta.rclone.org/v1.42-005-g56e1e820\n```\n\nIf you supply the --deps flag then rclone will print a list of all the\npackages it depends on and their versions along with some other\ninformation about the build.\n\nUsage:\n  rclone version [flags]\n\nFlags:\n      --check   Check for new version\n      --deps    Show the Go dependencies\n  -h, --help    help for version\n\nUse \"rclone [command] --help\" for more information about a command.\nUse \"rclone help flags\" for to see the global flags.\nUse \"rclone help backends\" for a list of supported services.\n",
      "flags": [
        {
          "flag": "--check",
          "description": "Check for new version"
        },
        {
          "flag": "--deps",
          "description": "Show the Go dependencies"
        },
        {
          "flag": "-h,",
          "description": "--help    help for version"
        }
      ]
    }
  }
}