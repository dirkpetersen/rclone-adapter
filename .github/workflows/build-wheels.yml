name: Build Wheels

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2022, macos-12, macos-14]
    env:
      CIBW_SKIP: "pp* *musllinux* *win32"
      CIBW_ARCHS_LINUX: x86_64 aarch64
      CIBW_ARCHS_MACOS: x86_64 arm64
      CIBW_ENVIRONMENT_PASS_LINUX: CIBW_ARCHS_LINUX
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (for ARM64 on Linux)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Download rclone binaries (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p rclone/bin

          # x86_64
          wget -q https://downloads.rclone.org/rclone-current-linux-amd64.zip -O /tmp/rclone-linux-amd64.zip
          unzip -q /tmp/rclone-linux-amd64.zip -d /tmp/
          find /tmp -maxdepth 3 -name "rclone" -type f | grep -v '^\.' | head -1 | xargs -I {} cp {} rclone/bin/rclone-linux-amd64
          chmod +x rclone/bin/rclone-linux-amd64

          # arm64
          wget -q https://downloads.rclone.org/rclone-current-linux-arm64.zip -O /tmp/rclone-linux-arm64.zip
          unzip -q /tmp/rclone-linux-arm64.zip -d /tmp/
          find /tmp -maxdepth 3 -name "rclone" -type f | grep -v '^\.' | tail -1 | xargs -I {} cp {} rclone/bin/rclone-linux-arm64
          chmod +x rclone/bin/rclone-linux-arm64

      - name: Download rclone binaries (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p rclone/bin

          # Intel x86_64
          wget -q https://downloads.rclone.org/rclone-current-osx-amd64.zip -O /tmp/rclone-macos-amd64.zip
          unzip -q /tmp/rclone-macos-amd64.zip -d /tmp/
          find /tmp -maxdepth 3 -name "rclone" -type f | grep -v '^\.' | head -1 | xargs -I {} cp {} rclone/bin/rclone-macos-x86_64
          chmod +x rclone/bin/rclone-macos-x86_64

          # ARM64 (Apple Silicon)
          wget -q https://downloads.rclone.org/rclone-current-osx-arm64.zip -O /tmp/rclone-macos-arm64.zip
          unzip -q /tmp/rclone-macos-arm64.zip -d /tmp/
          find /tmp -maxdepth 3 -name "rclone" -type f | grep -v '^\.' | tail -1 | xargs -I {} cp {} rclone/bin/rclone-macos-arm64
          chmod +x rclone/bin/rclone-macos-arm64

      - name: Download rclone binaries (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          New-Item -Path "rclone/bin" -ItemType Directory -Force | Out-Null

          # Windows x86_64
          Invoke-WebRequest -Uri "https://downloads.rclone.org/rclone-current-windows-amd64.zip" -OutFile "$env:TEMP/rclone-windows-amd64.zip"
          Expand-Archive -Path "$env:TEMP/rclone-windows-amd64.zip" -DestinationPath "$env:TEMP/rclone-amd64"
          Get-ChildItem -Path "$env:TEMP/rclone-amd64" -Filter "rclone.exe" -Recurse | Select-Object -First 1 | Copy-Item -Destination "rclone/bin/rclone-windows-amd64.exe"

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_BUILD: "cp{310,311,312,313,314}-*"
          CIBW_BEFORE_BUILD: "pip install -e ."
          CIBW_TEST_COMMAND: "python -c 'from rclone import RClone; print(\"âœ“ Import successful\")'"

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
          retention-days: 7

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download rclone binaries for sdist
        run: |
          mkdir -p rclone/bin

          # x86_64
          wget -q https://downloads.rclone.org/rclone-current-linux-amd64.zip -O /tmp/rclone-linux-amd64.zip
          unzip -q /tmp/rclone-linux-amd64.zip -d /tmp/
          find /tmp -maxdepth 3 -name "rclone" -type f | grep -v '^\.' | head -1 | xargs -I {} cp {} rclone/bin/rclone-linux-amd64
          chmod +x rclone/bin/rclone-linux-amd64

      - name: Build sdist
        run: |
          pip install build
          python -m build --sdist

      - name: Upload sdist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          retention-days: 7

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/rclone-adapter
    permissions:
      id-token: write
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Verify distributions
        run: |
          ls -lh dist/
          python -m pip install --upgrade twine
          python -m twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/
          skip-existing: true

  publish-to-test-pypi:
    name: Publish to TestPyPI
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/rclone-adapter
    permissions:
      id-token: write
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Verify distributions
        run: |
          ls -lh dist/
          python -m pip install --upgrade twine
          python -m twine check dist/*

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
